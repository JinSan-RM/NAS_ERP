{"version":3,"file":"index-ee2e6ad1.js","sources":["../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/jsx-runtime.js","../../../node_modules/react-dom/client.js","../../../node_modules/clsx/dist/clsx.m.js","../../../node_modules/react-toastify/dist/react-toastify.esm.mjs","../../src/styles/theme.ts","../../src/components/inventory/common/Sidebar.tsx","../../src/components/common/Header.tsx","../../src/components/inventory/common/Layout.tsx","../../src/components/common/LoadingSpinner.tsx","../../src/services/api.ts","../../src/components/dashboard/DashboardPage.tsx","../../src/components/common/Table.tsx","../../src/components/common/Pagination.tsx","../../src/components/inventory/InventoryForm.tsx","../../src/components/inventory/InventoryFilters.tsx","../../src/hooks/useInventory.ts","../../src/components/inventory/InventoryPage.tsx","../../src/components/receipt/ReceiptPage.tsx","../../src/components/common/Select.tsx","../../src/types/index.ts","../../src/components/purshase/PurchaseRequestForm.tsx","../../src/components/common/Input.tsx","../../src/components/common/Button.tsx","../../src/components/purshase/PurchaseRequestFilters.tsx","../../src/components/common/Modal.tsx","../../src/components/purshase/ApprovalModal.tsx","../../src/components/purshase/RequestDetailModal.tsx","../../src/hooks/usePurchaseRequests.ts","../../src/components/purshase/PurchaseRequestPage.tsx","../../src/components/kakao/KakaoPage.tsx","../../src/components/upload/UploadPage.tsx","../../src/components/statistics/StatisticsPage.tsx","../../src/components/logs/LogsPage.tsx","../../src/app.tsx","../../src/index.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","'use client';\nimport t,{isValidElement as e,useRef as n,useLayoutEffect as o,useEffect as s,cloneElement as a,useReducer as r,useState as i,forwardRef as l}from\"react\";import c from\"clsx\";const u=t=>\"number\"==typeof t&&!isNaN(t),d=t=>\"string\"==typeof t,p=t=>\"function\"==typeof t,m=t=>d(t)||p(t)?t:null,f=t=>e(t)||d(t)||p(t)||u(t);function g(t,e,n){void 0===n&&(n=300);const{scrollHeight:o,style:s}=t;requestAnimationFrame(()=>{s.minHeight=\"initial\",s.height=o+\"px\",s.transition=`all ${n}ms`,requestAnimationFrame(()=>{s.height=\"0\",s.padding=\"0\",s.margin=\"0\",setTimeout(e,n)})})}function h(e){let{enter:a,exit:r,appendPosition:i=!1,collapse:l=!0,collapseDuration:c=300}=e;return function(e){let{children:u,position:d,preventExitTransition:p,done:m,nodeRef:f,isIn:h}=e;const y=i?`${a}--${d}`:a,v=i?`${r}--${d}`:r,T=n(0);return o(()=>{const t=f.current,e=y.split(\" \"),n=o=>{o.target===f.current&&(t.dispatchEvent(new Event(\"d\")),t.removeEventListener(\"animationend\",n),t.removeEventListener(\"animationcancel\",n),0===T.current&&\"animationcancel\"!==o.type&&t.classList.remove(...e))};t.classList.add(...e),t.addEventListener(\"animationend\",n),t.addEventListener(\"animationcancel\",n)},[]),s(()=>{const t=f.current,e=()=>{t.removeEventListener(\"animationend\",e),l?g(t,m,c):m()};h||(p?e():(T.current=1,t.className+=` ${v}`,t.addEventListener(\"animationend\",e)))},[h]),t.createElement(t.Fragment,null,u)}}function y(t,e){return null!=t?{content:t.content,containerId:t.props.containerId,id:t.props.toastId,theme:t.props.theme,type:t.props.type,data:t.props.data||{},isLoading:t.props.isLoading,icon:t.props.icon,status:e}:{}}const v={list:new Map,emitQueue:new Map,on(t,e){return this.list.has(t)||this.list.set(t,[]),this.list.get(t).push(e),this},off(t,e){if(e){const n=this.list.get(t).filter(t=>t!==e);return this.list.set(t,n),this}return this.list.delete(t),this},cancelEmit(t){const e=this.emitQueue.get(t);return e&&(e.forEach(clearTimeout),this.emitQueue.delete(t)),this},emit(t){this.list.has(t)&&this.list.get(t).forEach(e=>{const n=setTimeout(()=>{e(...[].slice.call(arguments,1))},0);this.emitQueue.has(t)||this.emitQueue.set(t,[]),this.emitQueue.get(t).push(n)})}},T=e=>{let{theme:n,type:o,...s}=e;return t.createElement(\"svg\",{viewBox:\"0 0 24 24\",width:\"100%\",height:\"100%\",fill:\"colored\"===n?\"currentColor\":`var(--toastify-icon-color-${o})`,...s})},E={info:function(e){return t.createElement(T,{...e},t.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"}))},warning:function(e){return t.createElement(T,{...e},t.createElement(\"path\",{d:\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"}))},success:function(e){return t.createElement(T,{...e},t.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"}))},error:function(e){return t.createElement(T,{...e},t.createElement(\"path\",{d:\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"}))},spinner:function(){return t.createElement(\"div\",{className:\"Toastify__spinner\"})}};function C(t){const[,o]=r(t=>t+1,0),[l,c]=i([]),g=n(null),h=n(new Map).current,T=t=>-1!==l.indexOf(t),C=n({toastKey:1,displayedToast:0,count:0,queue:[],props:t,containerId:null,isToastActive:T,getToast:t=>h.get(t)}).current;function b(t){let{containerId:e}=t;const{limit:n}=C.props;!n||e&&C.containerId!==e||(C.count-=C.queue.length,C.queue=[])}function I(t){c(e=>null==t?[]:e.filter(e=>e!==t))}function _(){const{toastContent:t,toastProps:e,staleId:n}=C.queue.shift();O(t,e,n)}function L(t,n){let{delay:s,staleId:r,...i}=n;if(!f(t)||function(t){return!g.current||C.props.enableMultiContainer&&t.containerId!==C.props.containerId||h.has(t.toastId)&&null==t.updateId}(i))return;const{toastId:l,updateId:c,data:T}=i,{props:b}=C,L=()=>I(l),N=null==c;N&&C.count++;const M={...b,style:b.toastStyle,key:C.toastKey++,...Object.fromEntries(Object.entries(i).filter(t=>{let[e,n]=t;return null!=n})),toastId:l,updateId:c,data:T,closeToast:L,isIn:!1,className:m(i.className||b.toastClassName),bodyClassName:m(i.bodyClassName||b.bodyClassName),progressClassName:m(i.progressClassName||b.progressClassName),autoClose:!i.isLoading&&(R=i.autoClose,w=b.autoClose,!1===R||u(R)&&R>0?R:w),deleteToast(){const t=y(h.get(l),\"removed\");h.delete(l),v.emit(4,t);const e=C.queue.length;if(C.count=null==l?C.count-C.displayedToast:C.count-1,C.count<0&&(C.count=0),e>0){const t=null==l?C.props.limit:1;if(1===e||1===t)C.displayedToast++,_();else{const n=t>e?e:t;C.displayedToast=n;for(let t=0;t<n;t++)_()}}else o()}};var R,w;M.iconOut=function(t){let{theme:n,type:o,isLoading:s,icon:r}=t,i=null;const l={theme:n,type:o};return!1===r||(p(r)?i=r(l):e(r)?i=a(r,l):d(r)||u(r)?i=r:s?i=E.spinner():(t=>t in E)(o)&&(i=E[o](l))),i}(M),p(i.onOpen)&&(M.onOpen=i.onOpen),p(i.onClose)&&(M.onClose=i.onClose),M.closeButton=b.closeButton,!1===i.closeButton||f(i.closeButton)?M.closeButton=i.closeButton:!0===i.closeButton&&(M.closeButton=!f(b.closeButton)||b.closeButton);let x=t;e(t)&&!d(t.type)?x=a(t,{closeToast:L,toastProps:M,data:T}):p(t)&&(x=t({closeToast:L,toastProps:M,data:T})),b.limit&&b.limit>0&&C.count>b.limit&&N?C.queue.push({toastContent:x,toastProps:M,staleId:r}):u(s)?setTimeout(()=>{O(x,M,r)},s):O(x,M,r)}function O(t,e,n){const{toastId:o}=e;n&&h.delete(n);const s={content:t,props:e};h.set(o,s),c(t=>[...t,o].filter(t=>t!==n)),v.emit(4,y(s,null==s.props.updateId?\"added\":\"updated\"))}return s(()=>(C.containerId=t.containerId,v.cancelEmit(3).on(0,L).on(1,t=>g.current&&I(t)).on(5,b).emit(2,C),()=>{h.clear(),v.emit(3,C)}),[]),s(()=>{C.props=t,C.isToastActive=T,C.displayedToast=l.length}),{getToastToRender:function(e){const n=new Map,o=Array.from(h.values());return t.newestOnTop&&o.reverse(),o.forEach(t=>{const{position:e}=t.props;n.has(e)||n.set(e,[]),n.get(e).push(t)}),Array.from(n,t=>e(t[0],t[1]))},containerRef:g,isToastActive:T}}function b(t){return t.targetTouches&&t.targetTouches.length>=1?t.targetTouches[0].clientX:t.clientX}function I(t){return t.targetTouches&&t.targetTouches.length>=1?t.targetTouches[0].clientY:t.clientY}function _(t){const[o,a]=i(!1),[r,l]=i(!1),c=n(null),u=n({start:0,x:0,y:0,delta:0,removalDistance:0,canCloseOnClick:!0,canDrag:!1,boundingRect:null,didMove:!1}).current,d=n(t),{autoClose:m,pauseOnHover:f,closeToast:g,onClick:h,closeOnClick:y}=t;function v(e){if(t.draggable){\"touchstart\"===e.nativeEvent.type&&e.nativeEvent.preventDefault(),u.didMove=!1,document.addEventListener(\"mousemove\",_),document.addEventListener(\"mouseup\",L),document.addEventListener(\"touchmove\",_),document.addEventListener(\"touchend\",L);const n=c.current;u.canCloseOnClick=!0,u.canDrag=!0,u.boundingRect=n.getBoundingClientRect(),n.style.transition=\"\",u.x=b(e.nativeEvent),u.y=I(e.nativeEvent),\"x\"===t.draggableDirection?(u.start=u.x,u.removalDistance=n.offsetWidth*(t.draggablePercent/100)):(u.start=u.y,u.removalDistance=n.offsetHeight*(80===t.draggablePercent?1.5*t.draggablePercent:t.draggablePercent/100))}}function T(e){if(u.boundingRect){const{top:n,bottom:o,left:s,right:a}=u.boundingRect;\"touchend\"!==e.nativeEvent.type&&t.pauseOnHover&&u.x>=s&&u.x<=a&&u.y>=n&&u.y<=o?C():E()}}function E(){a(!0)}function C(){a(!1)}function _(e){const n=c.current;u.canDrag&&n&&(u.didMove=!0,o&&C(),u.x=b(e),u.y=I(e),u.delta=\"x\"===t.draggableDirection?u.x-u.start:u.y-u.start,u.start!==u.x&&(u.canCloseOnClick=!1),n.style.transform=`translate${t.draggableDirection}(${u.delta}px)`,n.style.opacity=\"\"+(1-Math.abs(u.delta/u.removalDistance)))}function L(){document.removeEventListener(\"mousemove\",_),document.removeEventListener(\"mouseup\",L),document.removeEventListener(\"touchmove\",_),document.removeEventListener(\"touchend\",L);const e=c.current;if(u.canDrag&&u.didMove&&e){if(u.canDrag=!1,Math.abs(u.delta)>u.removalDistance)return l(!0),void t.closeToast();e.style.transition=\"transform 0.2s, opacity 0.2s\",e.style.transform=`translate${t.draggableDirection}(0)`,e.style.opacity=\"1\"}}s(()=>{d.current=t}),s(()=>(c.current&&c.current.addEventListener(\"d\",E,{once:!0}),p(t.onOpen)&&t.onOpen(e(t.children)&&t.children.props),()=>{const t=d.current;p(t.onClose)&&t.onClose(e(t.children)&&t.children.props)}),[]),s(()=>(t.pauseOnFocusLoss&&(document.hasFocus()||C(),window.addEventListener(\"focus\",E),window.addEventListener(\"blur\",C)),()=>{t.pauseOnFocusLoss&&(window.removeEventListener(\"focus\",E),window.removeEventListener(\"blur\",C))}),[t.pauseOnFocusLoss]);const O={onMouseDown:v,onTouchStart:v,onMouseUp:T,onTouchEnd:T};return m&&f&&(O.onMouseEnter=C,O.onMouseLeave=E),y&&(O.onClick=t=>{h&&h(t),u.canCloseOnClick&&g()}),{playToast:E,pauseToast:C,isRunning:o,preventExitTransition:r,toastRef:c,eventHandlers:O}}function L(e){let{closeToast:n,theme:o,ariaLabel:s=\"close\"}=e;return t.createElement(\"button\",{className:`Toastify__close-button Toastify__close-button--${o}`,type:\"button\",onClick:t=>{t.stopPropagation(),n(t)},\"aria-label\":s},t.createElement(\"svg\",{\"aria-hidden\":\"true\",viewBox:\"0 0 14 16\"},t.createElement(\"path\",{fillRule:\"evenodd\",d:\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"})))}function O(e){let{delay:n,isRunning:o,closeToast:s,type:a=\"default\",hide:r,className:i,style:l,controlledProgress:u,progress:d,rtl:m,isIn:f,theme:g}=e;const h=r||u&&0===d,y={...l,animationDuration:`${n}ms`,animationPlayState:o?\"running\":\"paused\",opacity:h?0:1};u&&(y.transform=`scaleX(${d})`);const v=c(\"Toastify__progress-bar\",u?\"Toastify__progress-bar--controlled\":\"Toastify__progress-bar--animated\",`Toastify__progress-bar-theme--${g}`,`Toastify__progress-bar--${a}`,{\"Toastify__progress-bar--rtl\":m}),T=p(i)?i({rtl:m,type:a,defaultClassName:v}):c(v,i);return t.createElement(\"div\",{role:\"progressbar\",\"aria-hidden\":h?\"true\":\"false\",\"aria-label\":\"notification timer\",className:T,style:y,[u&&d>=1?\"onTransitionEnd\":\"onAnimationEnd\"]:u&&d<1?null:()=>{f&&s()}})}const N=n=>{const{isRunning:o,preventExitTransition:s,toastRef:r,eventHandlers:i}=_(n),{closeButton:l,children:u,autoClose:d,onClick:m,type:f,hideProgressBar:g,closeToast:h,transition:y,position:v,className:T,style:E,bodyClassName:C,bodyStyle:b,progressClassName:I,progressStyle:N,updateId:M,role:R,progress:w,rtl:x,toastId:$,deleteToast:k,isIn:P,isLoading:B,iconOut:D,closeOnClick:A,theme:z}=n,F=c(\"Toastify__toast\",`Toastify__toast-theme--${z}`,`Toastify__toast--${f}`,{\"Toastify__toast--rtl\":x},{\"Toastify__toast--close-on-click\":A}),H=p(T)?T({rtl:x,position:v,type:f,defaultClassName:F}):c(F,T),S=!!w||!d,q={closeToast:h,type:f,theme:z};let Q=null;return!1===l||(Q=p(l)?l(q):e(l)?a(l,q):L(q)),t.createElement(y,{isIn:P,done:k,position:v,preventExitTransition:s,nodeRef:r},t.createElement(\"div\",{id:$,onClick:m,className:H,...i,style:E,ref:r},t.createElement(\"div\",{...P&&{role:R},className:p(C)?C({type:f}):c(\"Toastify__toast-body\",C),style:b},null!=D&&t.createElement(\"div\",{className:c(\"Toastify__toast-icon\",{\"Toastify--animate-icon Toastify__zoom-enter\":!B})},D),t.createElement(\"div\",null,u)),Q,t.createElement(O,{...M&&!S?{key:`pb-${M}`}:{},rtl:x,theme:z,delay:d,isRunning:o,isIn:P,closeToast:h,hide:g,type:f,style:N,className:I,controlledProgress:S,progress:w||0})))},M=function(t,e){return void 0===e&&(e=!1),{enter:`Toastify--animate Toastify__${t}-enter`,exit:`Toastify--animate Toastify__${t}-exit`,appendPosition:e}},R=h(M(\"bounce\",!0)),w=h(M(\"slide\",!0)),x=h(M(\"zoom\")),$=h(M(\"flip\")),k=l((e,n)=>{const{getToastToRender:o,containerRef:a,isToastActive:r}=C(e),{className:i,style:l,rtl:u,containerId:d}=e;function f(t){const e=c(\"Toastify__toast-container\",`Toastify__toast-container--${t}`,{\"Toastify__toast-container--rtl\":u});return p(i)?i({position:t,rtl:u,defaultClassName:e}):c(e,m(i))}return s(()=>{n&&(n.current=a.current)},[]),t.createElement(\"div\",{ref:a,className:\"Toastify\",id:d},o((e,n)=>{const o=n.length?{...l}:{...l,pointerEvents:\"none\"};return t.createElement(\"div\",{className:f(e),style:o,key:`container-${e}`},n.map((e,o)=>{let{content:s,props:a}=e;return t.createElement(N,{...a,isIn:r(a.toastId),style:{...a.style,\"--nth\":o+1,\"--len\":n.length},key:`toast-${a.key}`},s)}))}))});k.displayName=\"ToastContainer\",k.defaultProps={position:\"top-right\",transition:R,autoClose:5e3,closeButton:L,pauseOnHover:!0,pauseOnFocusLoss:!0,closeOnClick:!0,draggable:!0,draggablePercent:80,draggableDirection:\"x\",role:\"alert\",theme:\"light\"};let P,B=new Map,D=[],A=1;function z(){return\"\"+A++}function F(t){return t&&(d(t.toastId)||u(t.toastId))?t.toastId:z()}function H(t,e){return B.size>0?v.emit(0,t,e):D.push({content:t,options:e}),e.toastId}function S(t,e){return{...e,type:e&&e.type||t,toastId:F(e)}}function q(t){return(e,n)=>H(e,S(t,n))}function Q(t,e){return H(t,S(\"default\",e))}Q.loading=(t,e)=>H(t,S(\"default\",{isLoading:!0,autoClose:!1,closeOnClick:!1,closeButton:!1,draggable:!1,...e})),Q.promise=function(t,e,n){let o,{pending:s,error:a,success:r}=e;s&&(o=d(s)?Q.loading(s,n):Q.loading(s.render,{...n,...s}));const i={isLoading:null,autoClose:null,closeOnClick:null,closeButton:null,draggable:null},l=(t,e,s)=>{if(null==e)return void Q.dismiss(o);const a={type:t,...i,...n,data:s},r=d(e)?{render:e}:e;return o?Q.update(o,{...a,...r}):Q(r.render,{...a,...r}),s},c=p(t)?t():t;return c.then(t=>l(\"success\",r,t)).catch(t=>l(\"error\",a,t)),c},Q.success=q(\"success\"),Q.info=q(\"info\"),Q.error=q(\"error\"),Q.warning=q(\"warning\"),Q.warn=Q.warning,Q.dark=(t,e)=>H(t,S(\"default\",{theme:\"dark\",...e})),Q.dismiss=t=>{B.size>0?v.emit(1,t):D=D.filter(e=>null!=t&&e.options.toastId!==t)},Q.clearWaitingQueue=function(t){return void 0===t&&(t={}),v.emit(5,t)},Q.isActive=t=>{let e=!1;return B.forEach(n=>{n.isToastActive&&n.isToastActive(t)&&(e=!0)}),e},Q.update=function(t,e){void 0===e&&(e={}),setTimeout(()=>{const n=function(t,e){let{containerId:n}=e;const o=B.get(n||P);return o&&o.getToast(t)}(t,e);if(n){const{props:o,content:s}=n,a={delay:100,...o,...e,toastId:e.toastId||t,updateId:z()};a.toastId!==t&&(a.staleId=t);const r=a.render||s;delete a.render,H(r,a)}},0)},Q.done=t=>{Q.update(t,{progress:1})},Q.onChange=t=>(v.on(4,t),()=>{v.off(4,t)}),Q.POSITION={TOP_LEFT:\"top-left\",TOP_RIGHT:\"top-right\",TOP_CENTER:\"top-center\",BOTTOM_LEFT:\"bottom-left\",BOTTOM_RIGHT:\"bottom-right\",BOTTOM_CENTER:\"bottom-center\"},Q.TYPE={INFO:\"info\",SUCCESS:\"success\",WARNING:\"warning\",ERROR:\"error\",DEFAULT:\"default\"},v.on(2,t=>{P=t.containerId||t,B.set(P,t),D.forEach(t=>{v.emit(0,t.content,t.options)}),D=[]}).on(3,t=>{B.delete(t.containerId||t),0===B.size&&v.off(0).off(1).off(5)});export{R as Bounce,$ as Flip,E as Icons,w as Slide,k as ToastContainer,x as Zoom,g as collapseToast,h as cssTransition,Q as toast,_ as useToast,C as useToastContainer};\n//# sourceMappingURL=react-toastify.esm.mjs.map\n","// client/src/styles/theme.ts\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nexport interface Theme {\r\n  colors: {\r\n    primary: string;\r\n    secondary: string;\r\n    success: string;\r\n    warning: string;\r\n    error: string;\r\n    info: string;\r\n    gray: string;\r\n    background: string;\r\n    surface: string;\r\n    text: string;\r\n    textSecondary: string;\r\n    border: string;\r\n  };\r\n  spacing: {\r\n    xs: string;\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n    xl: string;\r\n  };\r\n  borderRadius: {\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n  };\r\n  shadows: {\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n  };\r\n  breakpoints: {\r\n    mobile: string;\r\n    tablet: string;\r\n    desktop: string;\r\n  };\r\n}\r\n\r\nexport const theme: Theme = {\r\n  colors: {\r\n    primary: '#667eea',\r\n    secondary: '#764ba2',\r\n    success: '#10B981',\r\n    warning: '#F59E0B',\r\n    error: '#EF4444',\r\n    info: '#3B82F6',\r\n    gray: '#6B7280',\r\n    background: '#f8fafc',\r\n    surface: '#ffffff',\r\n    text: '#1f2937',\r\n    textSecondary: '#6b7280',\r\n    border: '#e5e7eb',\r\n  },\r\n  spacing: {\r\n    xs: '4px',\r\n    sm: '8px',\r\n    md: '16px',\r\n    lg: '24px',\r\n    xl: '32px',\r\n  },\r\n  borderRadius: {\r\n    sm: '4px',\r\n    md: '8px',\r\n    lg: '12px',\r\n  },\r\n  shadows: {\r\n    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\r\n    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n    lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\r\n  },\r\n  breakpoints: {\r\n    mobile: '768px',\r\n    tablet: '1024px',\r\n    desktop: '1200px',\r\n  },\r\n};\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html {\r\n    font-size: 16px;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  body {\r\n    font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    background: ${props => props.theme.colors.background};\r\n    color: ${props => props.theme.colors.text};\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    min-height: 100vh;\r\n  }\r\n\r\n  /* 스크롤바 스타일 */\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f5f9;\r\n    border-radius: ${props => props.theme.borderRadius.sm};\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #cbd5e1;\r\n    border-radius: ${props => props.theme.borderRadius.sm};\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #94a3b8;\r\n  }\r\n\r\n  /* 포커스 스타일 */\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  :focus-visible {\r\n    outline: 2px solid ${props => props.theme.colors.primary};\r\n    outline-offset: 2px;\r\n  }\r\n\r\n  /* 선택 스타일 */\r\n  ::selection {\r\n    background: rgba(102, 126, 234, 0.2);\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n`;","// client/src/components/common/Sidebar.tsx\r\nimport React from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport {\r\n  LayoutDashboard,\r\n  Package,\r\n  ShoppingCart,\r\n  ClipboardCheck,\r\n  MessageSquare,\r\n  Upload,\r\n  BarChart3,\r\n  History,\r\n  Settings,\r\n  Users,\r\n  Building,\r\n  CreditCard,\r\n  Bell,\r\n  Menu,\r\n  ChevronLeft\r\n} from 'lucide-react';\r\n\r\ninterface SidebarProps {\r\n  collapsed: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\nconst SidebarContainer = styled.div<{ collapsed: boolean }>`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: linear-gradient(180deg, #2c3e50 0%, #34495e 100%);\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst SidebarHeader = styled.div<{ collapsed: boolean }>`\r\n  padding: ${props => props.collapsed ? '20px 10px' : '20px'};\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${props => props.collapsed ? 'center' : 'space-between'};\r\n  min-height: 80px;\r\n`;\r\n\r\nconst Logo = styled.div<{ collapsed: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  \r\n  h1 {\r\n    font-size: ${props => props.collapsed ? '0' : '1.5rem'};\r\n    font-weight: 600;\r\n    margin: 0;\r\n    opacity: ${props => props.collapsed ? '0' : '1'};\r\n    transition: all 0.3s ease;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .logo-icon {\r\n    min-width: 32px;\r\n    width: 32px;\r\n    height: 32px;\r\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n    border-radius: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst ToggleButton = styled.button<{ collapsed: boolean }>`\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  cursor: pointer;\r\n  padding: 8px;\r\n  border-radius: 6px;\r\n  transition: background 0.3s ease;\r\n  display: ${props => props.collapsed ? 'none' : 'flex'};\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n`;\r\n\r\nconst CompanyInfo = styled.div<{ collapsed: boolean }>`\r\n  text-align: center;\r\n  padding: ${props => props.collapsed ? '10px 5px' : '15px 20px'};\r\n  opacity: ${props => props.collapsed ? '0' : '0.8'};\r\n  font-size: 0.9rem;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  transition: all 0.3s ease;\r\n  overflow: hidden;\r\n  max-height: ${props => props.collapsed ? '0' : '60px'};\r\n`;\r\n\r\nconst Navigation = styled.nav`\r\n  flex: 1;\r\n  padding: 20px 0;\r\n  overflow-y: auto;\r\n  \r\n  &::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-track {\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n\r\nconst NavGroup = styled.div<{ collapsed: boolean }>`\r\n  margin-bottom: 30px;\r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst NavGroupTitle = styled.div<{ collapsed: boolean }>`\r\n  font-size: 0.8rem;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n  color: rgba(255, 255, 255, 0.6);\r\n  padding: 0 ${props => props.collapsed ? '20px' : '20px'};\r\n  margin-bottom: 10px;\r\n  opacity: ${props => props.collapsed ? '0' : '1'};\r\n  height: ${props => props.collapsed ? '0' : 'auto'};\r\n  overflow: hidden;\r\n  transition: all 0.3s ease;\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nconst NavLinkStyled = styled(NavLink)<{ collapsed: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 12px ${props => props.collapsed ? '28px' : '20px'};\r\n  color: rgba(255, 255, 255, 0.8);\r\n  text-decoration: none;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  border-left: 3px solid transparent;\r\n  \r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.1);\r\n    color: white;\r\n    border-left-color: #3498db;\r\n  }\r\n  \r\n  &.active {\r\n    background: rgba(255, 255, 255, 0.15);\r\n    color: white;\r\n    border-left-color: #3498db;\r\n    \r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      bottom: 0;\r\n      width: 3px;\r\n      background: #3498db;\r\n    }\r\n  }\r\n  \r\n  .nav-icon {\r\n    min-width: 20px;\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: ${props => props.collapsed ? '0' : '15px'};\r\n    transition: margin 0.3s ease;\r\n  }\r\n  \r\n  .nav-text {\r\n    font-size: 0.95rem;\r\n    font-weight: 500;\r\n    opacity: ${props => props.collapsed ? '0' : '1'};\r\n    transform: translateX(${props => props.collapsed ? '-10px' : '0'});\r\n    transition: all 0.3s ease;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .nav-badge {\r\n    margin-left: auto;\r\n    background: #e74c3c;\r\n    color: white;\r\n    font-size: 0.7rem;\r\n    padding: 2px 6px;\r\n    border-radius: 10px;\r\n    min-width: 18px;\r\n    text-align: center;\r\n    opacity: ${props => props.collapsed ? '0' : '1'};\r\n    transition: all 0.3s ease;\r\n  }\r\n`;\r\n\r\nconst Tooltip = styled.div<{ show: boolean }>`\r\n  position: absolute;\r\n  left: 100%;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: rgba(0, 0, 0, 0.8);\r\n  color: white;\r\n  padding: 8px 12px;\r\n  border-radius: 6px;\r\n  font-size: 0.85rem;\r\n  white-space: nowrap;\r\n  margin-left: 10px;\r\n  opacity: ${props => props.show ? '1' : '0'};\r\n  visibility: ${props => props.show ? 'visible' : 'hidden'};\r\n  transition: all 0.3s ease;\r\n  z-index: 1000;\r\n  pointer-events: none;\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    right: 100%;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    border: 5px solid transparent;\r\n    border-right-color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nconst NavItemWithTooltip = styled.div`\r\n  position: relative;\r\n  \r\n  &:hover .tooltip {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ collapsed, onToggle }) => {\r\n  const location = useLocation();\r\n\r\n  const mainMenuItems = [\r\n    { path: '/dashboard', label: '대시보드', icon: LayoutDashboard },\r\n    { path: '/purchase-requests', label: '구매 요청', icon: ShoppingCart, badge: 3 },\r\n    { path: '/inventory', label: '품목 관리', icon: Package },\r\n    { path: '/receipts', label: '수령 관리', icon: ClipboardCheck },\r\n    { path: '/kakao', label: '카톡 처리', icon: MessageSquare },\r\n  ];\r\n\r\n  const dataMenuItems = [\r\n    { path: '/upload', label: '파일 관리', icon: Upload },\r\n    { path: '/statistics', label: '통계 분석', icon: BarChart3 },\r\n    { path: '/logs', label: '시스템 로그', icon: History },\r\n  ];\r\n\r\n  const managementMenuItems = [\r\n    { path: '/suppliers', label: '공급업체', icon: Building },\r\n    { path: '/budgets', label: '예산 관리', icon: CreditCard },\r\n    { path: '/users', label: '사용자 관리', icon: Users },\r\n    { path: '/notifications', label: '알림 설정', icon: Bell },\r\n    { path: '/settings', label: '시스템 설정', icon: Settings },\r\n  ];\r\n\r\n  const renderNavItem = (item: any) => {\r\n    const Icon = item.icon;\r\n    const isActive = location.pathname === item.path;\r\n    \r\n    return (\r\n      <NavItem key={item.path}>\r\n        <NavItemWithTooltip>\r\n          <NavLinkStyled \r\n            to={item.path} \r\n            collapsed={collapsed}\r\n            className={isActive ? 'active' : ''}\r\n          >\r\n            <Icon className=\"nav-icon\" size={20} />\r\n            <span className=\"nav-text\">{item.label}</span>\r\n            {item.badge && <span className=\"nav-badge\">{item.badge}</span>}\r\n          </NavLinkStyled>\r\n          {collapsed && (\r\n            <Tooltip show={collapsed} className=\"tooltip\">\r\n              {item.label}\r\n            </Tooltip>\r\n          )}\r\n        </NavItemWithTooltip>\r\n      </NavItem>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SidebarContainer collapsed={collapsed}>\r\n      <SidebarHeader collapsed={collapsed}>\r\n        <Logo collapsed={collapsed}>\r\n          <div className=\"logo-icon\">\r\n            <Package size={20} />\r\n          </div>\r\n          <h1>ERP 시스템</h1>\r\n        </Logo>\r\n        <ToggleButton collapsed={collapsed} onClick={onToggle}>\r\n          <ChevronLeft size={20} />\r\n        </ToggleButton>\r\n      </SidebarHeader>\r\n\r\n      <CompanyInfo collapsed={collapsed}>\r\n        업무 자동화 및 관리\r\n      </CompanyInfo>\r\n\r\n      <Navigation>\r\n        <NavGroup collapsed={collapsed}>\r\n          <NavGroupTitle collapsed={collapsed}>주요 기능</NavGroupTitle>\r\n          <NavList>\r\n            {mainMenuItems.map(renderNavItem)}\r\n          </NavList>\r\n        </NavGroup>\r\n\r\n        <NavGroup collapsed={collapsed}>\r\n          <NavGroupTitle collapsed={collapsed}>데이터 관리</NavGroupTitle>\r\n          <NavList>\r\n            {dataMenuItems.map(renderNavItem)}\r\n          </NavList>\r\n        </NavGroup>\r\n\r\n        <NavGroup collapsed={collapsed}>\r\n          <NavGroupTitle collapsed={collapsed}>시스템 관리</NavGroupTitle>\r\n          <NavList>\r\n            {managementMenuItems.map(renderNavItem)}\r\n          </NavList>\r\n        </NavGroup>\r\n      </Navigation>\r\n    </SidebarContainer>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","// client/src/components/common/Header.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Menu, Bell, User, Search, LogOut } from 'lucide-react';\r\n\r\ninterface HeaderProps {\r\n  onToggleSidebar: () => void;\r\n  sidebarCollapsed: boolean;\r\n}\r\n\r\nconst HeaderContainer = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 ${props => props.theme.spacing.lg};\r\n  height: 64px;\r\n  background: ${props => props.theme.colors.surface};\r\n  border-bottom: 1px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${props => props.theme.spacing.md};\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${props => props.theme.spacing.sm};\r\n`;\r\n\r\nconst MenuButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  background: none;\r\n  border: none;\r\n  color: ${props => props.theme.colors.text};\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background: ${props => props.theme.colors.background};\r\n  }\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 300px;\r\n  padding: 8px 12px 8px 40px;\r\n  border: 1px solid ${props => props.theme.colors.border};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  background: ${props => props.theme.colors.background};\r\n  font-size: 0.9rem;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.theme.colors.primary};\r\n    box-shadow: 0 0 0 3px ${props => props.theme.colors.primary}20;\r\n  }\r\n`;\r\n\r\nconst SearchIcon = styled(Search)`\r\n  position: absolute;\r\n  left: 12px;\r\n  color: ${props => props.theme.colors.textSecondary};\r\n`;\r\n\r\nconst IconButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  background: none;\r\n  border: none;\r\n  color: ${props => props.theme.colors.text};\r\n  cursor: pointer;\r\n  position: relative;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background: ${props => props.theme.colors.background};\r\n  }\r\n`;\r\n\r\nconst NotificationBadge = styled.span`\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 8px;\r\n  width: 8px;\r\n  height: 8px;\r\n  background: ${props => props.theme.colors.error};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${props => props.theme.spacing.sm};\r\n  padding: ${props => props.theme.spacing.sm};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background: ${props => props.theme.colors.background};\r\n  }\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    .user-name {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserAvatar = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  background: linear-gradient(135deg, ${props => props.theme.colors.primary}, ${props => props.theme.colors.secondary});\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Header: React.FC<HeaderProps> = ({ onToggleSidebar, sidebarCollapsed }) => {\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderLeft>\r\n        <MenuButton onClick={onToggleSidebar}>\r\n          <Menu size={20} />\r\n        </MenuButton>\r\n        \r\n        <SearchContainer>\r\n          <SearchIcon size={16} />\r\n          <SearchInput \r\n            type=\"text\" \r\n            placeholder=\"검색...\" \r\n          />\r\n        </SearchContainer>\r\n      </HeaderLeft>\r\n\r\n      <HeaderRight>\r\n        <IconButton>\r\n          <Bell size={20} />\r\n          <NotificationBadge />\r\n        </IconButton>\r\n        \r\n        <UserInfo>\r\n          <UserAvatar>\r\n            관\r\n          </UserAvatar>\r\n          <span className=\"user-name\">관리자</span>\r\n        </UserInfo>\r\n        \r\n        <IconButton>\r\n          <LogOut size={18} />\r\n        </IconButton>\r\n      </HeaderRight>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Sidebar from './Sidebar';\r\nimport Header from '../../common/Header';\r\n\r\nconst LayoutContainer = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  background-color: ${props => props.theme.colors?.background || '#f8fafc'};\r\n`;\r\n\r\nconst MainContent = styled.main<{ sidebarOpen: boolean }>`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  margin-left: ${props => props.sidebarOpen ? '250px' : '70px'};\r\n  transition: margin-left 0.3s ease;\r\n`;\r\n\r\nconst ContentArea = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Layout: React.FC = () => {\r\n  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n\r\n  return (\r\n    <LayoutContainer>\r\n      <Sidebar isOpen={sidebarOpen} onToggle={() => setSidebarOpen(!sidebarOpen)} />\r\n      \r\n      <MainContent sidebarOpen={sidebarOpen}>\r\n        <Header onMenuClick={() => setSidebarOpen(!sidebarOpen)} />\r\n        \r\n        <ContentArea>\r\n          <Outlet />\r\n        </ContentArea>\r\n      </MainContent>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;","// client/src/components/common/LoadingSpinner.tsx\r\nimport React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst SpinnerContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: ${props => props.theme.spacing.xl};\r\n  min-height: 200px;\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid ${props => props.theme.colors.border};\r\n  border-top: 4px solid ${props => props.theme.colors.primary};\r\n  border-radius: 50%;\r\n  animation: ${spin} 1s linear infinite;\r\n`;\r\n\r\nconst LoadingText = styled.div`\r\n  margin-left: ${props => props.theme.spacing.md};\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  font-size: 0.9rem;\r\n`;\r\n\r\ninterface LoadingSpinnerProps {\r\n  text?: string;\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ text = '로딩 중...' }) => {\r\n  return (\r\n    <SpinnerContainer>\r\n      <Spinner />\r\n      {text && <LoadingText>{text}</LoadingText>}\r\n    </SpinnerContainer>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n\r\n","// client/src/services/api.ts\r\nimport axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\r\n\r\n// 타입 정의 (간소화된 버전)\r\nexport interface ApiResponse<T = any> {\r\n  success: boolean;\r\n  message?: string;\r\n  data?: T;\r\n  error?: string;\r\n  errors?: Record<string, string[]>;\r\n}\r\n\r\nexport interface PaginatedResponse<T> {\r\n  items: T[];\r\n  total: number;\r\n  page: number;\r\n  limit: number;\r\n  totalPages: number;\r\n  hasNext: boolean;\r\n  hasPrev: boolean;\r\n}\r\n\r\nexport interface SearchFilters {\r\n  search?: string;\r\n  status?: string;\r\n  category?: string;\r\n  department?: string;\r\n  supplier?: string;\r\n  urgency?: string;\r\n  dateFrom?: string;\r\n  dateTo?: string;\r\n}\r\n\r\n// Axios 인스턴스 생성\r\nconst createApiInstance = (): AxiosInstance => {\r\n  const instance = axios.create({\r\n    baseURL: import.meta.env.VITE_API_URL || 'http://localhost:3001/api',\r\n    timeout: 10000,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\n  // 요청 인터셉터\r\n  instance.interceptors.request.use(\r\n    (config) => {\r\n      // JWT 토큰이 있다면 헤더에 추가\r\n      const token = localStorage.getItem('auth_token');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n      \r\n      // 요청 로깅 (개발 환경에서만)\r\n      if (import.meta.env.DEV) {\r\n        console.log('API Request:', {\r\n          method: config.method?.toUpperCase(),\r\n          url: config.url,\r\n          data: config.data,\r\n        });\r\n      }\r\n      \r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  // 응답 인터셉터\r\n  instance.interceptors.response.use(\r\n    (response: AxiosResponse) => {\r\n      // 응답 로깅 (개발 환경에서만)\r\n      if (import.meta.env.DEV) {\r\n        console.log('API Response:', {\r\n          status: response.status,\r\n          url: response.config.url,\r\n          data: response.data,\r\n        });\r\n      }\r\n      \r\n      return response;\r\n    },\r\n    (error: AxiosError) => {\r\n      // 에러 로깅\r\n      console.error('API Error:', {\r\n        status: error.response?.status,\r\n        url: error.config?.url,\r\n        message: error.message,\r\n        data: error.response?.data,\r\n      });\r\n\r\n      // 인증 에러 처리\r\n      if (error.response?.status === 401) {\r\n        localStorage.removeItem('auth_token');\r\n        // window.location.href = '/login';\r\n      }\r\n\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return instance;\r\n};\r\n\r\nconst api = createApiInstance();\r\n\r\n// 공통 API 함수들\r\nconst apiRequest = {\r\n  get: <T>(url: string, params?: any): Promise<ApiResponse<T>> =>\r\n    api.get(url, { params }).then(res => res.data),\r\n    \r\n  post: <T>(url: string, data?: any): Promise<ApiResponse<T>> =>\r\n    api.post(url, data).then(res => res.data),\r\n    \r\n  put: <T>(url: string, data?: any): Promise<ApiResponse<T>> =>\r\n    api.put(url, data).then(res => res.data),\r\n    \r\n  delete: <T>(url: string): Promise<ApiResponse<T>> =>\r\n    api.delete(url).then(res => res.data),\r\n    \r\n  // 파일 다운로드용\r\n  download: (url: string, params?: any): Promise<Blob> =>\r\n    api.get(url, { \r\n      params,\r\n      responseType: 'blob' \r\n    }).then(res => res.data),\r\n};\r\n\r\n// ==================== 대시보드 API ====================\r\nexport const dashboardApi = {\r\n  getStats: (): Promise<ApiResponse<any>> =>\r\n    apiRequest.get('/dashboard'),\r\n};\r\n\r\n// ==================== 구매 요청 API ====================\r\nexport const purchaseApi = {\r\n  // 구매 요청 목록 조회\r\n  getRequests: (page = 1, limit = 20, filters?: SearchFilters): Promise<ApiResponse<PaginatedResponse<any>>> =>\r\n    apiRequest.get('/purchase-requests', { page, limit, ...filters }),\r\n\r\n  // 특정 구매 요청 조회\r\n  getRequest: (id: number): Promise<ApiResponse<any>> =>\r\n    apiRequest.get(`/purchase-requests/${id}`),\r\n\r\n  // 구매 요청 생성\r\n  createRequest: (data: any): Promise<ApiResponse<any>> =>\r\n    apiRequest.post('/purchase-requests', data),\r\n\r\n  // 구매 요청 수정\r\n  updateRequest: (id: number, data: any): Promise<ApiResponse<any>> =>\r\n    apiRequest.put(`/purchase-requests/${id}`, data),\r\n\r\n  // 구매 요청 삭제\r\n  deleteRequest: (id: number): Promise<ApiResponse<void>> =>\r\n    apiRequest.delete(`/purchase-requests/${id}`),\r\n\r\n  // 구매 요청 승인/거절\r\n  approveRequest: (params: { requestId: number; action: 'approve' | 'reject'; comments?: string }): Promise<ApiResponse<any>> =>\r\n    apiRequest.post(`/purchase-requests/${params.requestId}/approve`, {\r\n      action: params.action,\r\n      comments: params.comments,\r\n    }),\r\n\r\n  // 구매 요청 통계\r\n  getStats: (): Promise<ApiResponse<any>> =>\r\n    apiRequest.get('/purchase-requests/stats'),\r\n\r\n  // Excel 내보내기\r\n  exportRequests: (filters?: SearchFilters): Promise<Blob> =>\r\n    apiRequest.download('/purchase-requests/export/excel', filters),\r\n};\r\n\r\n// ==================== 재고 관리 API ====================\r\nexport const inventoryApi = {\r\n  // 품목 목록 조회\r\n  getItems: (page = 1, limit = 20, filters?: SearchFilters): Promise<ApiResponse<PaginatedResponse<any>>> =>\r\n    apiRequest.get('/inventory', { page, limit, ...filters }),\r\n\r\n  // 특정 품목 조회\r\n  getItem: (no: number): Promise<ApiResponse<any>> =>\r\n    apiRequest.get(`/inventory/${no}`),\r\n\r\n  // 품목 생성\r\n  createItem: (data: any): Promise<ApiResponse<any>> =>\r\n    apiRequest.post('/inventory', data),\r\n\r\n  // 품목 수정\r\n  updateItem: (no: number, data: any): Promise<ApiResponse<any>> =>\r\n    apiRequest.put(`/inventory/${no}`, data),\r\n\r\n  // 품목 삭제\r\n  deleteItem: (no: number): Promise<ApiResponse<void>> =>\r\n    apiRequest.delete(`/inventory/${no}`),\r\n\r\n  // 품목 상태 업데이트\r\n  updateItemStatus: (no: number, status: string, receivedDate?: string): Promise<ApiResponse<any>> =>\r\n    apiRequest.put(`/inventory/${no}/status`, { status, receivedDate }),\r\n\r\n  // 공급업체 목록\r\n  getSuppliers: (): Promise<ApiResponse<string[]>> =>\r\n    apiRequest.get('/inventory/suppliers'),\r\n\r\n  // 품목 검색 자동완성\r\n  searchItems: (query: string, limit = 10): Promise<ApiResponse<any[]>> =>\r\n    apiRequest.get('/inventory/search', { q: query, limit }),\r\n\r\n  // 재고 부족 품목\r\n  getLowStockItems: (threshold = 5): Promise<ApiResponse<any[]>> =>\r\n    apiRequest.get('/inventory/low-stock', { threshold }),\r\n\r\n  // Excel 내보내기\r\n  exportData: (type: string): Promise<Blob> =>\r\n    apiRequest.download(`/export/${type}`),\r\n};\r\n\r\n// ==================== 수령 관리 API ====================\r\nexport const receiptApi = {\r\n  // 수령 내역 목록\r\n  getReceipts: (page = 1, limit = 20): Promise<ApiResponse<PaginatedResponse<any>>> =>\r\n    apiRequest.get('/receipts', { page, limit }),\r\n\r\n  // 수령 처리\r\n  createReceipt: (data: {\r\n    itemNo: number;\r\n    receivedQuantity: number;\r\n    receiverName: string;\r\n    notes?: string;\r\n  }): Promise<ApiResponse<any>> =>\r\n    apiRequest.post('/receipts', data),\r\n\r\n  // Excel 내보내기\r\n  exportReceipts: (): Promise<Blob> =>\r\n    apiRequest.download('/receipts/export'),\r\n};\r\n\r\n// ==================== 파일 업로드 API ====================\r\nexport const uploadApi = {\r\n  // Excel 파일 업로드\r\n  uploadExcel: (file: File): Promise<ApiResponse<{ itemCount: number }>> => {\r\n    const formData = new FormData();\r\n    formData.append('excelFile', file);\r\n    \r\n    return api.post('/upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }).then(res => res.data);\r\n  },\r\n\r\n  // 첨부파일 업로드\r\n  uploadFile: (file: File, type?: string): Promise<ApiResponse<{ url: string; filename: string }>> => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    if (type) formData.append('type', type);\r\n    \r\n    return api.post('/upload/file', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }).then(res => res.data);\r\n  },\r\n};\r\n\r\n// ==================== 카카오톡 메시지 파싱 API ====================\r\nexport const kakaoApi = {\r\n  // 메시지 파싱\r\n  parseMessage: (message: string): Promise<ApiResponse<{\r\n    itemNo?: number;\r\n    itemName?: string;\r\n    quantity?: number;\r\n    receiver?: string;\r\n    notes?: string;\r\n  }>> =>\r\n    apiRequest.post('/kakao/parse', { message }),\r\n};\r\n\r\n// ==================== 통계 API ====================\r\nexport const statisticsApi = {\r\n  // 전체 통계\r\n  getStats: (): Promise<ApiResponse<any>> =>\r\n    apiRequest.get('/statistics'),\r\n\r\n  // 월별 통계\r\n  getMonthlyStats: (year?: number): Promise<ApiResponse<any>> =>\r\n    apiRequest.get('/statistics/monthly', { year }),\r\n\r\n  // 공급업체별 통계\r\n  getSupplierStats: (): Promise<ApiResponse<any>> =>\r\n    apiRequest.get('/statistics/suppliers'),\r\n\r\n  // 부서별 통계\r\n  getDepartmentStats: (): Promise<ApiResponse<any>> =>\r\n    apiRequest.get('/statistics/departments'),\r\n};\r\n\r\n// ==================== 시스템 로그 API ====================\r\nexport const logsApi = {\r\n  // 시스템 로그 조회\r\n  getLogs: (page = 1, limit = 50): Promise<ApiResponse<PaginatedResponse<any>>> =>\r\n    apiRequest.get('/logs', { page, limit }),\r\n};\r\n\r\n// ==================== 유틸리티 함수들 ====================\r\nexport const apiUtils = {\r\n  // 토큰 설정\r\n  setAuthToken: (token: string) => {\r\n    localStorage.setItem('auth_token', token);\r\n  },\r\n\r\n  // 토큰 제거\r\n  removeAuthToken: () => {\r\n    localStorage.removeItem('auth_token');\r\n  },\r\n\r\n  // 토큰 가져오기\r\n  getAuthToken: (): string | null => {\r\n    return localStorage.getItem('auth_token');\r\n  },\r\n\r\n  // API 베이스 URL 가져오기\r\n  getBaseUrl: (): string => {\r\n    return api.defaults.baseURL || '';\r\n  },\r\n};\r\n\r\n// 기본 export\r\nexport default {\r\n  dashboard: dashboardApi,\r\n  purchase: purchaseApi,\r\n  inventory: inventoryApi,\r\n  receipt: receiptApi,\r\n  upload: uploadApi,\r\n  kakao: kakaoApi,\r\n  statistics: statisticsApi,\r\n  logs: logsApi,\r\n  utils: apiUtils,\r\n};","// client/src/components/dashboard/DashboardPage.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery, useMutation } from '@tanstack/react-query';\r\n\r\nimport { \r\n  Package, \r\n  ShoppingCart, \r\n  CheckCircle, \r\n  Clock, \r\n  TrendingUp, \r\n  Users, \r\n  DollarSign,\r\n  AlertTriangle \r\n} from 'lucide-react';\r\nimport PageHeader from '../common/Header';\r\nimport LoadingSpinner from '../common/LoadingSpinner';\r\nimport { dashboardApi } from '../../services/api';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst StatsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StatCard = styled(Card)<{ color: string }>`\r\n  background: linear-gradient(135deg, ${props => props.color}15 0%, ${props => props.color}05 100%);\r\n  border-left: 4px solid ${props => props.color};\r\n  \r\n  .stat-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .stat-icon {\r\n    padding: 12px;\r\n    border-radius: 50%;\r\n    background: ${props => props.color}20;\r\n    color: ${props => props.color};\r\n  }\r\n  \r\n  .stat-value {\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n    color: ${props => props.color};\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .stat-label {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .stat-change {\r\n    font-size: 0.8rem;\r\n    margin-top: 8px;\r\n    \r\n    &.positive {\r\n      color: ${props => props.theme.colors.success};\r\n    }\r\n    \r\n    &.negative {\r\n      color: ${props => props.theme.colors.error};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContentGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 30px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst RecentActivity = styled(Card)`\r\n  .activity-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 20px;\r\n    \r\n    h3 {\r\n      margin: 0;\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n  \r\n  .activity-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n  }\r\n  \r\n  .activity-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    padding: 12px;\r\n    border-radius: 8px;\r\n    transition: background 0.2s;\r\n    \r\n    &:hover {\r\n      background: ${props => props.theme.colors.background};\r\n    }\r\n  }\r\n  \r\n  .activity-icon {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .activity-content {\r\n    flex: 1;\r\n    \r\n    .activity-title {\r\n      font-weight: 500;\r\n      margin-bottom: 4px;\r\n    }\r\n    \r\n    .activity-time {\r\n      font-size: 0.8rem;\r\n      color: ${props => props.theme.colors.textSecondary};\r\n    }\r\n  }\r\n`;\r\n\r\nconst QuickActions = styled(Card)`\r\n  h3 {\r\n    margin-bottom: 20px;\r\n    font-size: 1.2rem;\r\n  }\r\n  \r\n  .actions-grid {\r\n    display: grid;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .action-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    padding: 16px;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n    text-decoration: none;\r\n    color: inherit;\r\n    \r\n    &:hover {\r\n      border-color: ${props => props.theme.colors.primary};\r\n      background: ${props => props.theme.colors.primary}05;\r\n      transform: translateY(-1px);\r\n    }\r\n  }\r\n  \r\n  .action-icon {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: ${props => props.theme.colors.primary}15;\r\n    color: ${props => props.theme.colors.primary};\r\n  }\r\n  \r\n  .action-content {\r\n    .action-title {\r\n      font-weight: 500;\r\n      margin-bottom: 4px;\r\n    }\r\n    \r\n    .action-desc {\r\n      font-size: 0.85rem;\r\n      color: ${props => props.theme.colors.textSecondary};\r\n    }\r\n  }\r\n`;\r\n\r\nconst DashboardPage: React.FC = () => {\r\n  const { data: stats, isLoading, error } = useQuery(\r\n    'dashboard-stats',\r\n    dashboardApi.getStats,\r\n    {\r\n      refetchInterval: 5 * 60 * 1000, // 5분마다 새로고침\r\n    }\r\n  );\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container>\r\n        <Card>\r\n          <div style={{ textAlign: 'center', padding: '40px' }}>\r\n            <p>대시보드 데이터를 불러오는 중 오류가 발생했습니다.</p>\r\n          </div>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const dashboardStats = stats?.data;\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader\r\n        title=\"대시보드\"\r\n        subtitle=\"시스템 현황을 한눈에 확인하세요.\"\r\n      />\r\n\r\n      <StatsGrid>\r\n        <StatCard color=\"#3B82F6\">\r\n          <div className=\"stat-header\">\r\n            <div>\r\n              <div className=\"stat-value\">{dashboardStats?.purchaseRequests?.total || 0}</div>\r\n              <div className=\"stat-label\">전체 구매 요청</div>\r\n            </div>\r\n            <div className=\"stat-icon\">\r\n              <ShoppingCart size={24} />\r\n            </div>\r\n          </div>\r\n          <div className=\"stat-change positive\">\r\n            이번 달 +{dashboardStats?.purchaseRequests?.thisMonth || 0}\r\n          </div>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#F59E0B\">\r\n          <div className=\"stat-header\">\r\n            <div>\r\n              <div className=\"stat-value\">{dashboardStats?.purchaseRequests?.pending || 0}</div>\r\n              <div className=\"stat-label\">승인 대기</div>\r\n            </div>\r\n            <div className=\"stat-icon\">\r\n              <Clock size={24} />\r\n            </div>\r\n          </div>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#10B981\">\r\n          <div className=\"stat-header\">\r\n            <div>\r\n              <div className=\"stat-value\">{dashboardStats?.inventory?.receivedItems || 0}</div>\r\n              <div className=\"stat-label\">수령 완료</div>\r\n            </div>\r\n            <div className=\"stat-icon\">\r\n              <CheckCircle size={24} />\r\n            </div>\r\n          </div>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#8B5CF6\">\r\n          <div className=\"stat-header\">\r\n            <div>\r\n              <div className=\"stat-value\">₩{(dashboardStats?.budget?.usedBudget || 0).toLocaleString()}</div>\r\n              <div className=\"stat-label\">사용 예산</div>\r\n            </div>\r\n            <div className=\"stat-icon\">\r\n              <DollarSign size={24} />\r\n            </div>\r\n          </div>\r\n          <div className=\"stat-change\">\r\n            활용률 {dashboardStats?.budget?.utilizationRate || 0}%\r\n          </div>\r\n        </StatCard>\r\n      </StatsGrid>\r\n\r\n      <ContentGrid>\r\n        <RecentActivity>\r\n          <div className=\"activity-header\">\r\n            <h3>최근 활동</h3>\r\n            <span style={{ fontSize: '0.9rem', color: '#666' }}>최근 24시간</span>\r\n          </div>\r\n          \r\n          <div className=\"activity-list\">\r\n            {dashboardStats?.recentReceipts?.slice(0, 5).map((receipt: any, index: number) => (\r\n              <div key={receipt.id} className=\"activity-item\">\r\n                <div \r\n                  className=\"activity-icon\"\r\n                  style={{ background: '#10B98120', color: '#10B981' }}\r\n                >\r\n                  <Package size={20} />\r\n                </div>\r\n                <div className=\"activity-content\">\r\n                  <div className=\"activity-title\">\r\n                    {receipt.itemName} 수령 완료\r\n                  </div>\r\n                  <div className=\"activity-time\">\r\n                    {receipt.receiverName} • {new Date(receipt.receivedDate).toLocaleString('ko-KR')}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )) || (\r\n              <div style={{ textAlign: 'center', color: '#666', padding: '20px' }}>\r\n                최근 활동이 없습니다.\r\n              </div>\r\n            )}\r\n          </div>\r\n        </RecentActivity>\r\n\r\n        <QuickActions>\r\n          <h3>빠른 작업</h3>\r\n          <div className=\"actions-grid\">\r\n            <a href=\"/purchase-requests\" className=\"action-item\">\r\n              <div className=\"action-icon\">\r\n                <ShoppingCart size={20} />\r\n              </div>\r\n              <div className=\"action-content\">\r\n                <div className=\"action-title\">구매 요청</div>\r\n                <div className=\"action-desc\">새로운 구매 요청 등록</div>\r\n              </div>\r\n            </a>\r\n\r\n            <a href=\"/inventory\" className=\"action-item\">\r\n              <div className=\"action-icon\">\r\n                <Package size={20} />\r\n              </div>\r\n              <div className=\"action-content\">\r\n                <div className=\"action-title\">품목 관리</div>\r\n                <div className=\"action-desc\">재고 현황 확인</div>\r\n              </div>\r\n            </a>\r\n\r\n            <a href=\"/receipts\" className=\"action-item\">\r\n              <div className=\"action-icon\">\r\n                <CheckCircle size={20} />\r\n              </div>\r\n              <div className=\"action-content\">\r\n                <div className=\"action-title\">수령 처리</div>\r\n                <div className=\"action-desc\">물품 수령 등록</div>\r\n              </div>\r\n            </a>\r\n\r\n            <a href=\"/kakao\" className=\"action-item\">\r\n              <div className=\"action-icon\">\r\n                <AlertTriangle size={20} />\r\n              </div>\r\n              <div className=\"action-content\">\r\n                <div className=\"action-title\">카톡 처리</div>\r\n                <div className=\"action-desc\">메시지 파싱</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </QuickActions>\r\n      </ContentGrid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;","// client/src/components/common/Table.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ChevronUp, ChevronDown } from 'lucide-react';\r\nimport { TableColumn } from '../../types';\r\n\r\ninterface TableProps<T> {\r\n  columns: TableColumn<T>[];\r\n  data: T[];\r\n  loading?: boolean;\r\n  emptyMessage?: string;\r\n  selectable?: boolean;\r\n  selectedItems?: any[];\r\n  onSelectItems?: (items: any[]) => void;\r\n  onSort?: (field: string, direction: 'asc' | 'desc') => void;\r\n  sortField?: string;\r\n  sortDirection?: 'asc' | 'desc';\r\n}\r\n\r\nconst TableContainer = styled.div`\r\n  overflow-x: auto;\r\n  border-radius: ${props => props.theme.borderRadius.lg};\r\n  border: 1px solid ${props => props.theme.colors.border};\r\n  background: ${props => props.theme.colors.surface};\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst TableHeader = styled.thead`\r\n  background: ${props => props.theme.colors.background};\r\n  border-bottom: 2px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst TableHeaderCell = styled.th<{ sortable?: boolean; width?: string; align?: string }>`\r\n  padding: ${props => props.theme.spacing.md};\r\n  text-align: ${props => props.align || 'left'};\r\n  font-weight: 600;\r\n  color: ${props => props.theme.colors.text};\r\n  white-space: nowrap;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n  background: ${props => props.theme.colors.background};\r\n  \r\n  ${props => props.width && `width: ${props.width};`}\r\n  \r\n  ${props => props.sortable && `\r\n    cursor: pointer;\r\n    user-select: none;\r\n    \r\n    &:hover {\r\n      background: ${props.theme.colors.border};\r\n    }\r\n  `}\r\n`;\r\n\r\nconst SortButton = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${props => props.theme.spacing.xs};\r\n`;\r\n\r\nconst SortIcon = styled.div<{ active?: boolean; direction?: string }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${props => props.active ? 1 : 0.3};\r\n  \r\n  svg {\r\n    width: 12px;\r\n    height: 12px;\r\n  }\r\n`;\r\n\r\nconst TableBody = styled.tbody``;\r\n\r\nconst TableRow = styled.tr<{ selected?: boolean }>`\r\n  transition: background-color 0.15s ease;\r\n  \r\n  &:hover {\r\n    background: ${props => props.theme.colors.background};\r\n  }\r\n  \r\n  ${props => props.selected && `\r\n    background: ${props.theme.colors.primary}10;\r\n  `}\r\n`;\r\n\r\nconst TableCell = styled.td<{ align?: string }>`\r\n  padding: ${props => props.theme.spacing.md};\r\n  text-align: ${props => props.align || 'left'};\r\n  border-bottom: 1px solid ${props => props.theme.colors.border};\r\n  vertical-align: top;\r\n  \r\n  &:first-child {\r\n    border-left: none;\r\n  }\r\n  \r\n  &:last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  width: 16px;\r\n  height: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst EmptyState = styled.div`\r\n  text-align: center;\r\n  padding: ${props => props.theme.spacing.xl};\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  \r\n  .empty-icon {\r\n    font-size: 3rem;\r\n    margin-bottom: ${props => props.theme.spacing.md};\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n\r\nconst LoadingState = styled.div`\r\n  text-align: center;\r\n  padding: ${props => props.theme.spacing.xl};\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  \r\n  .loading-spinner {\r\n    display: inline-block;\r\n    width: 24px;\r\n    height: 24px;\r\n    border: 3px solid ${props => props.theme.colors.border};\r\n    border-top: 3px solid ${props => props.theme.colors.primary};\r\n    border-radius: 50%;\r\n    animation: spin 1s linear infinite;\r\n    margin-bottom: ${props => props.theme.spacing.md};\r\n  }\r\n  \r\n  @keyframes spin {\r\n    from { transform: rotate(0deg); }\r\n    to { transform: rotate(360deg); }\r\n  }\r\n`;\r\n\r\nfunction Table<T extends Record<string, any>>({\r\n  columns,\r\n  data,\r\n  loading = false,\r\n  emptyMessage = '데이터가 없습니다.',\r\n  selectable = false,\r\n  selectedItems = [],\r\n  onSelectItems,\r\n  onSort,\r\n  sortField,\r\n  sortDirection\r\n}: TableProps<T>) {\r\n  const handleSelectAll = (checked: boolean) => {\r\n    if (onSelectItems) {\r\n      onSelectItems(checked ? data : []);\r\n    }\r\n  };\r\n\r\n  const handleSelectItem = (item: T, checked: boolean) => {\r\n    if (onSelectItems) {\r\n      if (checked) {\r\n        onSelectItems([...selectedItems, item]);\r\n      } else {\r\n        onSelectItems(selectedItems.filter(selected => selected !== item));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSort = (field: string) => {\r\n    if (!onSort) return;\r\n    \r\n    let direction: 'asc' | 'desc' = 'asc';\r\n    if (sortField === field && sortDirection === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    \r\n    onSort(field, direction);\r\n  };\r\n\r\n  const isAllSelected = data.length > 0 && selectedItems.length === data.length;\r\n  const isIndeterminate = selectedItems.length > 0 && selectedItems.length < data.length;\r\n\r\n  return (\r\n    <TableContainer>\r\n      <StyledTable>\r\n        <TableHeader>\r\n          <tr>\r\n            {selectable && (\r\n              <TableHeaderCell width=\"40px\">\r\n                <Checkbox\r\n                  type=\"checkbox\"\r\n                  checked={isAllSelected}\r\n                  ref={input => {\r\n                    if (input) input.indeterminate = isIndeterminate;\r\n                  }}\r\n                  onChange={(e) => handleSelectAll(e.target.checked)}\r\n                />\r\n              </TableHeaderCell>\r\n            )}\r\n            {columns.map((column) => (\r\n              <TableHeaderCell\r\n                key={String(column.key)}\r\n                width={column.width}\r\n                align={column.align}\r\n                sortable={column.sortable}\r\n                onClick={() => column.sortable && handleSort(String(column.key))}\r\n              >\r\n                {column.sortable ? (\r\n                  <SortButton>\r\n                    {column.label}\r\n                    <SortIcon \r\n                      active={sortField === column.key}\r\n                      direction={sortDirection}\r\n                    >\r\n                      <ChevronUp />\r\n                      <ChevronDown />\r\n                    </SortIcon>\r\n                  </SortButton>\r\n                ) : (\r\n                  column.label\r\n                )}\r\n              </TableHeaderCell>\r\n            ))}\r\n          </tr>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {loading ? (\r\n            <tr>\r\n              <TableCell colSpan={columns.length + (selectable ? 1 : 0)}>\r\n                <LoadingState>\r\n                  <div className=\"loading-spinner\" />\r\n                  <div>로딩 중...</div>\r\n                </LoadingState>\r\n              </TableCell>\r\n            </tr>\r\n          ) : data.length === 0 ? (\r\n            <tr>\r\n              <TableCell colSpan={columns.length + (selectable ? 1 : 0)}>\r\n                <EmptyState>\r\n                  <div className=\"empty-icon\">📋</div>\r\n                  <div>{emptyMessage}</div>\r\n                </EmptyState>\r\n              </TableCell>\r\n            </tr>\r\n          ) : (\r\n            data.map((item, index) => {\r\n              const isSelected = selectedItems.includes(item);\r\n              \r\n              return (\r\n                <TableRow key={index} selected={isSelected}>\r\n                  {selectable && (\r\n                    <TableCell>\r\n                      <Checkbox\r\n                        type=\"checkbox\"\r\n                        checked={isSelected}\r\n                        onChange={(e) => handleSelectItem(item, e.target.checked)}\r\n                      />\r\n                    </TableCell>\r\n                  )}\r\n                  {columns.map((column) => {\r\n                    const value = item[column.key];\r\n                    const displayValue = column.render \r\n                      ? column.render(value, item) \r\n                      : value;\r\n                    \r\n                    return (\r\n                      <TableCell key={String(column.key)} align={column.align}>\r\n                        {displayValue}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })\r\n          )}\r\n        </TableBody>\r\n      </StyledTable>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n\r\n\r\n\r\n","// client/src/components/common/Pagination.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\n\r\ninterface PaginationProps {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  onPageChange: (page: number) => void;\r\n  className?: string;\r\n}\r\n\r\nconst PaginationContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: ${props => props.theme.spacing.xs};\r\n  margin-top: ${props => props.theme.spacing.lg};\r\n`;\r\n\r\nconst PageButton = styled.button<{ active?: boolean; disabled?: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 1px solid ${props => props.theme.colors.border};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  background: ${props => props.active ? props.theme.colors.primary : props.theme.colors.surface};\r\n  color: ${props => props.active ? 'white' : props.theme.colors.text};\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n\r\n  &:hover:not(:disabled) {\r\n    background: ${props => props.active ? props.theme.colors.primary : props.theme.colors.background};\r\n    border-color: ${props => props.theme.colors.primary};\r\n  }\r\n\r\n  &:disabled {\r\n    background: ${props => props.theme.colors.background};\r\n    color: ${props => props.theme.colors.textSecondary};\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  svg {\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n`;\r\n\r\nconst PageInfo = styled.span`\r\n  margin: 0 ${props => props.theme.spacing.md};\r\n  font-size: 0.9rem;\r\n  color: ${props => props.theme.colors.textSecondary};\r\n`;\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({\r\n  currentPage,\r\n  totalPages,\r\n  onPageChange,\r\n  className\r\n}) => {\r\n  const getVisiblePages = () => {\r\n    const delta = 2;\r\n    const range: number[] = [];\r\n    const rangeWithDots: (number | string)[] = [];\r\n\r\n    for (let i = Math.max(2, currentPage - delta); i <= Math.min(totalPages - 1, currentPage + delta); i++) {\r\n      range.push(i);\r\n    }\r\n\r\n    if (currentPage - delta > 2) {\r\n      rangeWithDots.push(1, '...');\r\n    } else {\r\n      rangeWithDots.push(1);\r\n    }\r\n\r\n    rangeWithDots.push(...range);\r\n\r\n    if (currentPage + delta < totalPages - 1) {\r\n      rangeWithDots.push('...', totalPages);\r\n    } else if (totalPages > 1) {\r\n      rangeWithDots.push(totalPages);\r\n    }\r\n\r\n    return rangeWithDots;\r\n  };\r\n\r\n  if (totalPages <= 1) {\r\n    return null;\r\n  }\r\n\r\n  const visiblePages = getVisiblePages();\r\n\r\n  return (\r\n    <PaginationContainer className={className}>\r\n      <PageButton\r\n        disabled={currentPage === 1}\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n      >\r\n        <ChevronLeft />\r\n      </PageButton>\r\n\r\n      {visiblePages.map((page, index) => (\r\n        <React.Fragment key={index}>\r\n          {page === '...' ? (\r\n            <PageInfo>...</PageInfo>\r\n          ) : (\r\n            <PageButton\r\n              active={page === currentPage}\r\n              onClick={() => onPageChange(page as number)}\r\n            >\r\n              {page}\r\n            </PageButton>\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n\r\n      <PageButton\r\n        disabled={currentPage === totalPages}\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n      >\r\n        <ChevronRight />\r\n      </PageButton>\r\n    </PaginationContainer>\r\n  );\r\n};\r\n\r\nexport default Pagination;","// client/src/components/inventory/InventoryForm.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FormContainer = styled.div`\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 4px;\r\n  font-weight: 500;\r\n  color: #374151;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 8px 12px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Button = styled.button<{ variant?: 'primary' | 'secondary' }>`\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  border: 1px solid;\r\n  \r\n  ${props => props.variant === 'primary' ? `\r\n    background-color: #3b82f6;\r\n    color: white;\r\n    border-color: #3b82f6;\r\n    \r\n    &:hover {\r\n      background-color: #2563eb;\r\n    }\r\n  ` : `\r\n    background-color: white;\r\n    color: #374151;\r\n    border-color: #d1d5db;\r\n    \r\n    &:hover {\r\n      background-color: #f9fafb;\r\n    }\r\n  `}\r\n`;\r\n\r\ninterface InventoryItem {\r\n  id?: string;\r\n  itemName: string;\r\n  category: string;\r\n  quantity: number;\r\n  unit: string;\r\n  location: string;\r\n  description?: string;\r\n}\r\n\r\ninterface InventoryFormProps {\r\n  item?: InventoryItem;\r\n  onSubmit: (item: InventoryItem) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst InventoryForm: React.FC<InventoryFormProps> = ({ \r\n  item, \r\n  onSubmit, \r\n  onCancel \r\n}) => {\r\n  const [formData, setFormData] = useState<InventoryItem>({\r\n    itemName: item?.itemName || '',\r\n    category: item?.category || '',\r\n    quantity: item?.quantity || 0,\r\n    unit: item?.unit || '',\r\n    location: item?.location || '',\r\n    description: item?.description || '',\r\n  });\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSubmit({ ...formData, id: item?.id });\r\n  };\r\n\r\n  const handleChange = (field: keyof InventoryItem, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h3>{item ? '재고 항목 수정' : '재고 항목 추가'}</h3>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        <FormGroup>\r\n          <Label>품목명</Label>\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.itemName}\r\n            onChange={(e) => handleChange('itemName', e.target.value)}\r\n            required\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label>카테고리</Label>\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.category}\r\n            onChange={(e) => handleChange('category', e.target.value)}\r\n            required\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label>수량</Label>\r\n          <Input\r\n            type=\"number\"\r\n            value={formData.quantity}\r\n            onChange={(e) => handleChange('quantity', parseInt(e.target.value) || 0)}\r\n            required\r\n            min=\"0\"\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label>단위</Label>\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.unit}\r\n            onChange={(e) => handleChange('unit', e.target.value)}\r\n            required\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label>보관 위치</Label>\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.location}\r\n            onChange={(e) => handleChange('location', e.target.value)}\r\n            required\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Label>설명</Label>\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.description}\r\n            onChange={(e) => handleChange('description', e.target.value)}\r\n            placeholder=\"선택사항\"\r\n          />\r\n        </FormGroup>\r\n\r\n        <ButtonGroup>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            {item ? '수정' : '추가'}\r\n          </Button>\r\n          <Button type=\"button\" variant=\"secondary\" onClick={onCancel}>\r\n            취소\r\n          </Button>\r\n        </ButtonGroup>\r\n      </form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default InventoryForm;","// client/src/components/inventory/InventoryFilters.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Search, Filter } from 'lucide-react';\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: 16px;\r\n  margin-bottom: 20px;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst SearchGroup = styled.div`\r\n  position: relative;\r\n  flex: 1;\r\n  min-width: 200px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 100%;\r\n  padding: 8px 12px 8px 40px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n  }\r\n`;\r\n\r\nconst SearchIcon = styled(Search)`\r\n  position: absolute;\r\n  left: 12px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 16px;\r\n  height: 16px;\r\n  color: #6b7280;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  padding: 8px 12px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  background: white;\r\n  cursor: pointer;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n  }\r\n`;\r\n\r\nconst FilterButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 8px 16px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  background: white;\r\n  color: #374151;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background: #f9fafb;\r\n  }\r\n`;\r\n\r\ninterface InventoryFiltersProps {\r\n  searchTerm?: string;\r\n  category?: string;\r\n  location?: string;\r\n  onSearchChange?: (value: string) => void;\r\n  onCategoryChange?: (value: string) => void;\r\n  onLocationChange?: (value: string) => void;\r\n  onFilter?: () => void;\r\n}\r\n\r\nconst InventoryFilters: React.FC<InventoryFiltersProps> = ({\r\n  searchTerm = '',\r\n  category = '',\r\n  location = '',\r\n  onSearchChange = () => {},\r\n  onCategoryChange = () => {},\r\n  onLocationChange = () => {},\r\n  onFilter = () => {},\r\n}) => {\r\n  return (\r\n    <FilterContainer>\r\n      <SearchGroup>\r\n        <SearchIcon />\r\n        <SearchInput\r\n          type=\"text\"\r\n          placeholder=\"품목명으로 검색...\"\r\n          value={searchTerm}\r\n          onChange={(e) => onSearchChange(e.target.value)}\r\n        />\r\n      </SearchGroup>\r\n\r\n      <Select\r\n        value={category}\r\n        onChange={(e) => onCategoryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">전체 카테고리</option>\r\n        <option value=\"사무용품\">사무용품</option>\r\n        <option value=\"전자기기\">전자기기</option>\r\n        <option value=\"소모품\">소모품</option>\r\n        <option value=\"기타\">기타</option>\r\n      </Select>\r\n\r\n      <Select\r\n        value={location}\r\n        onChange={(e) => onLocationChange(e.target.value)}\r\n      >\r\n        <option value=\"\">전체 위치</option>\r\n        <option value=\"창고A\">창고A</option>\r\n        <option value=\"창고B\">창고B</option>\r\n        <option value=\"사무실\">사무실</option>\r\n        <option value=\"기타\">기타</option>\r\n      </Select>\r\n\r\n      <FilterButton onClick={onFilter}>\r\n        <Filter size={16} />\r\n        필터 적용\r\n      </FilterButton>\r\n    </FilterContainer>\r\n  );\r\n};\r\n\r\nexport default InventoryFilters;","// client/src/hooks/useInventory.ts (수정된 버전)\r\nimport { useQuery, useMutation } from '@tanstack/react-query';\r\n\r\nimport { inventoryApi } from '../services/api';\r\nimport { SearchFilters } from '../types';\r\n\r\nexport const useInventory = (\r\n  page: number = 1,\r\n  limit: number = 20,\r\n  filters: SearchFilters = {}\r\n) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const {\r\n    data,\r\n    isLoading: loading,\r\n    error,\r\n    refetch\r\n  } = useQuery(\r\n    ['inventory', page, limit, filters],\r\n    () => inventoryApi.getItems(page, limit, filters),\r\n    {\r\n      keepPreviousData: true,\r\n      staleTime: 5 * 60 * 1000,\r\n    }\r\n  );\r\n\r\n  return {\r\n    items: data?.data?.items || [],\r\n    total: data?.data?.total || 0,\r\n    totalPages: data?.data?.totalPages || 0,\r\n    hasNext: data?.data?.hasNext || false,\r\n    hasPrev: data?.data?.hasPrev || false,\r\n    stats: {\r\n      totalItems: data?.data?.items?.length || 0,\r\n      receivedItems: data?.data?.items?.filter(item => item.received)?.length || 0,\r\n      pendingItems: data?.data?.items?.filter(item => !item.received)?.length || 0,\r\n      totalValue: data?.data?.items?.reduce((sum, item) => sum + item.totalPrice, 0) || 0,\r\n    },\r\n    loading,\r\n    error,\r\n    refetch,\r\n    invalidate: () => {\r\n      queryClient.invalidateQueries('inventory');\r\n    }\r\n  };\r\n};","// client/src/components/inventory/InventoryPage.tsx\r\nimport React, { useState, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery, useMutation } from '@tanstack/react-query';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { Plus, Search, Download, Filter, RefreshCw } from 'lucide-react';\r\n\r\n// Components\r\nimport PageHeader from '../common/Header';\r\nimport Select from '../common/Select';\r\nimport Table from '../common/Table';\r\nimport Pagination from '../common/Pagination';\r\nimport LoadingSpinner from '../common/LoadingSpinner';\r\nimport InventoryForm from './InventoryForm';\r\nimport InventoryFilters from './InventoryFilters';\r\n\r\n// Hooks & Services\r\nimport { useInventory } from '../../hooks/useInventory';\r\nimport { inventoryApi } from '../../services/api';\r\n\r\n// Types\r\nimport { InventoryItem, SearchFilters, TableColumn } from '../../types';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StatCard = styled(Card)`\r\n  text-align: center;\r\n  background: linear-gradient(135deg, ${props => props.theme.colors.primary} 0%, ${props => props.theme.colors.secondary} 100%);\r\n  color: white;\r\n  \r\n  h3 {\r\n    font-size: 2rem;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  p {\r\n    font-size: 0.9rem;\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst InventoryPage: React.FC = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  // State\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filters, setFilters] = useState<SearchFilters>({});\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [editingItem, setEditingItem] = useState<InventoryItem | null>(null);\r\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n\r\n  // Custom hooks\r\n  const {\r\n    items,\r\n    loading,\r\n    error,\r\n    totalPages,\r\n    stats,\r\n    refetch\r\n  } = useInventory(currentPage, 20, filters);\r\n\r\n  // Mutations\r\n  const deleteItemMutation = useMutation(inventoryApi.deleteItem, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries('inventory');\r\n      toast.success('품목이 삭제되었습니다.');\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.message || '삭제 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const exportMutation = useMutation(inventoryApi.exportData, {\r\n    onSuccess: (blob: Blob) => {\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `inventory_${new Date().toISOString().split('T')[0]}.xlsx`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n      toast.success('Excel 파일이 다운로드되었습니다.');\r\n    },\r\n    onError: () => {\r\n      toast.error('내보내기 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  // Table columns\r\n  const columns: TableColumn<InventoryItem>[] = useMemo(() => [\r\n    {\r\n      key: 'no',\r\n      label: '번호',\r\n      sortable: true,\r\n      width: '80px',\r\n    },\r\n    {\r\n      key: 'itemName',\r\n      label: '품목명',\r\n      sortable: true,\r\n      render: (value, item) => (\r\n        <div>\r\n          <div style={{ fontWeight: 'bold' }}>{value}</div>\r\n          {item.specifications && (\r\n            <div style={{ fontSize: '0.85rem', color: '#666' }}>\r\n              {item.specifications}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: 'quantity',\r\n      label: '수량',\r\n      sortable: true,\r\n      width: '100px',\r\n      render: (value) => value.toLocaleString(),\r\n    },\r\n    {\r\n      key: 'unitPrice',\r\n      label: '단가',\r\n      sortable: true,\r\n      width: '120px',\r\n      render: (value) => `₩${value.toLocaleString()}`,\r\n    },\r\n    {\r\n      key: 'totalPrice',\r\n      label: '총액',\r\n      sortable: true,\r\n      width: '140px',\r\n      render: (value) => `₩${value.toLocaleString()}`,\r\n    },\r\n    {\r\n      key: 'supplier',\r\n      label: '공급업체',\r\n      sortable: true,\r\n      width: '150px',\r\n    },\r\n    {\r\n      key: 'status',\r\n      label: '상태',\r\n      width: '100px',\r\n      render: (value) => (\r\n        <StatusBadge status={value}>\r\n          {getStatusLabel(value)}\r\n        </StatusBadge>\r\n      ),\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: '관리',\r\n      width: '120px',\r\n      render: (_, item) => (\r\n        <ActionButtonGroup>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            onClick={() => handleEdit(item)}\r\n          >\r\n            수정\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"danger\"\r\n            onClick={() => handleDelete(item.no)}\r\n          >\r\n            삭제\r\n          </Button>\r\n        </ActionButtonGroup>\r\n      ),\r\n    },\r\n  ], []);\r\n\r\n  // Event handlers\r\n  const handleSearch = (searchFilters: SearchFilters) => {\r\n    setFilters(searchFilters);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleEdit = (item: InventoryItem) => {\r\n    setEditingItem(item);\r\n    setIsAddModalOpen(true);\r\n  };\r\n\r\n  const handleDelete = async (itemNo: number) => {\r\n    if (window.confirm('정말로 이 품목을 삭제하시겠습니까?')) {\r\n      deleteItemMutation.mutate(itemNo);\r\n    }\r\n  };\r\n\r\n  const handleExport = () => {\r\n    exportMutation.mutate('inventory');\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsAddModalOpen(false);\r\n    setEditingItem(null);\r\n  };\r\n\r\n  const handleFormSuccess = () => {\r\n    handleModalClose();\r\n    refetch();\r\n  };\r\n\r\n  const getStatusLabel = (status: string) => {\r\n    const statusMap: Record<string, string> = {\r\n      pending: '주문중',\r\n      received: '수령완료',\r\n      ordered: '발주완료',\r\n    };\r\n    return statusMap[status] || status;\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container>\r\n        <Card>\r\n          <div style={{ textAlign: 'center', padding: '40px' }}>\r\n            <p>데이터를 불러오는 중 오류가 발생했습니다.</p>\r\n            <Button onClick={() => refetch()}>다시 시도</Button>\r\n          </div>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader\r\n        title=\"품목 관리\"\r\n        subtitle=\"전체 품목 현황을 관리하고 모니터링할 수 있습니다.\"\r\n      />\r\n\r\n      {/* 통계 카드 */}\r\n      <StatsContainer>\r\n        <StatCard>\r\n          <h3>{stats?.totalItems || 0}</h3>\r\n          <p>전체 품목</p>\r\n        </StatCard>\r\n        <StatCard>\r\n          <h3>{stats?.receivedItems || 0}</h3>\r\n          <p>수령 완료</p>\r\n        </StatCard>\r\n        <StatCard>\r\n          <h3>{stats?.pendingItems || 0}</h3>\r\n          <p>주문 중</p>\r\n        </StatCard>\r\n        <StatCard>\r\n          <h3>₩{(stats?.totalValue || 0).toLocaleString()}</h3>\r\n          <p>총 금액</p>\r\n        </StatCard>\r\n      </StatsContainer>\r\n\r\n      <Card>\r\n        {/* 필터 및 액션 버튼 */}\r\n        <FilterContainer>\r\n          <InventoryFilters onFilter={handleSearch} />\r\n          \r\n          <ActionButtons>\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => refetch()}\r\n              disabled={loading}\r\n            >\r\n              <RefreshCw size={16} />\r\n              새로고침\r\n            </Button>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={handleExport}\r\n              disabled={exportMutation.isLoading}\r\n            >\r\n              <Download size={16} />\r\n              Excel 다운로드\r\n            </Button>\r\n            <Button onClick={() => setIsAddModalOpen(true)}>\r\n              <Plus size={16} />\r\n              품목 추가\r\n            </Button>\r\n          </ActionButtons>\r\n        </FilterContainer>\r\n\r\n        {/* 테이블 */}\r\n        <Table\r\n          columns={columns}\r\n          data={items || []}\r\n          loading={loading}\r\n          emptyMessage=\"등록된 품목이 없습니다.\"\r\n        />\r\n\r\n        {/* 페이지네이션 */}\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          onPageChange={setCurrentPage}\r\n        />\r\n      </Card>\r\n\r\n      {/* 품목 추가/수정 모달 */}\r\n      <Modal\r\n        isOpen={isAddModalOpen}\r\n        onClose={handleModalClose}\r\n        title={editingItem ? '품목 수정' : '새 품목 추가'}\r\n        size=\"lg\"\r\n      >\r\n        <InventoryForm\r\n          item={editingItem}\r\n          onSuccess={handleFormSuccess}\r\n          onCancel={handleModalClose}\r\n        />\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// Styled components\r\nconst StatusBadge = styled.span<{ status: string }>`\r\n  display: inline-block;\r\n  padding: 4px 12px;\r\n  border-radius: 12px;\r\n  font-size: 0.85rem;\r\n  font-weight: 500;\r\n  \r\n  ${({ status, theme }) => {\r\n    switch (status) {\r\n      case 'received':\r\n        return `\r\n          background: ${theme.colors.success}20;\r\n          color: ${theme.colors.success};\r\n        `;\r\n      case 'pending':\r\n        return `\r\n          background: ${theme.colors.warning}20;\r\n          color: ${theme.colors.warning};\r\n        `;\r\n      default:\r\n        return `\r\n          background: ${theme.colors.gray}20;\r\n          color: ${theme.colors.gray};\r\n        `;\r\n    }\r\n  }}\r\n`;\r\n\r\nconst ActionButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n`;\r\n\r\nexport default InventoryPage;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery } from '@tanstack/react-query';  // react-query → @tanstack/react-query\r\nimport { Plus, Search, Download } from 'lucide-react';\r\nimport PageHeader from '../common/Header';\r\nimport Table from '../common/Table';\r\nimport Pagination from '../common/Pagination';\r\nimport LoadingSpinner from '../common/LoadingSpinner';\r\nimport { receiptApi } from '../../services/api';\r\nimport { Receipt, TableColumn } from '../../types';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n  align-items: center;\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst ReceiptPage: React.FC = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  \r\n  const { data, isLoading, error } = useQuery({\r\n    queryKey: ['receipts', currentPage],  // 최신 문법으로 변경\r\n    queryFn: () => receiptApi.getReceipts(currentPage, 20),\r\n    keepPreviousData: true,\r\n  });\r\n\r\n  const columns: TableColumn<Receipt>[] = [\r\n    {\r\n      key: 'receiptNumber',\r\n      label: '수령번호',\r\n      sortable: true,\r\n      width: '120px',\r\n    },\r\n    {\r\n      key: 'itemName',\r\n      label: '품목명',\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'receivedQuantity',\r\n      label: '수령수량',\r\n      width: '100px',\r\n      render: (value, item) => `${value}/${item.expectedQuantity}`,\r\n    },\r\n    {\r\n      key: 'receiverName',\r\n      label: '수령자',\r\n      width: '100px',\r\n    },\r\n    {\r\n      key: 'department',\r\n      label: '부서',\r\n      width: '100px',\r\n    },\r\n    {\r\n      key: 'receivedDate',\r\n      label: '수령일',\r\n      width: '120px',\r\n      render: (value) => new Date(value).toLocaleDateString('ko-KR'),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader\r\n        title=\"수령 관리\"\r\n        subtitle=\"물품 수령 현황을 확인하고 관리할 수 있습니다.\"\r\n      />\r\n\r\n      <Card>\r\n        <FilterContainer>\r\n          <ActionButtons>\r\n            <Button variant=\"secondary\">\r\n              <Download size={16} />\r\n              Excel 다운로드\r\n            </Button>\r\n            <Button>\r\n              <Plus size={16} />\r\n              수령 등록\r\n            </Button>\r\n          </ActionButtons>\r\n        </FilterContainer>\r\n\r\n        <Table\r\n          columns={columns}\r\n          data={data?.data?.items || []}\r\n          loading={isLoading}\r\n          emptyMessage=\"수령 내역이 없습니다.\"\r\n        />\r\n\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPages={data?.data?.totalPages || 0}\r\n          onPageChange={setCurrentPage}\r\n        />\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReceiptPage;","// client/src/components/common/Select.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SelectContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #374151;\r\n`;\r\n\r\nconst StyledSelect = styled.select`\r\n  padding: 8px 12px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  background: white;\r\n  color: #374151;\r\n  cursor: pointer;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #f9fafb;\r\n    color: #9ca3af;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\ninterface SelectOption {\r\n  value: string | number;\r\n  label: string;\r\n  disabled?: boolean;\r\n}\r\n\r\ninterface SelectProps {\r\n  label?: string;\r\n  value?: string | number;\r\n  options: SelectOption[];\r\n  onChange?: (value: string | number) => void;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  required?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  label,\r\n  value,\r\n  options,\r\n  onChange,\r\n  placeholder = \"선택하세요\",\r\n  disabled = false,\r\n  required = false,\r\n  className\r\n}) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (onChange) {\r\n      onChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SelectContainer className={className}>\r\n      {label && (\r\n        <Label>\r\n          {label}\r\n          {required && <span style={{ color: '#ef4444' }}>*</span>}\r\n        </Label>\r\n      )}\r\n      <StyledSelect\r\n        value={value || ''}\r\n        onChange={handleChange}\r\n        disabled={disabled}\r\n        required={required}\r\n      >\r\n        {placeholder && (\r\n          <option value=\"\" disabled>\r\n            {placeholder}\r\n          </option>\r\n        )}\r\n        {options.map((option) => (\r\n          <option \r\n            key={option.value} \r\n            value={option.value}\r\n            disabled={option.disabled}\r\n          >\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </StyledSelect>\r\n    </SelectContainer>\r\n  );\r\n};\r\n\r\nexport default Select;","// client/src/types/index.ts\r\n\r\n// 기본 타입들\r\nexport interface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  department: string;\r\n  role: string;\r\n}\r\n\r\n// ENUM 타입들\r\nexport type RequestStatus = \r\n  | 'draft'\r\n  | 'submitted'\r\n  | 'pending_approval'\r\n  | 'approved'\r\n  | 'rejected'\r\n  | 'cancelled'\r\n  | 'purchased'\r\n  | 'received'\r\n  | 'closed';\r\n\r\nexport type UrgencyLevel = 'low' | 'normal' | 'high' | 'emergency';\r\n\r\nexport type ItemCategory = \r\n  | 'office_supplies'\r\n  | 'it_equipment'\r\n  | 'furniture'\r\n  | 'facility'\r\n  | 'marketing'\r\n  | 'travel'\r\n  | 'training'\r\n  | 'maintenance'\r\n  | 'software'\r\n  | 'service'\r\n  | 'other';\r\n\r\nexport type PurchaseMethod = 'direct' | 'quotation' | 'contract' | 'framework' | 'marketplace';\r\nexport type UserRole = 'employee' | 'team_lead' | 'manager' | 'purchaser' | 'finance' | 'admin';\r\n\r\n// 구매 요청 관련 타입들\r\nexport interface PurchaseRequest {\r\n  id: number;\r\n  requestNumber: string;\r\n  itemName: string;\r\n  quantity: number;\r\n  unitPrice?: number;\r\n  totalBudget: number;\r\n  specifications?: string;\r\n  purpose?: string;\r\n  requesterName: string;\r\n  department: string;\r\n  urgency: UrgencyLevel;\r\n  status: RequestStatus;\r\n  requestDate: string;\r\n  requiredDate?: string;\r\n  approvedDate?: string;\r\n  rejectedDate?: string;\r\n  approverName?: string;\r\n  comments?: string;\r\n  attachments?: string[];\r\n  category: ItemCategory;\r\n  preferredSupplier?: string;\r\n  justification?: string;\r\n  project?: string;\r\n  budgetCode?: string;\r\n  expectedDeliveryDate?: string;\r\n  purchaseMethod: PurchaseMethod;\r\n}\r\n\r\n// 재고 관련 타입들\r\nexport interface InventoryItem {\r\n  id: number;\r\n  itemName: string;\r\n  category: string;\r\n  quantity: number;\r\n  unit: string;\r\n  location: string;\r\n  minQuantity?: number;\r\n  maxQuantity?: number;\r\n  unitPrice?: number;\r\n  supplier?: string;\r\n  description?: string;\r\n  lastUpdated: string;\r\n}\r\n\r\n// 수령 관련 타입들\r\nexport interface Receipt {\r\n  id: number;\r\n  receiptNumber: string;\r\n  itemName: string;\r\n  expectedQuantity: number;\r\n  receivedQuantity: number;\r\n  receiverName: string;\r\n  department: string;\r\n  receivedDate: string;\r\n  notes?: string;\r\n}\r\n\r\n// 테이블 관련 타입들\r\nexport interface TableColumn<T = any> {\r\n  key: string;\r\n  label: string;\r\n  sortable?: boolean;\r\n  width?: string;\r\n  align?: 'left' | 'center' | 'right';\r\n  render?: (value: any, item: T) => React.ReactNode;\r\n}\r\n\r\n// 검색 필터 타입들\r\nexport interface SearchFilters {\r\n  search?: string;\r\n  searchTerm?: string;\r\n  status?: RequestStatus;\r\n  urgency?: UrgencyLevel;\r\n  department?: string;\r\n  dateFrom?: string;\r\n  dateTo?: string;\r\n  category?: ItemCategory;\r\n  location?: string;\r\n}\r\n\r\n// 통계 타입들\r\nexport interface Statistics {\r\n  total: number;\r\n  pending: number;\r\n  approved: number;\r\n  rejected: number;\r\n  thisMonth: number;\r\n  lastMonth: number;\r\n}\r\n\r\n// API 응답 타입들\r\nexport interface ApiResponse<T> {\r\n  data: T;\r\n  message?: string;\r\n  success: boolean;\r\n}\r\n\r\nexport interface PaginatedResponse<T> {\r\n  items: T[];\r\n  totalPages: number;\r\n  totalItems: number;\r\n  currentPage: number;\r\n  pageSize: number;\r\n}\r\n\r\n// 컴포넌트 Props 타입들\r\nexport interface ButtonProps {\r\n  children: React.ReactNode;\r\n  variant?: 'primary' | 'secondary' | 'outline' | 'danger' | 'success';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  loading?: boolean;\r\n  disabled?: boolean;\r\n  onClick?: () => void;\r\n  type?: 'button' | 'submit' | 'reset';\r\n  title?: string;\r\n}\r\n\r\nexport interface CardProps {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  padding?: string;\r\n}\r\n\r\nexport interface ModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  title?: string;\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n  children: React.ReactNode;\r\n}\r\n\r\n// 상수 정의 (한 번만 정의)\r\nexport const STATUS_LABELS: Record<RequestStatus, string> = {\r\n  draft: '임시저장',\r\n  submitted: '제출됨',\r\n  pending_approval: '승인대기',\r\n  approved: '승인됨',\r\n  rejected: '거절됨',\r\n  cancelled: '취소됨',\r\n  purchased: '구매완료',\r\n  received: '수령완료',\r\n  closed: '완료'\r\n};\r\n\r\nexport const URGENCY_LABELS: Record<UrgencyLevel, string> = {\r\n  low: '낮음',\r\n  normal: '보통',\r\n  high: '높음',\r\n  emergency: '긴급'\r\n};\r\n\r\nexport const STATUS_COLORS: Record<RequestStatus, string> = {\r\n  draft: '#6B7280',\r\n  submitted: '#3B82F6',\r\n  pending_approval: '#F59E0B',\r\n  approved: '#10B981',\r\n  rejected: '#EF4444',\r\n  cancelled: '#6B7280',\r\n  purchased: '#8B5CF6',\r\n  received: '#059669',\r\n  closed: '#374151'\r\n};\r\n\r\nexport const URGENCY_COLORS: Record<UrgencyLevel, string> = {\r\n  low: '#10B981',\r\n  normal: '#3B82F6',\r\n  high: '#F59E0B',\r\n  emergency: '#EF4444'\r\n};\r\n\r\nexport const CATEGORY_LABELS: Record<ItemCategory, string> = {\r\n  office_supplies: '사무용품',\r\n  it_equipment: 'IT장비',\r\n  furniture: '가구',\r\n  facility: '시설관리',\r\n  marketing: '마케팅',\r\n  travel: '출장',\r\n  training: '교육',\r\n  maintenance: '유지보수',\r\n  software: '소프트웨어',\r\n  service: '서비스',\r\n  other: '기타'\r\n};\r\n\r\n// 이벤트 핸들러 타입들\r\nexport type EventHandler<T = any> = (value: T) => void;\r\nexport type SubmitHandler<T = any> = (data: T) => void;\r\n\r\nexport default {};","// client/src/components/purchase/PurchaseRequestForm.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMutation } from '@tanstack/react-query';  // react-query → @tanstack/react-query\r\nimport { toast } from 'react-toastify';\r\nimport Select from '../common/Select';\r\nimport { purchaseApi } from '../../services/api';\r\nimport { PurchaseRequest, ItemCategory, UrgencyLevel, PurchaseMethod, PurchaseRequestFormData } from '../../types';\r\nimport { CATEGORY_LABELS, URGENCY_LABELS } from '../../types';\r\n\r\ninterface PurchaseRequestFormProps {\r\n  request?: PurchaseRequest | null;\r\n  onSuccess: () => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst FormContainer = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${props => props.theme.spacing.lg};\r\n`;\r\n\r\nconst FormGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: ${props => props.theme.spacing.md};\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst FormRow = styled.div`\r\n  grid-column: 1 / -1;\r\n`;\r\n\r\nconst TextArea = styled.textarea<{ hasError?: boolean }>`\r\n  width: 100%;\r\n  min-height: 100px;\r\n  padding: ${props => props.theme.spacing.sm} ${props => props.theme.spacing.md};\r\n  border: 2px solid ${props => props.hasError ? props.theme.colors.error : props.theme.colors.border};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  font-size: 1rem;\r\n  font-family: inherit;\r\n  background: ${props => props.theme.colors.surface};\r\n  color: ${props => props.theme.colors.text};\r\n  resize: vertical;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.hasError ? props.theme.colors.error : props.theme.colors.primary};\r\n    box-shadow: 0 0 0 3px ${props => props.hasError ? props.theme.colors.error : props.theme.colors.primary}20;\r\n  }\r\n  \r\n  &::placeholder {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: ${props => props.theme.spacing.sm};\r\n  padding-top: ${props => props.theme.spacing.md};\r\n  border-top: 1px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst categoryOptions = Object.entries(CATEGORY_LABELS).map(([value, label]) => ({\r\n  value,\r\n  label,\r\n}));\r\n\r\nconst urgencyOptions = Object.entries(URGENCY_LABELS).map(([value, label]) => ({\r\n  value,\r\n  label,\r\n}));\r\n\r\nconst purchaseMethodOptions = [\r\n  { value: 'direct', label: '직접구매' },\r\n  { value: 'quotation', label: '견적요청' },\r\n  { value: 'contract', label: '계약' },\r\n  { value: 'framework', label: '단가계약' },\r\n  { value: 'marketplace', label: '마켓플레이스' },\r\n];\r\n\r\nconst PurchaseRequestForm: React.FC<PurchaseRequestFormProps> = ({ request, onSuccess, onCancel }) => {\r\n  const queryClient = useQueryClient();\r\n  const [formData, setFormData] = useState<PurchaseRequestFormData>({\r\n    itemName: request?.itemName || '',\r\n    specifications: request?.specifications || '',\r\n    quantity: request?.quantity || 1,\r\n    estimatedPrice: request?.estimatedPrice || 0,\r\n    preferredSupplier: request?.preferredSupplier || '',\r\n    category: request?.category || 'office_supplies',\r\n    urgency: request?.urgency || 'medium',\r\n    justification: request?.justification || '',\r\n    department: request?.department || '',\r\n    project: request?.project || '',\r\n    budgetCode: request?.budgetCode || '',\r\n    expectedDeliveryDate: request?.expectedDeliveryDate ? new Date(request.expectedDeliveryDate).toISOString().split('T')[0] : '',\r\n    purchaseMethod: request?.purchaseMethod || 'direct',\r\n  });\r\n\r\n  const createMutation = useMutation(purchaseApi.createRequest, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries('purchase-requests');\r\n      toast.success('구매 요청이 등록되었습니다.');\r\n      onSuccess();\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.message || '등록 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const updateMutation = useMutation(\r\n    (data: Partial<PurchaseRequestFormData>) => purchaseApi.updateRequest(request!.id, data),\r\n    {\r\n      onSuccess: () => {\r\n        queryClient.invalidateQueries('purchase-requests');\r\n        toast.success('구매 요청이 수정되었습니다.');\r\n        onSuccess();\r\n      },\r\n      onError: (error: any) => {\r\n        toast.error(error.response?.data?.message || '수정 중 오류가 발생했습니다.');\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const submitData = {\r\n      ...formData,\r\n      estimatedPrice: Number(formData.estimatedPrice),\r\n      quantity: Number(formData.quantity),\r\n    };\r\n\r\n    if (request) {\r\n      updateMutation.mutate(submitData);\r\n    } else {\r\n      createMutation.mutate(submitData);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: keyof PurchaseRequestFormData, value: any) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const isLoading = createMutation.isLoading || updateMutation.isLoading;\r\n\r\n  return (\r\n    <FormContainer onSubmit={handleSubmit}>\r\n      <FormGrid>\r\n        <Input\r\n          label=\"품목명\"\r\n          value={formData.itemName}\r\n          onChange={(e) => handleChange('itemName', e.target.value)}\r\n          required\r\n        />\r\n        \r\n        <Input\r\n          label=\"수량\"\r\n          type=\"number\"\r\n          value={formData.quantity}\r\n          onChange={(e) => handleChange('quantity', Number(e.target.value))}\r\n          required\r\n        />\r\n        \r\n        <FormRow>\r\n          <Input\r\n            label=\"사양\"\r\n            value={formData.specifications}\r\n            onChange={(e) => handleChange('specifications', e.target.value)}\r\n          />\r\n        </FormRow>\r\n        \r\n        <Input\r\n          label=\"예상 단가\"\r\n          type=\"number\"\r\n          value={formData.estimatedPrice}\r\n          onChange={(e) => handleChange('estimatedPrice', Number(e.target.value))}\r\n        />\r\n        \r\n        <Input\r\n          label=\"선호 공급업체\"\r\n          value={formData.preferredSupplier}\r\n          onChange={(e) => handleChange('preferredSupplier', e.target.value)}\r\n        />\r\n        \r\n        <Select\r\n          label=\"카테고리\"\r\n          value={formData.category}\r\n          options={categoryOptions}\r\n          onChange={(value) => handleChange('category', value as ItemCategory)}\r\n        />\r\n        \r\n        <Select\r\n          label=\"긴급도\"\r\n          value={formData.urgency}\r\n          options={urgencyOptions}\r\n          onChange={(value) => handleChange('urgency', value as UrgencyLevel)}\r\n        />\r\n        \r\n        <Input\r\n          label=\"부서\"\r\n          value={formData.department}\r\n          onChange={(e) => handleChange('department', e.target.value)}\r\n          required\r\n        />\r\n        \r\n        <Input\r\n          label=\"프로젝트\"\r\n          value={formData.project || ''}\r\n          onChange={(e) => handleChange('project', e.target.value)}\r\n        />\r\n        \r\n        <Input\r\n          label=\"예산 코드\"\r\n          value={formData.budgetCode || ''}\r\n          onChange={(e) => handleChange('budgetCode', e.target.value)}\r\n        />\r\n        \r\n        <Input\r\n          label=\"희망 납기일\"\r\n          type=\"date\"\r\n          value={formData.expectedDeliveryDate || ''}\r\n          onChange={(e) => handleChange('expectedDeliveryDate', e.target.value)}\r\n        />\r\n        \r\n        <Select\r\n          label=\"구매방법\"\r\n          value={formData.purchaseMethod}\r\n          options={purchaseMethodOptions}\r\n          onChange={(value) => handleChange('purchaseMethod', value as PurchaseMethod)}\r\n        />\r\n        \r\n        <FormRow>\r\n          <div>\r\n            <label>구매 사유</label>\r\n            <TextArea\r\n              value={formData.justification}\r\n              onChange={(e) => handleChange('justification', e.target.value)}\r\n              placeholder=\"구매가 필요한 사유를 상세히 입력해주세요...\"\r\n              required\r\n            />\r\n          </div>\r\n        </FormRow>\r\n      </FormGrid>\r\n\r\n      <ButtonGroup>\r\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\r\n          취소\r\n        </Button>\r\n        <Button type=\"submit\" loading={isLoading}>\r\n          {request ? '수정' : '등록'}\r\n        </Button>\r\n      </ButtonGroup>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PurchaseRequestForm;\r\n\r\n\r\n","// client/src/components/common/Input.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #374151;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  padding: 8px 12px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  background: white;\r\n  color: #374151;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #f9fafb;\r\n    color: #9ca3af;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  &::placeholder {\r\n    color: #9ca3af;\r\n  }\r\n`;\r\n\r\ninterface InputProps {\r\n  label?: string;\r\n  type?: string;\r\n  value?: string | number;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  required?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  label,\r\n  type = \"text\",\r\n  value,\r\n  onChange,\r\n  placeholder,\r\n  disabled = false,\r\n  required = false,\r\n  className\r\n}) => {\r\n  return (\r\n    <InputContainer className={className}>\r\n      {label && (\r\n        <Label>\r\n          {label}\r\n          {required && <span style={{ color: '#ef4444' }}>*</span>}\r\n        </Label>\r\n      )}\r\n      <StyledInput\r\n        type={type}\r\n        value={value || ''}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        required={required}\r\n      />\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport default Input;","// client/src/components/common/Button.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n  children: React.ReactNode;\r\n  variant?: 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'outline';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n  onClick?: () => void;\r\n  type?: 'button' | 'submit' | 'reset';\r\n  className?: string;\r\n}\r\n\r\nconst ButtonContainer = styled.button<{ \r\n  variant: string; \r\n  size: string; \r\n  disabled: boolean; \r\n  loading: boolean;\r\n}>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: ${props => props.theme.spacing.sm};\r\n  border: none;\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  white-space: nowrap;\r\n  \r\n  /* 크기별 스타일 */\r\n  ${props => {\r\n    switch (props.size) {\r\n      case 'sm':\r\n        return `\r\n          padding: 6px 12px;\r\n          font-size: 0.875rem;\r\n          min-height: 32px;\r\n        `;\r\n      case 'lg':\r\n        return `\r\n          padding: 12px 24px;\r\n          font-size: 1.125rem;\r\n          min-height: 48px;\r\n        `;\r\n      default:\r\n        return `\r\n          padding: 8px 16px;\r\n          font-size: 1rem;\r\n          min-height: 40px;\r\n        `;\r\n    }\r\n  }}\r\n  \r\n  /* 변형별 스타일 */\r\n  ${props => {\r\n    const { colors } = props.theme;\r\n    switch (props.variant) {\r\n      case 'secondary':\r\n        return `\r\n          background: ${colors.gray};\r\n          color: white;\r\n          &:hover:not(:disabled) {\r\n            background: ${colors.gray}dd;\r\n            transform: translateY(-1px);\r\n          }\r\n        `;\r\n      case 'success':\r\n        return `\r\n          background: ${colors.success};\r\n          color: white;\r\n          &:hover:not(:disabled) {\r\n            background: ${colors.success}dd;\r\n            transform: translateY(-1px);\r\n          }\r\n        `;\r\n      case 'warning':\r\n        return `\r\n          background: ${colors.warning};\r\n          color: white;\r\n          &:hover:not(:disabled) {\r\n            background: ${colors.warning}dd;\r\n            transform: translateY(-1px);\r\n          }\r\n        `;\r\n      case 'danger':\r\n        return `\r\n          background: ${colors.error};\r\n          color: white;\r\n          &:hover:not(:disabled) {\r\n            background: ${colors.error}dd;\r\n            transform: translateY(-1px);\r\n          }\r\n        `;\r\n      case 'outline':\r\n        return `\r\n          background: transparent;\r\n          color: ${colors.primary};\r\n          border: 1px solid ${colors.primary};\r\n          &:hover:not(:disabled) {\r\n            background: ${colors.primary}10;\r\n            transform: translateY(-1px);\r\n          }\r\n        `;\r\n      default:\r\n        return `\r\n          background: linear-gradient(135deg, ${colors.primary}, ${colors.secondary});\r\n          color: white;\r\n          &:hover:not(:disabled) {\r\n            transform: translateY(-1px);\r\n            box-shadow: ${props.theme.shadows.md};\r\n          }\r\n        `;\r\n    }\r\n  }}\r\n  \r\n  /* 비활성화 상태 */\r\n  ${props => props.disabled && `\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n    &:hover {\r\n      transform: none;\r\n      box-shadow: none;\r\n    }\r\n  `}\r\n  \r\n  /* 로딩 상태 */\r\n  ${props => props.loading && `\r\n    cursor: wait;\r\n    &:hover {\r\n      transform: none;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst LoadingSpinner = styled.div`\r\n  width: 16px;\r\n  height: 16px;\r\n  border: 2px solid rgba(255, 255, 255, 0.3);\r\n  border-top: 2px solid white;\r\n  border-radius: 50%;\r\n  animation: spin 0.8s linear infinite;\r\n  \r\n  @keyframes spin {\r\n    from { transform: rotate(0deg); }\r\n    to { transform: rotate(360deg); }\r\n  }\r\n`;\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  children,\r\n  variant = 'primary',\r\n  size = 'md',\r\n  disabled = false,\r\n  loading = false,\r\n  onClick,\r\n  type = 'button',\r\n  className,\r\n}) => {\r\n  return (\r\n    <ButtonContainer\r\n      variant={variant}\r\n      size={size}\r\n      disabled={disabled || loading}\r\n      loading={loading}\r\n      onClick={onClick}\r\n      type={type}\r\n      className={className}\r\n    >\r\n      {loading && <LoadingSpinner />}\r\n      {children}\r\n    </ButtonContainer>\r\n  );\r\n};\r\n\r\nexport default Button;","// client/src/components/purchase/PurchaseRequestFilters.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Filter } from 'lucide-react';\r\nimport Input from '../common/Input';\r\nimport Select from '../common/Select';\r\nimport Button from '../common/Button';\r\nimport { SearchFilters, RequestStatus, UrgencyLevel } from '../../types';\r\nimport { STATUS_LABELS, URGENCY_LABELS } from '../../types';\r\n\r\ninterface PurchaseRequestFiltersProps {\r\n  onFilter: (filters: SearchFilters) => void;\r\n}\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: ${props => props.theme.spacing.md};\r\n  align-items: end;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst statusOptions = [\r\n  { value: '', label: '전체 상태' },\r\n  ...Object.entries(STATUS_LABELS).map(([value, label]) => ({ value, label }))\r\n];\r\n\r\nconst urgencyOptions = [\r\n  { value: '', label: '전체 긴급도' },\r\n  ...Object.entries(URGENCY_LABELS).map(([value, label]) => ({ value, label }))\r\n];\r\n\r\nconst PurchaseRequestFilters: React.FC<PurchaseRequestFiltersProps> = ({ onFilter }) => {\r\n  const [filters, setFilters] = useState<SearchFilters>({});\r\n\r\n  const handleFilterChange = (field: string, value: string) => {\r\n    const newFilters = { ...filters, [field]: value || undefined };\r\n    setFilters(newFilters);\r\n    onFilter(newFilters);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFilters({});\r\n    onFilter({});\r\n  };\r\n\r\n  return (\r\n    <FilterContainer>\r\n      <Input\r\n        placeholder=\"품목명 또는 요청번호로 검색...\"\r\n        value={filters.search || ''}\r\n        onChange={(e) => handleFilterChange('search', e.target.value)}\r\n      />\r\n      \r\n      <Select\r\n        placeholder=\"긴급도\"\r\n        value={filters.urgency || ''}\r\n        options={urgencyOptions}\r\n        onChange={(value) => handleFilterChange('urgency', value as string)}\r\n      />\r\n      \r\n      <Input\r\n        placeholder=\"부서\"\r\n        value={filters.department || ''}\r\n        onChange={(e) => handleFilterChange('department', e.target.value)}\r\n      />\r\n      \r\n      <Input\r\n        label=\"시작일\"\r\n        type=\"date\"\r\n        value={filters.dateFrom || ''}\r\n        onChange={(e) => handleFilterChange('dateFrom', e.target.value)}\r\n      />\r\n      \r\n      <Input\r\n        label=\"종료일\"\r\n        type=\"date\"\r\n        value={filters.dateTo || ''}\r\n        onChange={(e) => handleFilterChange('dateTo', e.target.value)}\r\n      />\r\n      \r\n      <Button variant=\"outline\" onClick={handleReset}>\r\n        <Filter size={16} />\r\n        초기화\r\n      </Button>\r\n    </FilterContainer>\r\n  );\r\n};\r\n\r\nexport default PurchaseRequestFilters;\r\n","// client/src/components/common/Modal.tsx\r\nimport React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { X } from 'lucide-react';\r\nimport { ModalProps } from '../../types';\r\n\r\nconst ModalOverlay = styled.div<{ isOpen: boolean }>`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: ${props => props.isOpen ? 'flex' : 'none'};\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  padding: ${props => props.theme.spacing.lg};\r\n  animation: fadeIn 0.2s ease-out;\r\n  \r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalContainer = styled.div<{ size: string }>`\r\n  background: ${props => props.theme.colors.surface};\r\n  border-radius: ${props => props.theme.borderRadius.lg};\r\n  box-shadow: ${props => props.theme.shadows.lg};\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  animation: slideIn 0.3s ease-out;\r\n  position: relative;\r\n  \r\n  ${props => {\r\n    switch (props.size) {\r\n      case 'sm':\r\n        return 'width: 100%; max-width: 400px;';\r\n      case 'lg':\r\n        return 'width: 100%; max-width: 800px;';\r\n      case 'xl':\r\n        return 'width: 100%; max-width: 1200px;';\r\n      default:\r\n        return 'width: 100%; max-width: 600px;';\r\n    }\r\n  }}\r\n  \r\n  @keyframes slideIn {\r\n    from {\r\n      transform: scale(0.95) translateY(-10px);\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      transform: scale(1) translateY(0);\r\n      opacity: 1;\r\n    }\r\n  }\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    margin: ${props => props.theme.spacing.md};\r\n    max-width: calc(100vw - ${props => props.theme.spacing.lg});\r\n  }\r\n`;\r\n\r\nconst ModalHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: ${props => props.theme.spacing.lg};\r\n  border-bottom: 1px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst ModalTitle = styled.h2`\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: ${props => props.theme.colors.text};\r\n  margin: 0;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 32px;\r\n  height: 32px;\r\n  border: none;\r\n  background: none;\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: ${props => props.theme.colors.background};\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  padding: ${props => props.theme.spacing.lg};\r\n`;\r\n\r\nconst Modal: React.FC<ModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  title,\r\n  children,\r\n  size = 'md',\r\n  closable = true\r\n}) => {\r\n  // ESC 키로 모달 닫기\r\n  useEffect(() => {\r\n    const handleEscKey = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape' && closable) {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', handleEscKey);\r\n      document.body.style.overflow = 'hidden'; // 배경 스크롤 방지\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscKey);\r\n      document.body.style.overflow = 'unset';\r\n    };\r\n  }, [isOpen, onClose, closable]);\r\n\r\n  // 오버레이 클릭으로 모달 닫기\r\n  const handleOverlayClick = (event: React.MouseEvent) => {\r\n    if (event.target === event.currentTarget && closable) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <ModalOverlay isOpen={isOpen} onClick={handleOverlayClick}>\r\n      <ModalContainer size={size}>\r\n        <ModalHeader>\r\n          <ModalTitle>{title}</ModalTitle>\r\n          {closable && (\r\n            <CloseButton onClick={onClose}>\r\n              <X size={20} />\r\n            </CloseButton>\r\n          )}\r\n        </ModalHeader>\r\n        <ModalContent>\r\n          {children}\r\n        </ModalContent>\r\n      </ModalContainer>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","// client/src/components/purchase/ApprovalModal.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Check, X, AlertTriangle } from 'lucide-react';\r\nimport Modal from '../common/Modal';\r\nimport Button from '../common/Button';\r\nimport { PurchaseRequest } from '../../types';\r\n\r\ninterface ApprovalModalProps {\r\n  request: PurchaseRequest;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (action: 'approve' | 'reject', comments?: string) => void;\r\n  loading?: boolean;\r\n}\r\n\r\nconst ModalContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${props => props.theme.spacing.lg};\r\n`;\r\n\r\nconst RequestInfo = styled.div`\r\n  padding: ${props => props.theme.spacing.md};\r\n  background: ${props => props.theme.colors.background};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  \r\n  .info-row {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: ${props => props.theme.spacing.sm};\r\n    \r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n  \r\n  .label {\r\n    font-weight: 500;\r\n    color: ${props => props.theme.colors.textSecondary};\r\n  }\r\n  \r\n  .value {\r\n    font-weight: 600;\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n`;\r\n\r\nconst CommentSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${props => props.theme.spacing.sm};\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  min-height: 100px;\r\n  padding: ${props => props.theme.spacing.sm} ${props => props.theme.spacing.md};\r\n  border: 2px solid ${props => props.theme.colors.border};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  font-size: 1rem;\r\n  font-family: inherit;\r\n  background: ${props => props.theme.colors.surface};\r\n  color: ${props => props.theme.colors.text};\r\n  resize: vertical;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.theme.colors.primary};\r\n    box-shadow: 0 0 0 3px ${props => props.theme.colors.primary}20;\r\n  }\r\n  \r\n  &::placeholder {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n  }\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: ${props => props.theme.spacing.sm};\r\n  padding-top: ${props => props.theme.spacing.md};\r\n  border-top: 1px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst WarningBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${props => props.theme.spacing.sm};\r\n  padding: ${props => props.theme.spacing.md};\r\n  background: ${props => props.theme.colors.warning}10;\r\n  border: 1px solid ${props => props.theme.colors.warning}30;\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  color: ${props => props.theme.colors.warning};\r\n  \r\n  svg {\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\n\r\nconst ApprovalModal: React.FC<ApprovalModalProps> = ({\r\n  request,\r\n  isOpen,\r\n  onClose,\r\n  onSubmit,\r\n  loading = false\r\n}) => {\r\n  const [action, setAction] = useState<'approve' | 'reject' | null>(null);\r\n  const [comments, setComments] = useState('');\r\n\r\n  const handleSubmit = () => {\r\n    if (action) {\r\n      onSubmit(action, comments || undefined);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAction(null);\r\n    setComments('');\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      title=\"구매 요청 승인\"\r\n      size=\"lg\"\r\n    >\r\n      <ModalContent>\r\n        <RequestInfo>\r\n          <div className=\"info-row\">\r\n            <span className=\"label\">요청번호:</span>\r\n            <span className=\"value\">{request.requestNumber}</span>\r\n          </div>\r\n          <div className=\"info-row\">\r\n            <span className=\"label\">품목명:</span>\r\n            <span className=\"value\">{request.itemName}</span>\r\n          </div>\r\n          <div className=\"info-row\">\r\n            <span className=\"label\">수량:</span>\r\n            <span className=\"value\">{request.quantity.toLocaleString()}개</span>\r\n          </div>\r\n          <div className=\"info-row\">\r\n            <span className=\"label\">예상금액:</span>\r\n            <span className=\"value\">₩{request.totalBudget.toLocaleString()}</span>\r\n          </div>\r\n          <div className=\"info-row\">\r\n            <span className=\"label\">요청자:</span>\r\n            <span className=\"value\">{request.requesterName} ({request.department})</span>\r\n          </div>\r\n          <div className=\"info-row\">\r\n            <span className=\"label\">요청일:</span>\r\n            <span className=\"value\">{new Date(request.requestDate).toLocaleDateString('ko-KR')}</span>\r\n          </div>\r\n        </RequestInfo>\r\n\r\n        {request.justification && (\r\n          <div>\r\n            <h4>구매 사유</h4>\r\n            <p style={{ padding: '12px', background: '#f8fafc', borderRadius: '8px' }}>\r\n              {request.justification}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        <CommentSection>\r\n          <label htmlFor=\"comments\">승인/거절 의견</label>\r\n          <TextArea\r\n            id=\"comments\"\r\n            value={comments}\r\n            onChange={(e) => setComments(e.target.value)}\r\n            placeholder=\"승인 또는 거절 사유를 입력해주세요... (선택사항)\"\r\n          />\r\n        </CommentSection>\r\n\r\n        {action === 'reject' && (\r\n          <WarningBox>\r\n            <AlertTriangle size={20} />\r\n            <span>거절 시 요청자에게 알림이 전송되며, 요청이 거절 상태로 변경됩니다.</span>\r\n          </WarningBox>\r\n        )}\r\n\r\n        <ActionButtons>\r\n          <Button variant=\"outline\" onClick={handleClose}>\r\n            취소\r\n          </Button>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={() => setAction('reject')}\r\n            disabled={loading}\r\n          >\r\n            <X size={16} />\r\n            거절\r\n          </Button>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={() => setAction('approve')}\r\n            disabled={loading}\r\n          >\r\n            <Check size={16} />\r\n            승인\r\n          </Button>\r\n          {action && (\r\n            <Button\r\n              onClick={handleSubmit}\r\n              loading={loading}\r\n              variant={action === 'approve' ? 'success' : 'danger'}\r\n            >\r\n              {action === 'approve' ? '승인 확정' : '거절 확정'}\r\n            </Button>\r\n          )}\r\n        </ActionButtons>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ApprovalModal;\r\n\r\n","// client/src/components/purchase/RequestDetailModal.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Edit, Check, Eye, Calendar, User, Package, DollarSign } from 'lucide-react';\r\nimport Modal from '../common/Modal';\r\nimport Button from '../common/Button';\r\nimport { PurchaseRequest } from '../../types';\r\nimport { STATUS_LABELS, URGENCY_LABELS, CATEGORY_LABELS } from '../../types';\r\n\r\ninterface RequestDetailModalProps {\r\n  request: PurchaseRequest;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onEdit?: () => void;\r\n  onApprove?: () => void;\r\n}\r\n\r\nconst DetailContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${props => props.theme.spacing.lg};\r\n`;\r\n\r\nconst Section = styled.div`\r\n  padding: ${props => props.theme.spacing.md};\r\n  background: ${props => props.theme.colors.background};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  \r\n  h3 {\r\n    margin-bottom: ${props => props.theme.spacing.md};\r\n    color: ${props => props.theme.colors.text};\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst InfoGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: ${props => props.theme.spacing.md};\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst InfoItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${props => props.theme.spacing.sm};\r\n  \r\n  .icon {\r\n    color: ${props => props.theme.colors.primary};\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .content {\r\n    flex: 1;\r\n    \r\n    .label {\r\n      font-size: 0.85rem;\r\n      color: ${props => props.theme.colors.textSecondary};\r\n      margin-bottom: 2px;\r\n    }\r\n    \r\n    .value {\r\n      font-weight: 500;\r\n      color: ${props => props.theme.colors.text};\r\n    }\r\n  }\r\n`;\r\n\r\nconst StatusBadge = styled.span<{ status: string }>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  padding: 4px 12px;\r\n  border-radius: 12px;\r\n  font-size: 0.85rem;\r\n  font-weight: 500;\r\n  background: ${props => {\r\n    switch (props.status) {\r\n      case 'pending_approval': return '#F59E0B20';\r\n      case 'approved': return '#10B98120';\r\n      case 'rejected': return '#EF444420';\r\n      default: return '#6B728020';\r\n    }\r\n  }};\r\n  color: ${props => {\r\n    switch (props.status) {\r\n      case 'pending_approval': return '#F59E0B';\r\n      case 'approved': return '#10B981';\r\n      case 'rejected': return '#EF4444';\r\n      default: return '#6B7280';\r\n    }\r\n  }};\r\n`;\r\n\r\nconst JustificationBox = styled.div`\r\n  padding: ${props => props.theme.spacing.md};\r\n  background: ${props => props.theme.colors.surface};\r\n  border: 1px solid ${props => props.theme.colors.border};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  line-height: 1.6;\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: ${props => props.theme.spacing.sm};\r\n  padding-top: ${props => props.theme.spacing.md};\r\n  border-top: 1px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst RequestDetailModal: React.FC<RequestDetailModalProps> = ({\r\n  request,\r\n  isOpen,\r\n  onClose,\r\n  onEdit,\r\n  onApprove\r\n}) => {\r\n  const canEdit = ['draft', 'submitted', 'rejected'].includes(request.status);\r\n  const canApprove = request.status === 'pending_approval';\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      title=\"구매 요청 상세\"\r\n      size=\"lg\"\r\n    >\r\n      <DetailContainer>\r\n        <Section>\r\n          <h3>기본 정보</h3>\r\n          <InfoGrid>\r\n            <InfoItem>\r\n              <Package className=\"icon\" size={20} />\r\n              <div className=\"content\">\r\n                <div className=\"label\">요청번호</div>\r\n                <div className=\"value\">{request.requestNumber}</div>\r\n              </div>\r\n            </InfoItem>\r\n            \r\n            <InfoItem>\r\n              <div className=\"content\">\r\n                <div className=\"label\">상태</div>\r\n                <StatusBadge status={request.status}>\r\n                  {STATUS_LABELS[request.status]}\r\n                </StatusBadge>\r\n              </div>\r\n            </InfoItem>\r\n            \r\n            <InfoItem>\r\n              <User className=\"icon\" size={20} />\r\n              <div className=\"content\">\r\n                <div className=\"label\">요청자</div>\r\n                <div className=\"value\">{request.requesterName}</div>\r\n              </div>\r\n            </InfoItem>\r\n            \r\n            <InfoItem>\r\n              <Calendar className=\"icon\" size={20} />\r\n              <div className=\"content\">\r\n                <div className=\"label\">요청일</div>\r\n                <div className=\"value\">{new Date(request.requestDate).toLocaleDateString('ko-KR')}</div>\r\n              </div>\r\n            </InfoItem>\r\n          </InfoGrid>\r\n        </Section>\r\n\r\n        <Section>\r\n          <h3>품목 정보</h3>\r\n          <InfoGrid>\r\n            <InfoItem>\r\n              <div className=\"content\">\r\n                <div className=\"label\">품목명</div>\r\n                <div className=\"value\">{request.itemName}</div>\r\n              </div>\r\n            </InfoItem>\r\n            \r\n            <InfoItem>\r\n              <div className=\"content\">\r\n                <div className=\"label\">수량</div>\r\n                <div className=\"value\">{request.quantity.toLocaleString()}개</div>\r\n              </div>\r\n            </InfoItem>\r\n            \r\n            {request.specifications && (\r\n              <InfoItem style={{ gridColumn: '1 / -1' }}>\r\n                <div className=\"content\">\r\n                  <div className=\"label\">사양</div>\r\n                  <div className=\"value\">{request.specifications}</div>\r\n                </div>\r\n              </InfoItem>\r\n            )}\r\n            \r\n            <InfoItem>\r\n              <DollarSign className=\"icon\" size={20} />\r\n              <div className=\"content\">\r\n                <div className=\"label\">예상금액</div>\r\n                <div className=\"value\">₩{request.totalBudget.toLocaleString()}</div>\r\n              </div>\r\n            </InfoItem>\r\n            \r\n            <InfoItem>\r\n              <div className=\"content\">\r\n                <div className=\"label\">카테고리</div>\r\n                <div className=\"value\">{CATEGORY_LABELS[request.category]}</div>\r\n              </div>\r\n            </InfoItem>\r\n            \r\n            <InfoItem>\r\n              <div className=\"content\">\r\n                <div className=\"label\">긴급도</div>\r\n                <div className=\"value\">{URGENCY_LABELS[request.urgency]}</div>\r\n              </div>\r\n            </InfoItem>\r\n            \r\n            {request.preferredSupplier && (\r\n              <InfoItem>\r\n                <div className=\"content\">\r\n                  <div className=\"label\">선호 공급업체</div>\r\n                  <div className=\"value\">{request.preferredSupplier}</div>\r\n                </div>\r\n              </InfoItem>\r\n            )}\r\n          </InfoGrid>\r\n        </Section>\r\n\r\n        <Section>\r\n          <h3>부서 및 프로젝트 정보</h3>\r\n          <InfoGrid>\r\n            <InfoItem>\r\n              <div className=\"content\">\r\n                <div className=\"label\">부서</div>\r\n                <div className=\"value\">{request.department}</div>\r\n              </div>\r\n            </InfoItem>\r\n            \r\n            {request.project && (\r\n              <InfoItem>\r\n                <div className=\"content\">\r\n                  <div className=\"label\">프로젝트</div>\r\n                  <div className=\"value\">{request.project}</div>\r\n                </div>\r\n              </InfoItem>\r\n            )}\r\n            \r\n            {request.budgetCode && (\r\n              <InfoItem>\r\n                <div className=\"content\">\r\n                  <div className=\"label\">예산 코드</div>\r\n                  <div className=\"value\">{request.budgetCode}</div>\r\n                </div>\r\n              </InfoItem>\r\n            )}\r\n            \r\n            {request.expectedDeliveryDate && (\r\n              <InfoItem>\r\n                <div className=\"content\">\r\n                  <div className=\"label\">희망 납기일</div>\r\n                  <div className=\"value\">{new Date(request.expectedDeliveryDate).toLocaleDateString('ko-KR')}</div>\r\n                </div>\r\n              </InfoItem>\r\n            )}\r\n          </InfoGrid>\r\n        </Section>\r\n\r\n        {request.justification && (\r\n          <Section>\r\n            <h3>구매 사유</h3>\r\n            <JustificationBox>\r\n              {request.justification}\r\n            </JustificationBox>\r\n          </Section>\r\n        )}\r\n\r\n        <ActionButtons>\r\n          <Button variant=\"outline\" onClick={onClose}>\r\n            닫기\r\n          </Button>\r\n          \r\n          {canEdit && onEdit && (\r\n            <Button variant=\"outline\" onClick={onEdit}>\r\n              <Edit size={16} />\r\n              수정\r\n            </Button>\r\n          )}\r\n          \r\n          {canApprove && onApprove && (\r\n            <Button variant=\"success\" onClick={onApprove}>\r\n              <Check size={16} />\r\n              승인처리\r\n            </Button>\r\n          )}\r\n        </ActionButtons>\r\n      </DetailContainer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RequestDetailModal;\r\n      <Select\r\n        placeholder=\"카테고리 선택\"\r\n        value={filters.category || ''}\r\n        options={categoryOptions}\r\n        onChange={(value) => handleFilterChange('category', value as string)}\r\n      />\r\n","// client/src/hooks/usePurchaseRequests.ts (수정된 버전)\r\nimport { useQuery, useMutation } from '@tanstack/react-query';\r\n\r\nimport { purchaseApi } from '../services/api';\r\nimport { SearchFilters } from '../types';\r\n\r\nexport const usePurchaseRequests = (\r\n  page: number = 1,\r\n  limit: number = 20,\r\n  filters: SearchFilters = {}\r\n) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const {\r\n    data,\r\n    isLoading: loading,\r\n    error,\r\n    refetch\r\n  } = useQuery(\r\n    ['purchase-requests', page, limit, filters],\r\n    () => purchaseApi.getRequests(page, limit, filters),\r\n    {\r\n      keepPreviousData: true,\r\n      staleTime: 5 * 60 * 1000,\r\n    }\r\n  );\r\n\r\n  // 통계 데이터 조회\r\n  const { data: statsData } = useQuery(\r\n    ['purchase-requests-stats'],\r\n    () => purchaseApi.getStats(),\r\n    {\r\n      staleTime: 10 * 60 * 1000,\r\n    }\r\n  );\r\n\r\n  return {\r\n    requests: data?.data?.items || [],\r\n    total: data?.data?.total || 0,\r\n    totalPages: data?.data?.totalPages || 0,\r\n    hasNext: data?.data?.hasNext || false,\r\n    hasPrev: data?.data?.hasPrev || false,\r\n    stats: statsData?.data || {\r\n      total: 0,\r\n      pending: 0,\r\n      approved: 0,\r\n      rejected: 0,\r\n      thisMonth: 0,\r\n      lastMonth: 0,\r\n    },\r\n    loading,\r\n    error,\r\n    refetch,\r\n    invalidate: () => {\r\n      queryClient.invalidateQueries('purchase-requests');\r\n      queryClient.invalidateQueries('purchase-requests-stats');\r\n    }\r\n  };\r\n};","// client/src/components/purchase/PurchaseRequestPage.tsx\r\nimport React, { useState, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { \r\n  Plus, \r\n  Search, \r\n  Download, \r\n  Filter, \r\n  RefreshCw, \r\n  Eye,\r\n  Edit,\r\n  Trash2,\r\n  Check,\r\n  X,\r\n  Clock,\r\n  AlertCircle,\r\n  FileText\r\n} from 'lucide-react';\r\n\r\n// Components\r\nimport PageHeader from '../common/Header';\r\nimport Table from '../common/Table';\r\nimport Pagination from '../common/Pagination';\r\nimport LoadingSpinner from '../common/LoadingSpinner';\r\nimport PurchaseRequestForm from './PurchaseRequestForm';\r\nimport PurchaseRequestFilters from './PurchaseRequestFilters';\r\nimport ApprovalModal from './ApprovalModal';\r\nimport RequestDetailModal from './RequestDetailModal';\r\n\r\n// Hooks & Services\r\nimport { usePurchaseRequests } from '../../hooks/usePurchaseRequests';\r\nimport { purchaseApi } from '../../services/api';\r\n\r\n// Types\r\n// Types - 경로 수정\r\nimport { \r\n  PurchaseRequest, \r\n  SearchFilters, \r\n  TableColumn, \r\n  RequestStatus,\r\n  UrgencyLevel \r\n} from '../../types';  // ../../types 에서 ../types 로 변경\r\nimport { STATUS_LABELS, URGENCY_LABELS, STATUS_COLORS, URGENCY_COLORS } from '../../types';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StatCard = styled(Card)<{ color?: string }>`\r\n  text-align: center;\r\n  background: ${props => props.color ? `linear-gradient(135deg, ${props.color}20 0%, ${props.color}10 100%)` : 'white'};\r\n  border-left: 4px solid ${props => props.color || props.theme.colors.primary};\r\n  \r\n  .stat-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 8px;\r\n    margin-bottom: 15px;\r\n    color: ${props => props.color || props.theme.colors.primary};\r\n  }\r\n  \r\n  .stat-value {\r\n    font-size: 2.5rem;\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n    color: ${props => props.color || props.theme.colors.primary};\r\n  }\r\n  \r\n  .stat-label {\r\n    font-size: 0.9rem;\r\n    color: ${props => props.theme.colors.textSecondary};\r\n  }\r\n  \r\n  .stat-change {\r\n    font-size: 0.8rem;\r\n    margin-top: 8px;\r\n    padding: 4px 8px;\r\n    border-radius: 12px;\r\n    \r\n    &.positive {\r\n      background: ${props => props.theme.colors.success}20;\r\n      color: ${props => props.theme.colors.success};\r\n    }\r\n    \r\n    &.negative {\r\n      background: ${props => props.theme.colors.error}20;\r\n      color: ${props => props.theme.colors.error};\r\n    }\r\n  }\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst StatusBadge = styled.span<{ status: RequestStatus }>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  padding: 4px 12px;\r\n  border-radius: 12px;\r\n  font-size: 0.85rem;\r\n  font-weight: 500;\r\n  background: ${props => STATUS_COLORS[props.status]}20;\r\n  color: ${props => STATUS_COLORS[props.status]};\r\n`;\r\n\r\nconst UrgencyBadge = styled.span<{ urgency: UrgencyLevel }>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  padding: 2px 8px;\r\n  border-radius: 8px;\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n  background: ${props => URGENCY_COLORS[props.urgency]}20;\r\n  color: ${props => URGENCY_COLORS[props.urgency]};\r\n`;\r\n\r\nconst ActionButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n`;\r\n\r\nconst PriceText = styled.span`\r\n  font-weight: 600;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst RequestInfo = styled.div`\r\n  .request-title {\r\n    font-weight: bold;\r\n    margin-bottom: 4px;\r\n  }\r\n  \r\n  .request-meta {\r\n    font-size: 0.85rem;\r\n    color: ${props => props.theme.colors.textSecondary};\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2px;\r\n  }\r\n`;\r\n\r\nconst PurchaseRequestPage: React.FC = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  // State\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filters, setFilters] = useState<SearchFilters>({});\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [editingRequest, setEditingRequest] = useState<PurchaseRequest | null>(null);\r\n  const [viewingRequest, setViewingRequest] = useState<PurchaseRequest | null>(null);\r\n  const [approvingRequest, setApprovingRequest] = useState<PurchaseRequest | null>(null);\r\n  const [selectedRequests, setSelectedRequests] = useState<number[]>([]);\r\n\r\n  // Custom hooks\r\n  const {\r\n    requests,\r\n    loading,\r\n    error,\r\n    totalPages,\r\n    stats,\r\n    refetch\r\n  } = usePurchaseRequests(currentPage, 20, filters);\r\n\r\n  // Mutations\r\n  const deleteRequestMutation = useMutation(purchaseApi.deleteRequest, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries('purchase-requests');\r\n      toast.success('구매 요청이 삭제되었습니다.');\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.message || '삭제 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const approveRequestMutation = useMutation(purchaseApi.approveRequest, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries('purchase-requests');\r\n      setApprovingRequest(null);\r\n      toast.success('구매 요청이 처리되었습니다.');\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.message || '승인 처리 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const exportMutation = useMutation(purchaseApi.exportRequests, {\r\n    onSuccess: (blob: Blob) => {\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `purchase_requests_${new Date().toISOString().split('T')[0]}.xlsx`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n      toast.success('Excel 파일이 다운로드되었습니다.');\r\n    },\r\n    onError: () => {\r\n      toast.error('내보내기 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  // Table columns\r\n  const columns: TableColumn<PurchaseRequest>[] = useMemo(() => [\r\n    {\r\n      key: 'requestNumber',\r\n      label: '요청번호',\r\n      sortable: true,\r\n      width: '120px',\r\n      render: (value) => (\r\n        <span style={{ fontFamily: 'monospace', fontSize: '0.9rem' }}>\r\n          {value}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      key: 'itemName',\r\n      label: '품목 정보',\r\n      sortable: true,\r\n      render: (value, item) => (\r\n        <RequestInfo>\r\n          <div className=\"request-title\">{value}</div>\r\n          <div className=\"request-meta\">\r\n            <span>수량: {item.quantity.toLocaleString()}개</span>\r\n            {item.specifications && <span>사양: {item.specifications}</span>}\r\n          </div>\r\n        </RequestInfo>\r\n      ),\r\n    },\r\n    {\r\n      key: 'totalBudget',\r\n      label: '예상금액',\r\n      sortable: true,\r\n      width: '120px',\r\n      align: 'right',\r\n      render: (value) => (\r\n        <PriceText>₩{value.toLocaleString()}</PriceText>\r\n      ),\r\n    },\r\n    {\r\n      key: 'requesterName',\r\n      label: '요청자',\r\n      sortable: true,\r\n      width: '100px',\r\n      render: (value, item) => (\r\n        <div>\r\n          <div style={{ fontWeight: '500' }}>{value}</div>\r\n          <div style={{ fontSize: '0.8rem', color: '#666' }}>{item.department}</div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: 'urgency',\r\n      label: '긴급도',\r\n      width: '80px',\r\n      render: (value) => (\r\n        <UrgencyBadge urgency={value}>\r\n          {value === 'emergency' && <AlertCircle size={12} />}\r\n          {URGENCY_LABELS[value]}\r\n        </UrgencyBadge>\r\n      ),\r\n    },\r\n    {\r\n      key: 'status',\r\n      label: '상태',\r\n      width: '120px',\r\n      render: (value) => (\r\n        <StatusBadge status={value}>\r\n          {value === 'pending_approval' && <Clock size={12} />}\r\n          {value === 'approved' && <Check size={12} />}\r\n          {value === 'rejected' && <X size={12} />}\r\n          {STATUS_LABELS[value]}\r\n        </StatusBadge>\r\n      ),\r\n    },\r\n    {\r\n      key: 'requestDate',\r\n      label: '요청일',\r\n      sortable: true,\r\n      width: '100px',\r\n      render: (value) => new Date(value).toLocaleDateString('ko-KR'),\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: '관리',\r\n      width: '150px',\r\n      render: (_, item) => (\r\n        <ActionButtonGroup>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            onClick={() => handleView(item)}\r\n            title=\"상세보기\"\r\n          >\r\n            <Eye size={14} />\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            onClick={() => handleEdit(item)}\r\n            disabled={!canEdit(item)}\r\n            title=\"수정\"\r\n          >\r\n            <Edit size={14} />\r\n          </Button>\r\n          {canApprove(item) && (\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"success\"\r\n              onClick={() => handleApprove(item)}\r\n              title=\"승인처리\"\r\n            >\r\n              <Check size={14} />\r\n            </Button>\r\n          )}\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"danger\"\r\n            onClick={() => handleDelete(item.id)}\r\n            disabled={!canDelete(item)}\r\n            title=\"삭제\"\r\n          >\r\n            <Trash2 size={14} />\r\n          </Button>\r\n        </ActionButtonGroup>\r\n      ),\r\n    },\r\n  ], []);\r\n\r\n  // Event handlers\r\n  const handleSearch = (searchFilters: SearchFilters) => {\r\n    setFilters(searchFilters);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleView = (request: PurchaseRequest) => {\r\n    setViewingRequest(request);\r\n  };\r\n\r\n  const handleEdit = (request: PurchaseRequest) => {\r\n    setEditingRequest(request);\r\n    setIsAddModalOpen(true);\r\n  };\r\n\r\n  const handleDelete = async (requestId: number) => {\r\n    if (window.confirm('정말로 이 구매 요청을 삭제하시겠습니까?')) {\r\n      deleteRequestMutation.mutate(requestId);\r\n    }\r\n  };\r\n\r\n  const handleApprove = (request: PurchaseRequest) => {\r\n    setApprovingRequest(request);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    exportMutation.mutate(filters);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setIsAddModalOpen(false);\r\n    setEditingRequest(null);\r\n  };\r\n\r\n  const handleFormSuccess = () => {\r\n    handleModalClose();\r\n    refetch();\r\n  };\r\n\r\n  const handleApprovalSubmit = (action: 'approve' | 'reject', comments?: string) => {\r\n    if (approvingRequest) {\r\n      approveRequestMutation.mutate({\r\n        requestId: approvingRequest.id,\r\n        action,\r\n        comments\r\n      });\r\n    }\r\n  };\r\n\r\n  // Permission checks\r\n  const canEdit = (request: PurchaseRequest) => {\r\n    return ['draft', 'submitted', 'rejected'].includes(request.status);\r\n  };\r\n\r\n  const canDelete = (request: PurchaseRequest) => {\r\n    return ['draft', 'submitted', 'rejected'].includes(request.status);\r\n  };\r\n\r\n  const canApprove = (request: PurchaseRequest) => {\r\n    return request.status === 'pending_approval';\r\n    // 실제로는 현재 사용자가 승인자인지 체크\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container>\r\n        <Card>\r\n          <div style={{ textAlign: 'center', padding: '40px' }}>\r\n            <p>데이터를 불러오는 중 오류가 발생했습니다.</p>\r\n            <Button onClick={() => refetch()}>다시 시도</Button>\r\n          </div>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader\r\n        title=\"구매 요청 관리\"\r\n        subtitle=\"구매 요청을 등록하고 승인 프로세스를 관리할 수 있습니다.\"\r\n      />\r\n\r\n      {/* 통계 카드 */}\r\n      <StatsContainer>\r\n        <StatCard color=\"#3B82F6\">\r\n          <div className=\"stat-header\">\r\n            <FileText size={24} />\r\n            <span>전체 요청</span>\r\n          </div>\r\n          <div className=\"stat-value\">{stats?.total || 0}</div>\r\n          <div className=\"stat-label\">총 구매 요청</div>\r\n          <div className=\"stat-change positive\">\r\n            이번 달 +{stats?.thisMonth || 0}\r\n          </div>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#F59E0B\">\r\n          <div className=\"stat-header\">\r\n            <Clock size={24} />\r\n            <span>승인 대기</span>\r\n          </div>\r\n          <div className=\"stat-value\">{stats?.pending || 0}</div>\r\n          <div className=\"stat-label\">처리 대기중</div>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#10B981\">\r\n          <div className=\"stat-header\">\r\n            <Check size={24} />\r\n            <span>승인 완료</span>\r\n          </div>\r\n          <div className=\"stat-value\">{stats?.approved || 0}</div>\r\n          <div className=\"stat-label\">승인된 요청</div>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#EF4444\">\r\n          <div className=\"stat-header\">\r\n            <X size={24} />\r\n            <span>거절됨</span>\r\n          </div>\r\n          <div className=\"stat-value\">{stats?.rejected || 0}</div>\r\n          <div className=\"stat-label\">거절된 요청</div>\r\n        </StatCard>\r\n      </StatsContainer>\r\n\r\n      <Card>\r\n        {/* 필터 및 액션 버튼 */}\r\n        <FilterContainer>\r\n          <PurchaseRequestFilters onFilter={handleSearch} />\r\n          \r\n          <ActionButtons>\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => refetch()}\r\n              disabled={loading}\r\n            >\r\n              <RefreshCw size={16} />\r\n              새로고침\r\n            </Button>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={handleExport}\r\n              disabled={exportMutation.isLoading}\r\n            >\r\n              <Download size={16} />\r\n              Excel 다운로드\r\n            </Button>\r\n            <Button onClick={() => setIsAddModalOpen(true)}>\r\n              <Plus size={16} />\r\n              구매 요청\r\n            </Button>\r\n          </ActionButtons>\r\n        </FilterContainer>\r\n\r\n        {/* 테이블 */}\r\n        <Table\r\n          columns={columns}\r\n          data={requests || []}\r\n          loading={loading}\r\n          emptyMessage=\"등록된 구매 요청이 없습니다.\"\r\n          selectable\r\n          selectedItems={selectedRequests}\r\n          onSelectItems={setSelectedRequests}\r\n        />\r\n\r\n        {/* 페이지네이션 */}\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          onPageChange={setCurrentPage}\r\n        />\r\n      </Card>\r\n\r\n      {/* 구매 요청 추가/수정 모달 */}\r\n      <Modal\r\n        isOpen={isAddModalOpen}\r\n        onClose={handleModalClose}\r\n        title={editingRequest ? '구매 요청 수정' : '새 구매 요청'}\r\n        size=\"lg\"\r\n      >\r\n        <PurchaseRequestForm\r\n          request={editingRequest}\r\n          onSuccess={handleFormSuccess}\r\n          onCancel={handleModalClose}\r\n        />\r\n      </Modal>\r\n\r\n      {/* 구매 요청 상세보기 모달 */}\r\n      {viewingRequest && (\r\n        <RequestDetailModal\r\n          request={viewingRequest}\r\n          isOpen={!!viewingRequest}\r\n          onClose={() => setViewingRequest(null)}\r\n          onEdit={() => {\r\n            setEditingRequest(viewingRequest);\r\n            setViewingRequest(null);\r\n            setIsAddModalOpen(true);\r\n          }}\r\n          onApprove={() => {\r\n            setApprovingRequest(viewingRequest);\r\n            setViewingRequest(null);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* 승인/거절 모달 */}\r\n      {approvingRequest && (\r\n        <ApprovalModal\r\n          request={approvingRequest}\r\n          isOpen={!!approvingRequest}\r\n          onClose={() => setApprovingRequest(null)}\r\n          onSubmit={handleApprovalSubmit}\r\n          loading={approveRequestMutation.isLoading}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PurchaseRequestPage;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMutation } from '@tanstack/react-query';  // react-query → @tanstack/react-query\r\nimport { toast } from 'react-toastify';\r\nimport { MessageSquare, Send, RefreshCw } from 'lucide-react';\r\nimport PageHeader from '../common/Header';\r\nimport { kakaoApi } from '../../services/api';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst MessageContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 30px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  min-height: 300px;\r\n  padding: ${props => props.theme.spacing.md};\r\n  border: 2px solid ${props => props.theme.colors.border};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  font-size: 1rem;\r\n  font-family: inherit;\r\n  background: ${props => props.theme.colors.surface};\r\n  color: ${props => props.theme.colors.text};\r\n  resize: vertical;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.theme.colors.primary};\r\n    box-shadow: 0 0 0 3px ${props => props.theme.colors.primary}20;\r\n  }\r\n  \r\n  &::placeholder {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n  }\r\n`;\r\n\r\nconst ResultCard = styled(Card)`\r\n  .result-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 12px 0;\r\n    border-bottom: 1px solid ${props => props.theme.colors.border};\r\n    \r\n    &:last-child {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n  \r\n  .label {\r\n    font-weight: 500;\r\n    color: ${props => props.theme.colors.textSecondary};\r\n  }\r\n  \r\n  .value {\r\n    font-weight: 600;\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n`;\r\n\r\nconst KakaoPage: React.FC = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [result, setResult] = useState<any>(null);\r\n\r\n  const parseMutation = useMutation({\r\n    mutationFn: kakaoApi.parseMessage,  // 최신 문법으로 변경\r\n    onSuccess: (data) => {\r\n      setResult(data.data);\r\n      toast.success('메시지가 성공적으로 파싱되었습니다.');\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.message || '파싱 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const handleParse = () => {\r\n    if (!message.trim()) {\r\n      toast.error('메시지를 입력해주세요.');\r\n      return;\r\n    }\r\n    parseMutation.mutate(message);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setMessage('');\r\n    setResult(null);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader\r\n        title=\"카카오톡 메시지 처리\"\r\n        subtitle=\"카카오톡 메시지를 파싱하여 수령 정보를 추출합니다.\"\r\n      />\r\n\r\n      <MessageContainer>\r\n        <Card>\r\n          <h3>메시지 입력</h3>\r\n          <TextArea\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            placeholder=\"카카오톡 메시지를 여기에 붙여넣기 하세요...\"\r\n          />\r\n          \r\n          <div style={{ display: 'flex', gap: '10px', marginTop: '20px' }}>\r\n            <Button \r\n              onClick={handleParse}\r\n              loading={parseMutation.isPending}  // isLoading → isPending\r\n              disabled={!message.trim()}\r\n            >\r\n              <Send size={16} />\r\n              파싱하기\r\n            </Button>\r\n            <Button variant=\"outline\" onClick={handleClear}>\r\n              <RefreshCw size={16} />\r\n              초기화\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n\r\n        <ResultCard>\r\n          <h3>파싱 결과</h3>\r\n          {result ? (\r\n            <div>\r\n              {result.itemNo && (\r\n                <div className=\"result-item\">\r\n                  <span className=\"label\">품목번호:</span>\r\n                  <span className=\"value\">{result.itemNo}</span>\r\n                </div>\r\n              )}\r\n              {result.itemName && (\r\n                <div className=\"result-item\">\r\n                  <span className=\"label\">품목명:</span>\r\n                  <span className=\"value\">{result.itemName}</span>\r\n                </div>\r\n              )}\r\n              {result.quantity && (\r\n                <div className=\"result-item\">\r\n                  <span className=\"label\">수량:</span>\r\n                  <span className=\"value\">{result.quantity}개</span>\r\n                </div>\r\n              )}\r\n              {result.receiver && (\r\n                <div className=\"result-item\">\r\n                  <span className=\"label\">수령자:</span>\r\n                  <span className=\"value\">{result.receiver}</span>\r\n                </div>\r\n              )}\r\n              {result.notes && (\r\n                <div className=\"result-item\">\r\n                  <span className=\"label\">메모:</span>\r\n                  <span className=\"value\">{result.notes}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div style={{ textAlign: 'center', color: '#666', padding: '40px' }}>\r\n              <MessageSquare size={48} style={{ opacity: 0.3, marginBottom: '16px' }} />\r\n              <p>메시지를 파싱하면 결과가 여기에 표시됩니다.</p>\r\n            </div>\r\n          )}\r\n        </ResultCard>\r\n      </MessageContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default KakaoPage;","// client/src/components/upload/UploadPage.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery, useMutation } from '@tanstack/react-query';\r\nimport { toast } from 'react-toastify';\r\nimport { Upload, FileText, Download } from 'lucide-react';\r\nimport PageHeader from '../common/Header';\r\nimport { uploadApi } from '../../services/api';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst UploadArea = styled.div<{ isDragOver: boolean }>`\r\n  border: 2px dashed ${props => props.isDragOver ? props.theme.colors.primary : props.theme.colors.border};\r\n  border-radius: ${props => props.theme.borderRadius.lg};\r\n  padding: 60px 20px;\r\n  text-align: center;\r\n  background: ${props => props.isDragOver ? props.theme.colors.primary + '05' : props.theme.colors.surface};\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    border-color: ${props => props.theme.colors.primary};\r\n    background: ${props => props.theme.colors.primary}05;\r\n  }\r\n  \r\n  .upload-icon {\r\n    margin-bottom: 20px;\r\n    opacity: 0.5;\r\n  }\r\n  \r\n  .upload-text {\r\n    font-size: 1.1rem;\r\n    margin-bottom: 10px;\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n  \r\n  .upload-hint {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst HiddenInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst ResultSection = styled.div`\r\n  margin-top: 30px;\r\n  \r\n  .result-text {\r\n    font-size: 1.1rem;\r\n    margin-bottom: 20px;\r\n    color: ${props => props.theme.colors.success};\r\n  }\r\n`;\r\n\r\nconst UploadPage: React.FC = () => {\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const [uploadResult, setUploadResult] = useState<any>(null);\r\n\r\n  const uploadMutation = useMutation(uploadApi.uploadExcel, {\r\n    onSuccess: (data) => {\r\n      setUploadResult(data.data);\r\n      toast.success(`Excel 파일이 업로드되었습니다. ${data.data?.itemCount || 0}개 항목이 처리되었습니다.`);\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.message || '업로드 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const handleFileSelect = (file: File) => {\r\n    if (!file) return;\r\n    \r\n    if (!file.name.endsWith('.xlsx') && !file.name.endsWith('.xls')) {\r\n      toast.error('Excel 파일만 업로드 가능합니다.');\r\n      return;\r\n    }\r\n    \r\n    uploadMutation.mutate(file);\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    const files = e.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      handleFileSelect(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragOver(true);\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setDragOver(false);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const input = document.getElementById('file-input') as HTMLInputElement;\r\n    input?.click();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader\r\n        title=\"파일 관리\"\r\n        subtitle=\"Excel 파일을 업로드하여 품목 데이터를 일괄 등록할 수 있습니다.\"\r\n      />\r\n\r\n      <Card>\r\n        <UploadArea\r\n          isDragOver={dragOver}\r\n          onDrop={handleDrop}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onClick={handleClick}\r\n        >\r\n          <Upload size={48} className=\"upload-icon\" />\r\n          <div className=\"upload-text\">\r\n            Excel 파일을 여기에 끌어다 놓거나 클릭하여 선택하세요\r\n          </div>\r\n          <div className=\"upload-hint\">\r\n            .xlsx, .xls 파일만 지원됩니다\r\n          </div>\r\n        </UploadArea>\r\n        \r\n        <HiddenInput\r\n          id=\"file-input\"\r\n          type=\"file\"\r\n          accept=\".xlsx,.xls\"\r\n          onChange={(e) => {\r\n            const file = e.target.files?.[0];\r\n            if (file) handleFileSelect(file);\r\n          }}\r\n        />\r\n\r\n        {uploadMutation.isLoading && (\r\n          <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n            <p>파일을 업로드하고 있습니다...</p>\r\n          </div>\r\n        )}\r\n\r\n        {uploadResult && (\r\n          <ResultSection>\r\n            <div className=\"result-text\">\r\n              ✅ 업로드 완료! {uploadResult.itemCount}개의 품목이 등록되었습니다.\r\n            </div>\r\n            <Button variant=\"outline\">\r\n              <FileText size={16} />\r\n              처리 결과 확인\r\n            </Button>\r\n          </ResultSection>\r\n        )}\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UploadPage;","// client/src/components/statistics/StatisticsPage.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery, useMutation } from '@tanstack/react-query';\r\nimport PageHeader from '../common/Header';\r\nimport LoadingSpinner from '../common/LoadingSpinner';\r\nimport { statisticsApi } from '../../services/api';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst StatisticsPage: React.FC = () => {\r\n  const { data, isLoading } = useQuery('statistics', statisticsApi.getStats);\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader\r\n        title=\"통계 분석\"\r\n        subtitle=\"시스템 사용 현황과 트렌드를 분석합니다.\"\r\n      />\r\n\r\n      <Card>\r\n        <div style={{ textAlign: 'center', padding: '60px' }}>\r\n          <h3>통계 기능 준비 중</h3>\r\n          <p>차트와 분석 기능이 곧 추가될 예정입니다.</p>\r\n        </div>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StatisticsPage;","// client/src/components/logs/LogsPage.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery, useMutation } from '@tanstack/react-query';\r\n\r\nimport PageHeader from '../common/Header';\r\nimport LoadingSpinner from '../common/LoadingSpinner';\r\nimport { logsApi } from '../../services/api';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst LogsPage: React.FC = () => {\r\n  const { data, isLoading } = useQuery('logs', () => logsApi.getLogs());\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader\r\n        title=\"시스템 로그\"\r\n        subtitle=\"시스템 활동 로그를 확인할 수 있습니다.\"\r\n      />\r\n\r\n      <Card>\r\n        <div style={{ textAlign: 'center', padding: '60px' }}>\r\n          <h3>로그 기능 준비 중</h3>\r\n          <p>시스템 로그 조회 기능이 곧 추가될 예정입니다.</p>\r\n        </div>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LogsPage;","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\n// import { ReactQueryDevtools } from '@tanstack/react-query-devtools';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyles, theme } from './styles/theme';\r\n\r\n// Components - 실제 디렉토리 구조에 맞게 수정\r\nimport Layout from './components/inventory/common/Layout';\r\nimport DashboardPage from './components/dashboard/DashboardPage';  // pages가 아닌 components에 있음\r\nimport InventoryPage from './components/inventory/InventoryPage';\r\nimport ReceiptPage from './components/receipt/ReceiptPage';\r\nimport PurchaseRequestPage from './components/purshase/PurchaseRequestPage';  // purshase (오타) 폴더명 그대로\r\nimport KakaoPage from './components/kakao/KakaoPage';\r\nimport UploadPage from './components/upload/UploadPage';\r\nimport StatisticsPage from './components/statistics/StatisticsPage';\r\nimport LogsPage from './components/logs/LogsPage';\r\n\r\n// Styles\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// React Query 설정\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      retry: 1,\r\n      staleTime: 5 * 60 * 1000, // 5분\r\n    },\r\n  },\r\n});\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<Layout />}>\r\n                <Route index element={<Navigate to=\"/dashboard\" replace />} />\r\n                <Route path=\"dashboard\" element={<DashboardPage />} />\r\n                <Route path=\"inventory\" element={<InventoryPage />} />\r\n                <Route path=\"receipts\" element={<ReceiptPage />} />\r\n                <Route path=\"purchase-requests\" element={<PurchaseRequestPage />} />\r\n                <Route path=\"kakao\" element={<KakaoPage />} />\r\n                <Route path=\"upload\" element={<UploadPage />} />\r\n                <Route path=\"statistics\" element={<StatisticsPage />} />\r\n                <Route path=\"logs\" element={<LogsPage />} />\r\n                <Route path=\"*\" element={<Navigate to=\"/dashboard\" replace />} />\r\n              </Route>\r\n            </Routes>\r\n            \r\n            {/* Toast 알림 */}\r\n            <ToastContainer\r\n              position=\"top-right\"\r\n              autoClose={3000}\r\n              hideProgressBar={false}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n              theme=\"light\"\r\n            />\r\n          </div>\r\n        </Router>\r\n        \r\n        {/* React Query DevTools는 프로덕션에서 제거 */}\r\n        {/* \r\n        {import.meta.env.DEV && (\r\n          <ReactQueryDevtools initialIsOpen={false} />\r\n        )}\r\n        */}\r\n      </ThemeProvider>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nexport default App;","// client/src/index.tsx\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './app';\r\n\r\n// Global styles\r\nimport './styles/globals.css';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","r","t","clsx","u","o","s","i","y","v","T","E","C","I","_","O","L","N","M","R","w","x","$","P","B","D","A","z","F","H","S","Q","theme","GlobalStyles","createGlobalStyle","props","SidebarContainer","styled","SidebarHeader","Logo","ToggleButton","CompanyInfo","Navigation","NavGroup","NavGroupTitle","NavList","NavItem","NavLinkStyled","NavLink","Tooltip","NavItemWithTooltip","Sidebar","collapsed","onToggle","location","useLocation","mainMenuItems","LayoutDashboard","ShoppingCart","Package","ClipboardCheck","MessageSquare","dataMenuItems","Upload","BarChart3","History","managementMenuItems","Building","CreditCard","Users","Bell","Settings","renderNavItem","item","Icon","isActive","jsx","jsxs","ChevronLeft","HeaderContainer","HeaderLeft","HeaderRight","MenuButton","SearchContainer","SearchInput","SearchIcon","Search","IconButton","NotificationBadge","UserInfo","UserAvatar","Header","onToggleSidebar","sidebarCollapsed","Menu","LogOut","LayoutContainer","_a","MainContent","ContentArea","Layout","sidebarOpen","setSidebarOpen","useState","Outlet","spin","keyframes","SpinnerContainer","Spinner","LoadingText","LoadingSpinner","text","createApiInstance","instance","axios","config","token","error","response","_b","_c","_d","api","apiRequest","url","params","res","data","dashboardApi","purchaseApi","page","limit","filters","id","inventoryApi","no","status","receivedDate","query","threshold","type","receiptApi","uploadApi","file","formData","kakaoApi","message","statisticsApi","year","logsApi","Container","StatsGrid","StatCard","ContentGrid","RecentActivity","QuickActions","DashboardPage","stats","isLoading","useQuery","dashboardStats","PageHeader","Clock","CheckCircle","_e","DollarSign","_f","_g","receipt","index","AlertTriangle","TableContainer","StyledTable","TableHeader","TableHeaderCell","SortButton","SortIcon","TableBody","TableRow","TableCell","Checkbox","EmptyState","LoadingState","Table","columns","loading","emptyMessage","selectable","selectedItems","onSelectItems","onSort","sortField","sortDirection","handleSelectAll","checked","handleSelectItem","selected","handleSort","field","direction","isAllSelected","isIndeterminate","input","column","ChevronUp","ChevronDown","isSelected","value","displayValue","PaginationContainer","PageButton","PageInfo","Pagination","currentPage","totalPages","onPageChange","className","getVisiblePages","range","rangeWithDots","visiblePages","React","ChevronRight","FormContainer","FormGroup","Label","Input","ButtonGroup","Button","InventoryForm","onSubmit","onCancel","setFormData","handleSubmit","handleChange","prev","FilterContainer","SearchGroup","Select","FilterButton","InventoryFilters","searchTerm","category","onSearchChange","onCategoryChange","onLocationChange","onFilter","Filter","useInventory","queryClient","refetch","_j","_i","_h","_m","_l","_k","_o","_n","sum","ActionButtons","StatsContainer","InventoryPage","setCurrentPage","setFilters","isAddModalOpen","setIsAddModalOpen","editingItem","setEditingItem","items","deleteItemMutation","useMutation","toast","exportMutation","blob","link","useMemo","StatusBadge","getStatusLabel","ActionButtonGroup","handleEdit","handleDelete","handleSearch","searchFilters","itemNo","handleExport","handleModalClose","handleFormSuccess","RefreshCw","Download","Plus","ReceiptPage","SelectContainer","StyledSelect","label","options","onChange","placeholder","disabled","required","option","STATUS_LABELS","URGENCY_LABELS","STATUS_COLORS","URGENCY_COLORS","CATEGORY_LABELS","FormGrid","FormRow","TextArea","categoryOptions","urgencyOptions","purchaseMethodOptions","PurchaseRequestForm","request","onSuccess","createMutation","updateMutation","submitData","InputContainer","StyledInput","ButtonContainer","colors","children","variant","size","onClick","PurchaseRequestFilters","handleFilterChange","newFilters","handleReset","ModalOverlay","ModalContainer","ModalHeader","ModalTitle","CloseButton","ModalContent","Modal","isOpen","onClose","title","closable","useEffect","handleEscKey","event","handleOverlayClick","X","RequestInfo","CommentSection","WarningBox","ApprovalModal","action","setAction","comments","setComments","handleClose","Check","DetailContainer","Section","InfoGrid","InfoItem","JustificationBox","RequestDetailModal","onEdit","onApprove","canEdit","canApprove","User","Calendar","Edit","usePurchaseRequests","statsData","UrgencyBadge","PriceText","PurchaseRequestPage","useQueryClient","editingRequest","setEditingRequest","viewingRequest","setViewingRequest","approvingRequest","setApprovingRequest","selectedRequests","setSelectedRequests","requests","deleteRequestMutation","approveRequestMutation","AlertCircle","handleView","Eye","handleApprove","canDelete","Trash2","requestId","handleApprovalSubmit","FileText","MessageContainer","ResultCard","KakaoPage","setMessage","result","setResult","parseMutation","handleParse","handleClear","Send","UploadArea","HiddenInput","ResultSection","UploadPage","dragOver","setDragOver","uploadResult","setUploadResult","uploadMutation","handleFileSelect","handleDrop","files","handleDragOver","handleDragLeave","handleClick","StatisticsPage","LogsPage","QueryClient","App","QueryClientProvider","ThemeProvider","Router","Routes","Route","Navigate","ToastContainer","root","ReactDOM"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}