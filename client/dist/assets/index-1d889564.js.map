{"version":3,"file":"index-1d889564.js","sources":["../../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/react/jsx-runtime.js","../../../node_modules/react-dom/client.js","../../src/styles/theme.ts","../../../node_modules/clsx/dist/clsx.m.js","../../../node_modules/react-toastify/dist/react-toastify.esm.mjs","../../src/hooks/queryClient.ts","../../src/services/api.ts","../../src/components/common/Sidebar.tsx","../../src/components/common/Header.tsx","../../src/components/common/Layout.tsx","../../src/components/common/Card.tsx","../../src/components/common/Button.tsx","../../src/components/common/LoadingSpinner.tsx","../../src/components/dashboard/DashboardPage.tsx","../../src/components/common/Table.tsx","../../src/components/common/Pagination.tsx","../../src/components/common/Modal.tsx","../../src/components/inventory/InventoryFilters.tsx","../../src/components/common/Input.tsx","../../src/components/common/Select.tsx","../../src/components/inventory/InventoryForm.tsx","../../src/components/inventory/ReceiptModal.tsx","../../src/components/common/ExcelUploadGuide.tsx","../../src/components/inventory/InventoryExcelUpload.tsx","../../src/components/inventory/TransactionDocumentModal.tsx","../../src/components/inventory/InventoryPage.tsx","../../src/components/receipt/ReceiptPage.tsx","../../src/components/purshase/PurchaseRequestForm.tsx","../../src/components/purshase/ExcelBulkUpload.tsx","../../src/components/purshase/PurchaseRequestFilters.tsx","../../src/components/purshase/RequestDetailModal.tsx","../../src/components/purshase/PurchaseRequestPage.tsx","../../src/components/upload/UploadPage.tsx","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// client/src/styles/theme.ts\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nexport interface Theme {\r\n  colors: {\r\n    primary: string;\r\n    secondary: string;\r\n    success: string;\r\n    warning: string;\r\n    error: string;\r\n    info: string;\r\n    gray: string;\r\n    background: string;\r\n    surface: string;\r\n    text: string;\r\n    textSecondary: string;\r\n    border: string;\r\n  };\r\n  spacing: {\r\n    xs: string;\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n    xl: string;\r\n  };\r\n  borderRadius: {\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n  };\r\n  shadows: {\r\n    sm: string;\r\n    md: string;\r\n    lg: string;\r\n  };\r\n  breakpoints: {\r\n    mobile: string;\r\n    tablet: string;\r\n    desktop: string;\r\n  };\r\n}\r\n\r\nexport const theme: Theme = {\r\n  colors: {\r\n    primary: '#667eea',\r\n    secondary: '#764ba2',\r\n    success: '#10B981',\r\n    warning: '#F59E0B',\r\n    error: '#EF4444',\r\n    info: '#3B82F6',\r\n    gray: '#6B7280',\r\n    background: '#f8fafc',\r\n    surface: '#ffffff',\r\n    text: '#1f2937',\r\n    textSecondary: '#6b7280',\r\n    border: '#e5e7eb',\r\n  },\r\n  spacing: {\r\n    xs: '4px',\r\n    sm: '8px',\r\n    md: '16px',\r\n    lg: '24px',\r\n    xl: '32px',\r\n  },\r\n  borderRadius: {\r\n    sm: '4px',\r\n    md: '8px',\r\n    lg: '12px',\r\n  },\r\n  shadows: {\r\n    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\r\n    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n    lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\r\n  },\r\n  breakpoints: {\r\n    mobile: '768px',\r\n    tablet: '1024px',\r\n    desktop: '1200px',\r\n  },\r\n};\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html {\r\n    font-size: 16px;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  body {\r\n    font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    background: ${props => props.theme.colors.background};\r\n    color: ${props => props.theme.colors.text};\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    min-height: 100vh;\r\n  }\r\n\r\n  /* 스크롤바 스타일 */\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f5f9;\r\n    border-radius: ${props => props.theme.borderRadius.sm};\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #cbd5e1;\r\n    border-radius: ${props => props.theme.borderRadius.sm};\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #94a3b8;\r\n  }\r\n\r\n  /* 포커스 스타일 */\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  :focus-visible {\r\n    outline: 2px solid ${props => props.theme.colors.primary};\r\n    outline-offset: 2px;\r\n  }\r\n\r\n  /* 선택 스타일 */\r\n  ::selection {\r\n    background: rgba(102, 126, 234, 0.2);\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n`;","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","'use client';\nimport t,{isValidElement as e,useRef as n,useLayoutEffect as o,useEffect as s,cloneElement as a,useReducer as r,useState as i,forwardRef as l}from\"react\";import c from\"clsx\";const u=t=>\"number\"==typeof t&&!isNaN(t),d=t=>\"string\"==typeof t,p=t=>\"function\"==typeof t,m=t=>d(t)||p(t)?t:null,f=t=>e(t)||d(t)||p(t)||u(t);function g(t,e,n){void 0===n&&(n=300);const{scrollHeight:o,style:s}=t;requestAnimationFrame(()=>{s.minHeight=\"initial\",s.height=o+\"px\",s.transition=`all ${n}ms`,requestAnimationFrame(()=>{s.height=\"0\",s.padding=\"0\",s.margin=\"0\",setTimeout(e,n)})})}function h(e){let{enter:a,exit:r,appendPosition:i=!1,collapse:l=!0,collapseDuration:c=300}=e;return function(e){let{children:u,position:d,preventExitTransition:p,done:m,nodeRef:f,isIn:h}=e;const y=i?`${a}--${d}`:a,v=i?`${r}--${d}`:r,T=n(0);return o(()=>{const t=f.current,e=y.split(\" \"),n=o=>{o.target===f.current&&(t.dispatchEvent(new Event(\"d\")),t.removeEventListener(\"animationend\",n),t.removeEventListener(\"animationcancel\",n),0===T.current&&\"animationcancel\"!==o.type&&t.classList.remove(...e))};t.classList.add(...e),t.addEventListener(\"animationend\",n),t.addEventListener(\"animationcancel\",n)},[]),s(()=>{const t=f.current,e=()=>{t.removeEventListener(\"animationend\",e),l?g(t,m,c):m()};h||(p?e():(T.current=1,t.className+=` ${v}`,t.addEventListener(\"animationend\",e)))},[h]),t.createElement(t.Fragment,null,u)}}function y(t,e){return null!=t?{content:t.content,containerId:t.props.containerId,id:t.props.toastId,theme:t.props.theme,type:t.props.type,data:t.props.data||{},isLoading:t.props.isLoading,icon:t.props.icon,status:e}:{}}const v={list:new Map,emitQueue:new Map,on(t,e){return this.list.has(t)||this.list.set(t,[]),this.list.get(t).push(e),this},off(t,e){if(e){const n=this.list.get(t).filter(t=>t!==e);return this.list.set(t,n),this}return this.list.delete(t),this},cancelEmit(t){const e=this.emitQueue.get(t);return e&&(e.forEach(clearTimeout),this.emitQueue.delete(t)),this},emit(t){this.list.has(t)&&this.list.get(t).forEach(e=>{const n=setTimeout(()=>{e(...[].slice.call(arguments,1))},0);this.emitQueue.has(t)||this.emitQueue.set(t,[]),this.emitQueue.get(t).push(n)})}},T=e=>{let{theme:n,type:o,...s}=e;return t.createElement(\"svg\",{viewBox:\"0 0 24 24\",width:\"100%\",height:\"100%\",fill:\"colored\"===n?\"currentColor\":`var(--toastify-icon-color-${o})`,...s})},E={info:function(e){return t.createElement(T,{...e},t.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"}))},warning:function(e){return t.createElement(T,{...e},t.createElement(\"path\",{d:\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"}))},success:function(e){return t.createElement(T,{...e},t.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"}))},error:function(e){return t.createElement(T,{...e},t.createElement(\"path\",{d:\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"}))},spinner:function(){return t.createElement(\"div\",{className:\"Toastify__spinner\"})}};function C(t){const[,o]=r(t=>t+1,0),[l,c]=i([]),g=n(null),h=n(new Map).current,T=t=>-1!==l.indexOf(t),C=n({toastKey:1,displayedToast:0,count:0,queue:[],props:t,containerId:null,isToastActive:T,getToast:t=>h.get(t)}).current;function b(t){let{containerId:e}=t;const{limit:n}=C.props;!n||e&&C.containerId!==e||(C.count-=C.queue.length,C.queue=[])}function I(t){c(e=>null==t?[]:e.filter(e=>e!==t))}function _(){const{toastContent:t,toastProps:e,staleId:n}=C.queue.shift();O(t,e,n)}function L(t,n){let{delay:s,staleId:r,...i}=n;if(!f(t)||function(t){return!g.current||C.props.enableMultiContainer&&t.containerId!==C.props.containerId||h.has(t.toastId)&&null==t.updateId}(i))return;const{toastId:l,updateId:c,data:T}=i,{props:b}=C,L=()=>I(l),N=null==c;N&&C.count++;const M={...b,style:b.toastStyle,key:C.toastKey++,...Object.fromEntries(Object.entries(i).filter(t=>{let[e,n]=t;return null!=n})),toastId:l,updateId:c,data:T,closeToast:L,isIn:!1,className:m(i.className||b.toastClassName),bodyClassName:m(i.bodyClassName||b.bodyClassName),progressClassName:m(i.progressClassName||b.progressClassName),autoClose:!i.isLoading&&(R=i.autoClose,w=b.autoClose,!1===R||u(R)&&R>0?R:w),deleteToast(){const t=y(h.get(l),\"removed\");h.delete(l),v.emit(4,t);const e=C.queue.length;if(C.count=null==l?C.count-C.displayedToast:C.count-1,C.count<0&&(C.count=0),e>0){const t=null==l?C.props.limit:1;if(1===e||1===t)C.displayedToast++,_();else{const n=t>e?e:t;C.displayedToast=n;for(let t=0;t<n;t++)_()}}else o()}};var R,w;M.iconOut=function(t){let{theme:n,type:o,isLoading:s,icon:r}=t,i=null;const l={theme:n,type:o};return!1===r||(p(r)?i=r(l):e(r)?i=a(r,l):d(r)||u(r)?i=r:s?i=E.spinner():(t=>t in E)(o)&&(i=E[o](l))),i}(M),p(i.onOpen)&&(M.onOpen=i.onOpen),p(i.onClose)&&(M.onClose=i.onClose),M.closeButton=b.closeButton,!1===i.closeButton||f(i.closeButton)?M.closeButton=i.closeButton:!0===i.closeButton&&(M.closeButton=!f(b.closeButton)||b.closeButton);let x=t;e(t)&&!d(t.type)?x=a(t,{closeToast:L,toastProps:M,data:T}):p(t)&&(x=t({closeToast:L,toastProps:M,data:T})),b.limit&&b.limit>0&&C.count>b.limit&&N?C.queue.push({toastContent:x,toastProps:M,staleId:r}):u(s)?setTimeout(()=>{O(x,M,r)},s):O(x,M,r)}function O(t,e,n){const{toastId:o}=e;n&&h.delete(n);const s={content:t,props:e};h.set(o,s),c(t=>[...t,o].filter(t=>t!==n)),v.emit(4,y(s,null==s.props.updateId?\"added\":\"updated\"))}return s(()=>(C.containerId=t.containerId,v.cancelEmit(3).on(0,L).on(1,t=>g.current&&I(t)).on(5,b).emit(2,C),()=>{h.clear(),v.emit(3,C)}),[]),s(()=>{C.props=t,C.isToastActive=T,C.displayedToast=l.length}),{getToastToRender:function(e){const n=new Map,o=Array.from(h.values());return t.newestOnTop&&o.reverse(),o.forEach(t=>{const{position:e}=t.props;n.has(e)||n.set(e,[]),n.get(e).push(t)}),Array.from(n,t=>e(t[0],t[1]))},containerRef:g,isToastActive:T}}function b(t){return t.targetTouches&&t.targetTouches.length>=1?t.targetTouches[0].clientX:t.clientX}function I(t){return t.targetTouches&&t.targetTouches.length>=1?t.targetTouches[0].clientY:t.clientY}function _(t){const[o,a]=i(!1),[r,l]=i(!1),c=n(null),u=n({start:0,x:0,y:0,delta:0,removalDistance:0,canCloseOnClick:!0,canDrag:!1,boundingRect:null,didMove:!1}).current,d=n(t),{autoClose:m,pauseOnHover:f,closeToast:g,onClick:h,closeOnClick:y}=t;function v(e){if(t.draggable){\"touchstart\"===e.nativeEvent.type&&e.nativeEvent.preventDefault(),u.didMove=!1,document.addEventListener(\"mousemove\",_),document.addEventListener(\"mouseup\",L),document.addEventListener(\"touchmove\",_),document.addEventListener(\"touchend\",L);const n=c.current;u.canCloseOnClick=!0,u.canDrag=!0,u.boundingRect=n.getBoundingClientRect(),n.style.transition=\"\",u.x=b(e.nativeEvent),u.y=I(e.nativeEvent),\"x\"===t.draggableDirection?(u.start=u.x,u.removalDistance=n.offsetWidth*(t.draggablePercent/100)):(u.start=u.y,u.removalDistance=n.offsetHeight*(80===t.draggablePercent?1.5*t.draggablePercent:t.draggablePercent/100))}}function T(e){if(u.boundingRect){const{top:n,bottom:o,left:s,right:a}=u.boundingRect;\"touchend\"!==e.nativeEvent.type&&t.pauseOnHover&&u.x>=s&&u.x<=a&&u.y>=n&&u.y<=o?C():E()}}function E(){a(!0)}function C(){a(!1)}function _(e){const n=c.current;u.canDrag&&n&&(u.didMove=!0,o&&C(),u.x=b(e),u.y=I(e),u.delta=\"x\"===t.draggableDirection?u.x-u.start:u.y-u.start,u.start!==u.x&&(u.canCloseOnClick=!1),n.style.transform=`translate${t.draggableDirection}(${u.delta}px)`,n.style.opacity=\"\"+(1-Math.abs(u.delta/u.removalDistance)))}function L(){document.removeEventListener(\"mousemove\",_),document.removeEventListener(\"mouseup\",L),document.removeEventListener(\"touchmove\",_),document.removeEventListener(\"touchend\",L);const e=c.current;if(u.canDrag&&u.didMove&&e){if(u.canDrag=!1,Math.abs(u.delta)>u.removalDistance)return l(!0),void t.closeToast();e.style.transition=\"transform 0.2s, opacity 0.2s\",e.style.transform=`translate${t.draggableDirection}(0)`,e.style.opacity=\"1\"}}s(()=>{d.current=t}),s(()=>(c.current&&c.current.addEventListener(\"d\",E,{once:!0}),p(t.onOpen)&&t.onOpen(e(t.children)&&t.children.props),()=>{const t=d.current;p(t.onClose)&&t.onClose(e(t.children)&&t.children.props)}),[]),s(()=>(t.pauseOnFocusLoss&&(document.hasFocus()||C(),window.addEventListener(\"focus\",E),window.addEventListener(\"blur\",C)),()=>{t.pauseOnFocusLoss&&(window.removeEventListener(\"focus\",E),window.removeEventListener(\"blur\",C))}),[t.pauseOnFocusLoss]);const O={onMouseDown:v,onTouchStart:v,onMouseUp:T,onTouchEnd:T};return m&&f&&(O.onMouseEnter=C,O.onMouseLeave=E),y&&(O.onClick=t=>{h&&h(t),u.canCloseOnClick&&g()}),{playToast:E,pauseToast:C,isRunning:o,preventExitTransition:r,toastRef:c,eventHandlers:O}}function L(e){let{closeToast:n,theme:o,ariaLabel:s=\"close\"}=e;return t.createElement(\"button\",{className:`Toastify__close-button Toastify__close-button--${o}`,type:\"button\",onClick:t=>{t.stopPropagation(),n(t)},\"aria-label\":s},t.createElement(\"svg\",{\"aria-hidden\":\"true\",viewBox:\"0 0 14 16\"},t.createElement(\"path\",{fillRule:\"evenodd\",d:\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"})))}function O(e){let{delay:n,isRunning:o,closeToast:s,type:a=\"default\",hide:r,className:i,style:l,controlledProgress:u,progress:d,rtl:m,isIn:f,theme:g}=e;const h=r||u&&0===d,y={...l,animationDuration:`${n}ms`,animationPlayState:o?\"running\":\"paused\",opacity:h?0:1};u&&(y.transform=`scaleX(${d})`);const v=c(\"Toastify__progress-bar\",u?\"Toastify__progress-bar--controlled\":\"Toastify__progress-bar--animated\",`Toastify__progress-bar-theme--${g}`,`Toastify__progress-bar--${a}`,{\"Toastify__progress-bar--rtl\":m}),T=p(i)?i({rtl:m,type:a,defaultClassName:v}):c(v,i);return t.createElement(\"div\",{role:\"progressbar\",\"aria-hidden\":h?\"true\":\"false\",\"aria-label\":\"notification timer\",className:T,style:y,[u&&d>=1?\"onTransitionEnd\":\"onAnimationEnd\"]:u&&d<1?null:()=>{f&&s()}})}const N=n=>{const{isRunning:o,preventExitTransition:s,toastRef:r,eventHandlers:i}=_(n),{closeButton:l,children:u,autoClose:d,onClick:m,type:f,hideProgressBar:g,closeToast:h,transition:y,position:v,className:T,style:E,bodyClassName:C,bodyStyle:b,progressClassName:I,progressStyle:N,updateId:M,role:R,progress:w,rtl:x,toastId:$,deleteToast:k,isIn:P,isLoading:B,iconOut:D,closeOnClick:A,theme:z}=n,F=c(\"Toastify__toast\",`Toastify__toast-theme--${z}`,`Toastify__toast--${f}`,{\"Toastify__toast--rtl\":x},{\"Toastify__toast--close-on-click\":A}),H=p(T)?T({rtl:x,position:v,type:f,defaultClassName:F}):c(F,T),S=!!w||!d,q={closeToast:h,type:f,theme:z};let Q=null;return!1===l||(Q=p(l)?l(q):e(l)?a(l,q):L(q)),t.createElement(y,{isIn:P,done:k,position:v,preventExitTransition:s,nodeRef:r},t.createElement(\"div\",{id:$,onClick:m,className:H,...i,style:E,ref:r},t.createElement(\"div\",{...P&&{role:R},className:p(C)?C({type:f}):c(\"Toastify__toast-body\",C),style:b},null!=D&&t.createElement(\"div\",{className:c(\"Toastify__toast-icon\",{\"Toastify--animate-icon Toastify__zoom-enter\":!B})},D),t.createElement(\"div\",null,u)),Q,t.createElement(O,{...M&&!S?{key:`pb-${M}`}:{},rtl:x,theme:z,delay:d,isRunning:o,isIn:P,closeToast:h,hide:g,type:f,style:N,className:I,controlledProgress:S,progress:w||0})))},M=function(t,e){return void 0===e&&(e=!1),{enter:`Toastify--animate Toastify__${t}-enter`,exit:`Toastify--animate Toastify__${t}-exit`,appendPosition:e}},R=h(M(\"bounce\",!0)),w=h(M(\"slide\",!0)),x=h(M(\"zoom\")),$=h(M(\"flip\")),k=l((e,n)=>{const{getToastToRender:o,containerRef:a,isToastActive:r}=C(e),{className:i,style:l,rtl:u,containerId:d}=e;function f(t){const e=c(\"Toastify__toast-container\",`Toastify__toast-container--${t}`,{\"Toastify__toast-container--rtl\":u});return p(i)?i({position:t,rtl:u,defaultClassName:e}):c(e,m(i))}return s(()=>{n&&(n.current=a.current)},[]),t.createElement(\"div\",{ref:a,className:\"Toastify\",id:d},o((e,n)=>{const o=n.length?{...l}:{...l,pointerEvents:\"none\"};return t.createElement(\"div\",{className:f(e),style:o,key:`container-${e}`},n.map((e,o)=>{let{content:s,props:a}=e;return t.createElement(N,{...a,isIn:r(a.toastId),style:{...a.style,\"--nth\":o+1,\"--len\":n.length},key:`toast-${a.key}`},s)}))}))});k.displayName=\"ToastContainer\",k.defaultProps={position:\"top-right\",transition:R,autoClose:5e3,closeButton:L,pauseOnHover:!0,pauseOnFocusLoss:!0,closeOnClick:!0,draggable:!0,draggablePercent:80,draggableDirection:\"x\",role:\"alert\",theme:\"light\"};let P,B=new Map,D=[],A=1;function z(){return\"\"+A++}function F(t){return t&&(d(t.toastId)||u(t.toastId))?t.toastId:z()}function H(t,e){return B.size>0?v.emit(0,t,e):D.push({content:t,options:e}),e.toastId}function S(t,e){return{...e,type:e&&e.type||t,toastId:F(e)}}function q(t){return(e,n)=>H(e,S(t,n))}function Q(t,e){return H(t,S(\"default\",e))}Q.loading=(t,e)=>H(t,S(\"default\",{isLoading:!0,autoClose:!1,closeOnClick:!1,closeButton:!1,draggable:!1,...e})),Q.promise=function(t,e,n){let o,{pending:s,error:a,success:r}=e;s&&(o=d(s)?Q.loading(s,n):Q.loading(s.render,{...n,...s}));const i={isLoading:null,autoClose:null,closeOnClick:null,closeButton:null,draggable:null},l=(t,e,s)=>{if(null==e)return void Q.dismiss(o);const a={type:t,...i,...n,data:s},r=d(e)?{render:e}:e;return o?Q.update(o,{...a,...r}):Q(r.render,{...a,...r}),s},c=p(t)?t():t;return c.then(t=>l(\"success\",r,t)).catch(t=>l(\"error\",a,t)),c},Q.success=q(\"success\"),Q.info=q(\"info\"),Q.error=q(\"error\"),Q.warning=q(\"warning\"),Q.warn=Q.warning,Q.dark=(t,e)=>H(t,S(\"default\",{theme:\"dark\",...e})),Q.dismiss=t=>{B.size>0?v.emit(1,t):D=D.filter(e=>null!=t&&e.options.toastId!==t)},Q.clearWaitingQueue=function(t){return void 0===t&&(t={}),v.emit(5,t)},Q.isActive=t=>{let e=!1;return B.forEach(n=>{n.isToastActive&&n.isToastActive(t)&&(e=!0)}),e},Q.update=function(t,e){void 0===e&&(e={}),setTimeout(()=>{const n=function(t,e){let{containerId:n}=e;const o=B.get(n||P);return o&&o.getToast(t)}(t,e);if(n){const{props:o,content:s}=n,a={delay:100,...o,...e,toastId:e.toastId||t,updateId:z()};a.toastId!==t&&(a.staleId=t);const r=a.render||s;delete a.render,H(r,a)}},0)},Q.done=t=>{Q.update(t,{progress:1})},Q.onChange=t=>(v.on(4,t),()=>{v.off(4,t)}),Q.POSITION={TOP_LEFT:\"top-left\",TOP_RIGHT:\"top-right\",TOP_CENTER:\"top-center\",BOTTOM_LEFT:\"bottom-left\",BOTTOM_RIGHT:\"bottom-right\",BOTTOM_CENTER:\"bottom-center\"},Q.TYPE={INFO:\"info\",SUCCESS:\"success\",WARNING:\"warning\",ERROR:\"error\",DEFAULT:\"default\"},v.on(2,t=>{P=t.containerId||t,B.set(P,t),D.forEach(t=>{v.emit(0,t.content,t.options)}),D=[]}).on(3,t=>{B.delete(t.containerId||t),0===B.size&&v.off(0).off(1).off(5)});export{R as Bounce,$ as Flip,E as Icons,w as Slide,k as ToastContainer,x as Zoom,g as collapseToast,h as cssTransition,Q as toast,_ as useToast,C as useToastContainer};\n//# sourceMappingURL=react-toastify.esm.mjs.map\n","import { QueryClient } from '@tanstack/react-query';\r\n\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      retry: 1,\r\n      staleTime: 5 * 60 * 1000,\r\n      suspense: false,\r\n    },\r\n  },\r\n});\r\n\r\nexport default queryClient;","// client/src/services/api.ts - API 연결 수정\r\nimport axios from 'axios';\r\n\r\n// API 기본 설정\r\n// const API_BASE_URL = 'http://192.168.0.16:8000/api/v1';\r\nconst API_BASE_URL = 'http://211.44.183.165:8000/api/v1';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 120000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 응답 인터셉터 추가\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('API Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// apiRequest 유틸리티 함수\r\nconst apiRequest = {\r\n  get: async (url: string, params?: any) => {\r\n    const response = await api.get(url, { params });\r\n    return response.data;\r\n  },\r\n  \r\n  post: async (url: string, data?: any) => {\r\n    const response = await api.post(url, data);\r\n    return response.data;\r\n  },\r\n  \r\n  put: async (url: string, data?: any) => {\r\n    const response = await api.put(url, data);\r\n    return response.data;\r\n  },\r\n  \r\n  delete: async (url: string) => {\r\n    const response = await api.delete(url);\r\n    return response.data;\r\n  },\r\n  \r\n  download: async (url: string, params?: any) => {\r\n    const response = await api.get(url, { \r\n      params, \r\n      responseType: 'blob' \r\n    });\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// 타입 정의들\r\nexport interface PurchaseRequest {\r\n  id: number;\r\n  request_number?: string;\r\n  item_name: string;\r\n  specifications?: string;\r\n  quantity: number;\r\n  unit?: string;\r\n  estimated_unit_price?: number;\r\n  total_budget?: number;\r\n  currency?: string;\r\n  category?: string;\r\n  urgency: string;\r\n  purchase_method?: string;\r\n  requester_name: string;\r\n  requester_email?: string;\r\n  department: string;\r\n  position?: string;\r\n  phone_number?: string;\r\n  project?: string;\r\n  budget_code?: string;\r\n  cost_center?: string;\r\n  preferred_supplier?: string;\r\n  supplier_contact?: string;\r\n  request_date: string;\r\n  expected_delivery_date?: string;\r\n  status: string;\r\n  approval_level?: number;\r\n  current_approver?: string;\r\n  approved_date?: string;\r\n  approved_by?: string;\r\n  rejected_date?: string;\r\n  rejected_by?: string;\r\n  rejection_reason?: string;\r\n  justification: string;\r\n  business_case?: string;\r\n  notes?: string;\r\n  attachment_urls?: string;\r\n  is_active?: boolean;\r\n  created_at: string;\r\n  updated_at?: string;\r\n  created_by?: string;\r\n  updated_by?: string;\r\n  priority_score?: number;\r\n  estimated_approval_time?: number;\r\n  actual_approval_time?: number;\r\n}\r\n\r\n// export interface SearchFilters {\r\n//   search?: string;\r\n//   status?: string;\r\n//   category?: string;\r\n//   department?: string;\r\n//   supplier?: string;\r\n//   urgency?: string;\r\n//   dateFrom?: string;\r\n//   dateTo?: string;\r\n//   is_active?: boolean;\r\n//   min_budget?: number;\r\n//   max_budget?: number;\r\n//   requester_name?: string;\r\n//   project?: string;\r\n//   budget_code?: string;\r\n// }\r\nexport interface SearchFilters {\r\n  search?: string;\r\n  category?: string;\r\n  brand?: string;\r\n  supplier_name?: string;\r\n  location?: string;\r\n  warehouse?: string;\r\n  stock_status?: string;\r\n  is_consumable?: boolean;\r\n  requires_approval?: boolean;\r\n  is_active?: boolean;\r\n  last_received_from?: string;\r\n  last_received_to?: string;\r\n  min_quantity?: number;\r\n  max_quantity?: number;\r\n  has_images?: boolean;\r\n  tags?: string[];\r\n}\r\nexport interface PurchaseRequestFormData {\r\n  item_name: string;\r\n  specifications?: string;\r\n  quantity: number;\r\n  unit?: string;\r\n  estimated_unit_price?: number;\r\n  total_budget?: number;\r\n  currency?: string;\r\n  category: string;\r\n  urgency: string;\r\n  purchase_method?: string;\r\n  requester_name: string;\r\n  requester_email?: string;\r\n  department: string;\r\n  position?: string;\r\n  phone_number?: string;\r\n  project?: string;\r\n  budget_code?: string;\r\n  cost_center?: string;\r\n  preferred_supplier?: string;\r\n  supplier_contact?: string;\r\n  expected_delivery_date?: string;\r\n  justification: string;\r\n  business_case?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface PurchaseRequestStats {\r\n  total: number;\r\n  pending: number;\r\n  approved: number;\r\n  rejected: number;\r\n  this_month: number;\r\n  total_budget?: number;\r\n  average_approval_time?: number;\r\n}\r\n\r\nexport interface PurchaseSearchFilters {\r\n  search?: string;\r\n  status?: string;\r\n  urgency?: string;\r\n  department?: string;\r\n  category?: string;\r\n  dateFrom?: string;\r\n  dateTo?: string;\r\n  requester_name?: string;\r\n  project?: string;\r\n  budget_code?: string;\r\n  is_active?: boolean;\r\n  min_budget?: number;\r\n  max_budget?: number;\r\n}\r\nexport interface UploadResult {\r\n  success: boolean;\r\n  created_count: number;\r\n  request_numbers: string[];\r\n  errors?: Array<{\r\n    row: number;\r\n    field: string;\r\n    message: string;\r\n  }>;\r\n  message?: string;\r\n}\r\n\r\n// Unified Inventory 타입 정의\r\nexport interface UnifiedInventoryItem {\r\n  id: number;\r\n  item_code: string;\r\n  item_name: string;\r\n  category?: string;\r\n  brand?: string;\r\n  specifications?: string;\r\n  total_received: number;\r\n  current_quantity: number;\r\n  reserved_quantity: number;\r\n  unit: string;\r\n  condition_quantities: { [key: string]: number };\r\n  unit_price?: number;\r\n  currency: string;\r\n  total_value?: number;\r\n  location?: string;\r\n  warehouse?: string;\r\n  storage_section?: string;\r\n  supplier_name?: string;\r\n  supplier_contact?: string;\r\n  minimum_stock: number;\r\n  maximum_stock?: number;\r\n  reorder_point?: number;\r\n  receipt_history: ReceiptHistory[];\r\n  last_received_date?: string;\r\n  last_received_by?: string;\r\n  last_received_department?: string;\r\n  last_used_date?: string;\r\n  main_image_url?: string;\r\n  image_urls: string[];\r\n  is_active: boolean;\r\n  is_consumable: boolean;\r\n  requires_approval: boolean;\r\n  description?: string;\r\n  notes?: string;\r\n  tags: string[];\r\n  available_quantity: number;\r\n  utilization_rate: number;\r\n  is_low_stock: boolean;\r\n  stock_status: 'normal' | 'low_stock' | 'out_of_stock' | 'overstocked';\r\n  created_at: string;\r\n  updated_at?: string;\r\n  created_by?: string;\r\n  updated_by?: string;\r\n  transaction_document_url?: string;\r\n  transaction_upload_date?: string;\r\n  transaction_uploaded_by?: string;\r\n}\r\n\r\nexport interface ReceiptHistory {\r\n  receipt_number: string;\r\n  item_name: string;\r\n  expected_quantity: number;\r\n  received_quantity: number;\r\n  receiver_name: string;\r\n  receiver_email?: string;\r\n  department: string;\r\n  received_date: string;\r\n  location?: string;\r\n  condition?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface UnifiedInventoryFormData {\r\n  item_code: string;\r\n  item_name: string;\r\n  category?: string;\r\n  brand?: string;\r\n  specifications?: string;\r\n  unit: string;\r\n  unit_price?: number;\r\n  currency: string;\r\n  location?: string;\r\n  warehouse?: string;\r\n  storage_section?: string;\r\n  supplier_name?: string;\r\n  supplier_contact?: string;\r\n  minimum_stock: number;\r\n  maximum_stock?: number;\r\n  reorder_point?: number;\r\n  is_consumable: boolean;\r\n  requires_approval: boolean;\r\n  description?: string;\r\n  notes?: string;\r\n  tags: string[];\r\n}\r\n\r\nexport interface UnifiedInventoryStats {\r\n  total_items: number;\r\n  total_categories: number;\r\n  low_stock_items: number;\r\n  out_of_stock_items: number;\r\n  overstocked_items: number;\r\n  total_value: number;\r\n  average_utilization: number;\r\n  status_distribution: { [key: string]: number };\r\n  category_distribution: Array<{ category: string; count: number; percentage: number }>;\r\n  recent_receipts: number;\r\n  recent_usage: number;\r\n  pending_approvals: number;\r\n}\r\n\r\n\r\n\r\n// 구매 요청 API - 실제 백엔드 연결\r\nexport const purchaseApi = {\r\n  // 구매 요청 목록 조회\r\n  getRequests: async (params: {\r\n    page: number;\r\n    limit: number;\r\n    search?: string;\r\n    status?: string;\r\n    urgency?: string;\r\n    department?: string;\r\n    dateFrom?: string;\r\n    dateTo?: string;\r\n    category?: string;\r\n    [key: string]: any;\r\n  }): Promise<{\r\n    data: {\r\n      items: PurchaseRequest[];\r\n      total: number;\r\n      pages: number;\r\n      page: number;\r\n      size: number;\r\n    };\r\n  }> => {\r\n    const { page, limit, dateFrom, dateTo, ...filters } = params;\r\n    \r\n    try {\r\n      const queryParams = {\r\n        skip: (page - 1) * limit,\r\n        limit,\r\n        date_from: dateFrom,\r\n        date_to: dateTo,\r\n        ...Object.fromEntries(\r\n          Object.entries(filters).filter(([_, value]) => value !== undefined && value !== '')\r\n        )\r\n      };\r\n      \r\n      const response = await apiRequest.get('/purchase-requests/', queryParams);\r\n      return { data: response };\r\n    } catch (error) {\r\n      console.error('구매 요청 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 구매 요청 생성\r\n  createRequest: async (data: PurchaseRequestFormData): Promise<PurchaseRequest> => {\r\n    try {\r\n      const response = await apiRequest.post('/purchase-requests/', data);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('구매 요청 생성 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 구매 요청 수정\r\n  updateRequest: async (id: number, data: Partial<PurchaseRequestFormData>): Promise<PurchaseRequest> => {\r\n    try {\r\n      const response = await apiRequest.put(`/purchase-requests/${id}`, data);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('API 오류 상세:', error.response?.data); // 이 부분 추가\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 구매 요청 삭제\r\n  deleteRequest: async (id: number): Promise<{ \r\n    success: boolean; \r\n    message: string; \r\n    deleted_id: number;\r\n    deleted_item?: string;\r\n    method?: string;\r\n  }> => {\r\n    try {\r\n      console.log(`🗑️ 구매 요청 삭제 API 호출: ID=${id}`);\r\n      console.log(`📍 요청 URL: ${API_BASE_URL}/purchase-requests/${id}`);\r\n      \r\n      const response = await apiRequest.delete(`/purchase-requests/${id}`);\r\n      \r\n      console.log('✅ 삭제 API 성공 응답:', response);\r\n      \r\n      // 🔥 응답 데이터 구조 확인 및 정규화\r\n      if (response.success !== undefined) {\r\n        // 백엔드가 올바른 응답을 반환한 경우\r\n        return response;\r\n      } else {\r\n        // 기본 응답인 경우\r\n        return {\r\n          success: true,\r\n          message: '구매 요청이 삭제되었습니다.',\r\n          deleted_id: id,\r\n          deleted_item: '구매 요청',\r\n          method: 'delete'\r\n        };\r\n      }\r\n    } catch (error: any) {\r\n      console.error('❌ 삭제 API 실패:', error);\r\n      console.error('❌ 에러 상세 정보:', {\r\n        status: error.response?.status,\r\n        statusText: error.response?.statusText,\r\n        data: error.response?.data,\r\n        url: error.config?.url,\r\n        method: error.config?.method\r\n      });\r\n      \r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 구매 요청 통계\r\n  getStats: async (): Promise<{ data: PurchaseRequestStats }> => {\r\n    try {\r\n      const response = await apiRequest.get('/purchase-requests/stats');\r\n      return { data: response };\r\n    } catch (error) {\r\n      console.error('구매 요청 통계 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Excel 업로드 개선\r\n  uploadExcel: async (file: File): Promise<UploadResult> => {\r\n    try {\r\n      console.log('📤 구매요청 Excel 업로드 시작:', file.name);\r\n      \r\n      // 파일 유효성 검사\r\n      if (!file) {\r\n        throw new Error('파일이 선택되지 않았습니다.');\r\n      }\r\n      \r\n      if (!file.name.match(/\\.(xlsx|xls)$/i)) {\r\n        throw new Error('Excel 파일만 업로드 가능합니다.');\r\n      }\r\n      \r\n      const maxSize = 10 * 1024 * 1024;\r\n      if (file.size > maxSize) {\r\n        throw new Error('파일 크기는 10MB를 초과할 수 없습니다.');\r\n      }\r\n      \r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      \r\n      const response = await api.post('/purchase-requests/bulk-upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        timeout: 300000, // 5분 타임아웃\r\n      });\r\n      \r\n      console.log('✅ 구매요청 업로드 성공:', response.data);\r\n      \r\n      // 응답 구조화\r\n      const result: UploadResult = {\r\n        success: response.data.success || true,\r\n        created_count: response.data.created_count || 0,\r\n        created_items: response.data.request_numbers || [],\r\n        total_processed: response.data.total_processed || 0,\r\n        errors: response.data.errors || [],\r\n        message: response.data.message || '업로드가 완료되었습니다.'\r\n      };\r\n      \r\n      return result;\r\n    } catch (error: any) {\r\n      console.error('구매요청 Excel 업로드 실패:', error);\r\n      \r\n      if (error.response?.data) {\r\n        throw new Error(error.response.data.detail || '업로드 중 오류가 발생했습니다.');\r\n      }\r\n      throw new Error(error.message || '업로드 중 알 수 없는 오류가 발생했습니다.');\r\n    }\r\n  },\r\n\r\n  // 템플릿 다운로드\r\n  downloadTemplate: async (): Promise<void> => {\r\n    try {\r\n      console.log('📋 구매요청 템플릿 다운로드 시작...');\r\n      \r\n      const response = await api.get('/purchase-requests/template/download', {\r\n        responseType: 'blob',\r\n        timeout: 60000,\r\n      });\r\n      \r\n      if (!response.data || response.data.size === 0) {\r\n        throw new Error('빈 템플릿 파일이 반환되었습니다.');\r\n      }\r\n      \r\n      const blob = response.data;\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      \r\n      const today = new Date().toISOString().split('T')[0].replace(/-/g, '');\r\n      link.download = `구매요청_템플릿_${today}.xlsx`;\r\n      \r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n      \r\n      console.log('✅ 구매요청 템플릿 다운로드 완료');\r\n    } catch (error: any) {\r\n      console.error('❌ 구매요청 템플릿 다운로드 실패:', error);\r\n      throw new Error('템플릿 다운로드 중 오류가 발생했습니다.');\r\n    }\r\n  },\r\n  // 🔥 Excel 내보내기 함수 추가\r\n  exportRequests: async (filters?: SearchFilters): Promise<void> => {\r\n    try {\r\n      console.log('📊 구매요청 Excel 내보내기 시작...');\r\n      \r\n      const params = filters ? {\r\n        search: filters.search,\r\n        status: filters.status,\r\n        urgency: filters.urgency,\r\n        department: filters.department,\r\n        category: filters.category,\r\n        date_from: filters.dateFrom,\r\n        date_to: filters.dateTo\r\n      } : {};\r\n\r\n      // undefined 값 제거\r\n      const filteredParams = Object.fromEntries(\r\n        Object.entries(params).filter(([_, value]) => value !== undefined && value !== null)\r\n      );\r\n\r\n      console.log('📋 내보내기 파라미터:', filteredParams);\r\n\r\n      const response = await api.get('/purchase-requests/export/excel', {\r\n        params: filteredParams,\r\n        responseType: 'blob',\r\n        timeout: 300000, // 5분 타임아웃\r\n      });\r\n\r\n      // Blob 유효성 검사\r\n      if (!response.data || response.data.size === 0) {\r\n        throw new Error('빈 파일이 반환되었습니다.');\r\n      }\r\n\r\n      console.log('📥 파일 다운로드 완료, 크기:', response.data.size);\r\n\r\n      // 파일 다운로드 처리\r\n      const blob = response.data;\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      \r\n      const today = new Date().toISOString().split('T')[0];\r\n      link.download = `구매요청목록_${today}.xlsx`;\r\n      \r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      console.log('✅ 구매요청 Excel 내보내기 완료');\r\n    } catch (error: any) {\r\n      console.error('❌ 구매요청 Excel 내보내기 실패:', error);\r\n      \r\n      // 에러 타입별 처리\r\n      if (error.response?.status === 404) {\r\n        throw new Error('내보낼 데이터가 없습니다.');\r\n      } else if (error.response?.status === 500) {\r\n        throw new Error('서버에서 파일 생성 중 오류가 발생했습니다.');\r\n      } else if (error.code === 'ECONNABORTED') {\r\n        throw new Error('파일 생성 시간이 너무 오래 걸립니다. 데이터를 줄여서 다시 시도해주세요.');\r\n      } else {\r\n        throw new Error(error.message || '내보내기 중 알 수 없는 오류가 발생했습니다.');\r\n      }\r\n    }\r\n  },\r\n  // 승인/거절 처리\r\n  approveRequest: async (params: {\r\n    requestId: number;\r\n    action: 'approve' | 'reject';\r\n    comments?: string;\r\n  }): Promise<PurchaseRequest> => {\r\n    try {\r\n      const { requestId, ...data } = params;\r\n      const response = await apiRequest.post(`/purchase-requests/${requestId}/approve`, data);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('승인 처리 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 편의 메서드들\r\n  getPendingRequests: async (limit = 50): Promise<PurchaseRequest[]> => {\r\n    try {\r\n      const response = await apiRequest.get('/purchase-requests/pending', { limit });\r\n      return response;\r\n    } catch (error) {\r\n      console.error('대기 중 요청 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getUrgentRequests: async (limit = 30): Promise<PurchaseRequest[]> => {\r\n    try {\r\n      const response = await apiRequest.get('/purchase-requests/urgent', { limit });\r\n      return response;\r\n    } catch (error) {\r\n      console.error('긴급 요청 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getRecentRequests: async (days = 7, limit = 50): Promise<PurchaseRequest[]> => {\r\n    try {\r\n      const response = await apiRequest.get('/purchase-requests/recent', { days, limit });\r\n      return response;\r\n    } catch (error) {\r\n      console.error('최근 요청 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  // 🔥 새로 추가: 구매 요청 완료 처리\r\n  completePurchase: async (requestId: number, completionData: {\r\n    received_quantity?: number;\r\n    receiver_name?: string;\r\n    receiver_email?: string;\r\n    location?: string;\r\n    condition?: string;\r\n    notes?: string;\r\n    completed_by?: string;\r\n    received_date?: string;\r\n  }): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    purchase_request_id: number;\r\n    inventory_item_id: number;\r\n    inventory_item_code: string;\r\n    redirect_url: string;\r\n  }> => {\r\n    try {\r\n      const response = await apiRequest.post(`/purchase-requests/${requestId}/complete`, completionData);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('구매 완료 처리 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 구매 요청에서 품목 직접 생성 (기존 있지만 개선)\r\n  createInventoryFromPurchase: async (requestId: number, inventoryData: {\r\n    received_quantity: number;\r\n    receiver_name: string;\r\n    receiver_email?: string;\r\n    department: string;\r\n    received_date: string;\r\n    location?: string;\r\n    condition?: string;\r\n    notes?: string;\r\n  }): Promise<any> => {\r\n    try {\r\n      const response = await apiRequest.post('/inventory/from-purchase-request', {\r\n        purchase_request_id: requestId,\r\n        ...inventoryData\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      console.error('구매 요청에서 품목 생성 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\n// Unified Inventory API - 새로운 통합 재고 관리\r\nexport const inventoryApi = {\r\n\r\n  // getItems: async (page = 1, limit = 20, filters: any = {}): Promise<any> => {\r\n  //   try {\r\n  //     const params = {\r\n  //       skip: (page - 1) * limit,\r\n  //       limit,\r\n  //       ...filters\r\n  //     };\r\n  //     const response = await apiRequest.get('/inventory/', params);\r\n  //     return { data: response };\r\n  //   } catch (error) {\r\n  //     console.error('재고 조회 실패:', error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  getItems: async (\r\n    page = 1, \r\n    limit = 20, \r\n    filters: any = {}, \r\n    sortOptions?: {  // 🔥 새로 추가\r\n      sort_by?: string;\r\n      sort_order?: 'asc' | 'desc';\r\n    }\r\n  ): Promise<any> => {\r\n    try {\r\n      const params = {\r\n        skip: (page - 1) * limit,\r\n        limit,\r\n        ...filters,\r\n        // 🔥 정렬 파라미터 추가\r\n        sort_by: sortOptions?.sort_by || 'item_code',\r\n        sort_order: sortOptions?.sort_order || 'desc'\r\n      };\r\n      \r\n      console.log('📋 API 요청 파라미터:', params);\r\n      \r\n      const response = await apiRequest.get('/inventory/', params);\r\n      return { data: response };\r\n    } catch (error) {\r\n      console.error('재고 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  // 🔥 stats API 경로 수정\r\n  getStats: async (): Promise<any> => {\r\n    try {\r\n      // /stats 대신 /inventory/stats 사용\r\n      const response = await apiRequest.get('/inventory/stats');\r\n      return { data: response };\r\n    } catch (error) {\r\n      console.error('재고 통계 조회 실패:', error);\r\n      \r\n      // 🔥 404 오류 시 기본값 반환\r\n      return { \r\n        data: {\r\n          total_items: 0,\r\n          low_stock_items: 0,\r\n          out_of_stock_items: 0,\r\n          total_value: 0\r\n        }\r\n      };\r\n    }\r\n  },\r\n\r\n  // 품목 생성\r\n  createItem: async (data: UnifiedInventoryFormData): Promise<UnifiedInventoryItem> => {\r\n    try {\r\n      const response = await apiRequest.post('/inventory', data);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('품목 생성 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateItem: async (id: number, data: any): Promise<any> => {\r\n    try {\r\n      const response = await apiRequest.put(`/inventory/${id}`, data);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('재고 수정 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  deleteItem: async (itemId: number): Promise<any> => {\r\n    try {\r\n      const response = await apiRequest.delete(`/inventory/${itemId}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('재고 삭제 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  exportData: async (options?: {\r\n  include_receipts?: boolean;\r\n  include_images?: boolean;\r\n  search?: string;\r\n  category?: string;\r\n  brand?: string;\r\n  supplier_name?: string;\r\n  is_active?: boolean;\r\n}): Promise<void> => {\r\n  try {\r\n    const params = {\r\n      include_receipts: options?.include_receipts || false,\r\n      include_images: options?.include_images || false,\r\n      search: options?.search,\r\n      category: options?.category,\r\n      brand: options?.brand,\r\n      supplier_name: options?.supplier_name,\r\n      is_active: options?.is_active\r\n    };\r\n    \r\n    // undefined 값 제거\r\n    const filteredParams = Object.fromEntries(\r\n      Object.entries(params).filter(([_, value]) => value !== undefined && value !== null)\r\n    );\r\n    \r\n    const response = await api.get('/inventory/export', {\r\n      params: filteredParams,\r\n      responseType: 'blob'\r\n    });\r\n    if (!response.data || response.data.size === 0) {\r\n      throw new Error('빈 파일이 반환되었습니다.');\r\n    }\r\n    const blob = response.data;\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    \r\n    const today = new Date();\r\n    const dateStr = today.toISOString().split('T')[0].replace(/-/g, '');\r\n    const timeStr = today.toTimeString().slice(0, 8).replace(/:/g, '');\r\n    link.download = `품목목록_${dateStr}_${timeStr}.xlsx`;\r\n    \r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n    console.log('✅ Excel 내보내기 완료');\r\n    } catch (error) {\r\n      console.error('❌ Excel 내보내기 실패:', error);\r\n      \r\n      // 에러 타입별 처리\r\n      if (error.response?.status === 404) {\r\n        throw new Error('내보낼 데이터가 없습니다.');\r\n      } else if (error.response?.status === 500) {\r\n        throw new Error('서버에서 파일 생성 중 오류가 발생했습니다.');\r\n      } else if (error.code === 'ECONNABORTED') {\r\n        throw new Error('파일 생성 시간이 너무 오래 걸립니다. 데이터를 줄여서 다시 시도해주세요.');\r\n      } else {\r\n        throw new Error(error.message || '내보내기 중 알 수 없는 오류가 발생했습니다.');\r\n      }\r\n    }\r\n  },\r\n  // 품목 상세 조회\r\n  getItem: async (itemId: number): Promise<UnifiedInventoryItem> => {\r\n    try {\r\n      const response = await apiRequest.get(`/inventory/${itemId}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('품목 상세 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 품목 코드로 조회\r\n  getItemByCode: async (itemCode: string): Promise<UnifiedInventoryItem> => {\r\n    try {\r\n      const response = await apiRequest.get(`/inventory/code/${itemCode}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('품목 코드 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 수령 추가\r\n  addReceipt: async (itemId: number, receiptData: ReceiptHistory): Promise<UnifiedInventoryItem> => {\r\n    try {\r\n      const response = await apiRequest.post(`/inventory/${itemId}/receipts`, receiptData);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('수령 추가 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 수령 수정\r\n  updateReceipt: async (itemId: number, receiptNumber: string, receiptData: Partial<ReceiptHistory>): Promise<UnifiedInventoryItem> => {\r\n    try {\r\n      const response = await apiRequest.put(`/inventory/${itemId}/receipts/${receiptNumber}`, receiptData);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('수령 수정 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 수령 삭제\r\n  deleteReceipt: async (itemId: number, receiptNumber: string): Promise<UnifiedInventoryItem> => {\r\n    try {\r\n      const response = await apiRequest.delete(`/inventory/${itemId}/receipts/${receiptNumber}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('수령 삭제 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 재고 수량 업데이트\r\n  updateStock: async (itemId: number, quantity: number): Promise<UnifiedInventoryItem> => {\r\n    try {\r\n      const response = await apiRequest.patch(`/inventory/${itemId}/stock?quantity=${quantity}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('재고 수량 업데이트 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 카테고리 목록 조회\r\n  getCategories: async (): Promise<string[]> => {\r\n    try {\r\n      const response = await apiRequest.get('/inventory/categories');\r\n      return response;\r\n    } catch (error) {\r\n      console.error('카테고리 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 재고 부족 품목 조회\r\n  getLowStockItems: async (skip = 0, limit = 100): Promise<UnifiedInventoryItem[]> => {\r\n    try {\r\n      const response = await apiRequest.get('/inventory/low-stock', { skip, limit });\r\n      return response;\r\n    } catch (error) {\r\n      console.error('재고 부족 품목 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 재고 없는 품목 조회\r\n  getOutOfStockItems: async (skip = 0, limit = 100): Promise<UnifiedInventoryItem[]> => {\r\n    try {\r\n      const response = await apiRequest.get('/inventory/out-of-stock', { skip, limit });\r\n      return response;\r\n    } catch (error) {\r\n      console.error('재고 없는 품목 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // // Excel 내보내기\r\n  // exportData: async (): Promise<Blob> => {\r\n  //   try {\r\n  //     const blob = await apiRequest.download('/inventory/export');\r\n  //     return blob;\r\n  //   } catch (error) {\r\n  //     console.error('Excel 내보내기 실패:', error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  // Excel 일괄 업로드\r\n  // 🔥 개선된 Excel 업로드\r\n  // Excel 업로드 개선\r\nuploadExcel: async (file: File): Promise<UploadResult> => {\r\n  try {\r\n    console.log('📤 Excel 업로드 시작:', file.name, file.size);\r\n    \r\n    // 파일 유효성 검사\r\n    if (!file) {\r\n      throw new Error('파일이 선택되지 않았습니다.');\r\n    }\r\n    \r\n    if (!file.name.match(/\\.(xlsx|xls)$/i)) {\r\n      throw new Error('Excel 파일만 업로드 가능합니다 (.xlsx, .xls)');\r\n    }\r\n    \r\n    const maxSize = 10 * 1024 * 1024; // 10MB\r\n    if (file.size > maxSize) {\r\n      throw new Error('파일 크기는 10MB를 초과할 수 없습니다.');\r\n    }\r\n    \r\n    // FormData 생성\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    console.log('🚀 서버에 업로드 요청...');\r\n    \r\n    const response = await api.post('/inventory/bulk-upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n      timeout: 300000, // 5분 타임아웃\r\n    });\r\n    \r\n    console.log('✅ 업로드 성공:', response.data);\r\n    \r\n    // 성공 응답 구조화\r\n    const result: UploadResult = {\r\n      success: response.data.success || true,\r\n      created_count: response.data.created_count || 0,\r\n      updated_count: response.data.updated_count || 0,\r\n      created_items: response.data.created_items || [],\r\n      updated_items: response.data.updated_items || [],\r\n      total_processed: response.data.total_processed || 0,\r\n      errors: response.data.errors || [],\r\n      message: response.data.message || '업로드가 완료되었습니다.'\r\n    };\r\n    \r\n    return result;\r\n    \r\n  } catch (error: any) {\r\n    console.error('❌ Excel 업로드 실패:', error);\r\n    \r\n    if (error.response?.data) {\r\n      const errorData = error.response.data;\r\n      throw new Error(errorData.detail || errorData.message || '업로드 중 오류가 발생했습니다.');\r\n    } else {\r\n      throw new Error(error.message || '업로드 중 알 수 없는 오류가 발생했습니다.');\r\n    }\r\n  }\r\n},\r\n\r\n  // 🔥 개선된 템플릿 다운로드\r\n  downloadTemplate: async (): Promise<void> => {\r\n    try {\r\n      console.log('📋 템플릿 다운로드 시작...');\r\n      \r\n      const response = await api.get('/inventory/template/download', {\r\n        responseType: 'blob',\r\n        timeout: 60000, // 1분 타임아웃\r\n      });\r\n      \r\n      // Blob 유효성 검사\r\n      if (!response.data || response.data.size === 0) {\r\n        throw new Error('빈 템플릿 파일이 반환되었습니다.');\r\n      }\r\n      \r\n      console.log('📥 템플릿 파일 다운로드 완료, 크기:', response.data.size);\r\n      \r\n      // 파일 다운로드 처리\r\n      const blob = response.data;\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      \r\n      // 파일명 생성\r\n      const today = new Date().toISOString().split('T')[0].replace(/-/g, '');\r\n      link.download = `품목등록_템플릿_${today}.xlsx`;\r\n      \r\n      // 다운로드 실행\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n      \r\n      console.log('✅ 템플릿 다운로드 완료');\r\n    } catch (error: any) {\r\n      console.error('❌ 템플릿 다운로드 실패:', error);\r\n      \r\n      if (error.response?.status === 404) {\r\n        throw new Error('템플릿 파일을 찾을 수 없습니다.');\r\n      } else if (error.response?.status === 500) {\r\n        throw new Error('서버에서 템플릿 생성 중 오류가 발생했습니다.');\r\n      } else {\r\n        throw new Error('템플릿 다운로드 중 오류가 발생했습니다.');\r\n      }\r\n    }\r\n  },\r\n  // 이미지 업로드\r\n  uploadImage: async (itemId: number, file: File, imageType = 'general'): Promise<{\r\n    success: boolean;\r\n    image_id: number;\r\n    filename: string;\r\n    file_url: string;\r\n    thumbnail_url?: string;\r\n    message: string;\r\n  }> => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      formData.append('image_type', imageType);\r\n      \r\n      const response = await api.post(`/inventory/${itemId}/images`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('이미지 업로드 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 이미지 삭제\r\n  deleteImage: async (itemId: number, imageId: number): Promise<{ message: string }> => {\r\n    try {\r\n      const response = await apiRequest.delete(`/inventory/${itemId}/images/${imageId}`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('이미지 삭제 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 품목 이동/전송\r\n  transferItem: async (fromItemId: number, transferData: {\r\n    to_location: string;\r\n    quantity: number;\r\n    transfer_type: string;\r\n    transfer_by: string;\r\n    department: string;\r\n    reason: string;\r\n    notes?: string;\r\n    to_department?: string;\r\n    to_receiver?: string;\r\n  }): Promise<UnifiedInventoryItem> => {\r\n    try {\r\n      const response = await apiRequest.post(`/inventory/${fromItemId}/transfer`, transferData);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('품목 이동 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 사용 이력 조회\r\n  getUsageLogs: async (itemId: number, page = 1, limit = 20): Promise<{\r\n    data: {\r\n      items: any[];\r\n      total: number;\r\n      pages: number;\r\n      page: number;\r\n      size: number;\r\n    };\r\n  }> => {\r\n    try {\r\n      const params = {\r\n        skip: (page - 1) * limit,\r\n        limit,\r\n      };\r\n\r\n      const response = await apiRequest.get(`/inventory/${itemId}/usage-logs`, params);\r\n      return { data: response };\r\n    } catch (error) {\r\n      console.error('사용 이력 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 사용 이력 추가\r\n  addUsageLog: async (itemId: number, usageData: {\r\n    usage_type: string;\r\n    quantity: number;\r\n    user_name: string;\r\n    department: string;\r\n    purpose?: string;\r\n    notes?: string;\r\n  }): Promise<any> => {\r\n    try {\r\n      const response = await apiRequest.post(`/inventory/${itemId}/usage-logs`, usageData);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('사용 이력 추가 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // QR 코드 생성\r\n  generateQRCode: async (itemId: number, options: {\r\n    include_info: string[];\r\n    size: string;\r\n  }): Promise<{\r\n    qr_code_url: string;\r\n    qr_code_data: string;\r\n    expiry_date?: string;\r\n  }> => {\r\n    try {\r\n      const response = await apiRequest.post(`/inventory/${itemId}/qr-code`, options);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('QR 코드 생성 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 대시보드 데이터 조회\r\n  getDashboardData: async (): Promise<{\r\n    total_items: number;\r\n    total_value: number;\r\n    low_stock_alerts: number;\r\n    recent_receipts: number;\r\n    category_chart: Array<{ category: string; count: number; value: number }>;\r\n    stock_status_chart: Array<{ status: string; count: number; percentage: number }>;\r\n    monthly_receipts: Array<{ month: string; count: number; quantity: number }>;\r\n    top_usage_items: Array<{ item_name: string; usage_count: number; total_quantity: number }>;\r\n    alerts: Array<{ type: string; message: string; item_id?: number; priority: string }>;\r\n    recommendations: string[];\r\n  }> => {\r\n    try {\r\n      const response = await apiRequest.get('/inventory/dashboard');\r\n      return response;\r\n    } catch (error) {\r\n      console.error('대시보드 데이터 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  // 🔥 새로 추가: 수령 완료 처리 (이미지 포함)\r\n  completeReceiptWithImages: async (itemId: number, receiptData: {\r\n    receipt_number?: string;\r\n    received_quantity: number;\r\n    receiver_name: string;\r\n    receiver_email?: string;\r\n    department: string;\r\n    received_date: string;\r\n    location?: string;\r\n    condition?: string;\r\n    notes?: string;\r\n  }, images?: File[]): Promise<any> => {\r\n    try {\r\n      // 1. 수령 이력 먼저 추가\r\n      const receipt = await apiRequest.post(`/inventory/${itemId}/receipts`, receiptData);\r\n      \r\n      // 2. 이미지가 있으면 업로드 (명시적 체크 강화)\r\n      if (images && images.length > 0) {\r\n        const uploadPromises = images.map(async (file, index) => {\r\n          console.log(`${successfulUploads.length}개 이미지 업로드 완료`);\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n          formData.append('image_type', 'receipt');\r\n          \r\n          return api.post(`/inventory/${itemId}/images`, formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          });\r\n        });\r\n        \r\n        const imageResults = await Promise.allSettled(uploadPromises);\r\n        const successfulUploads = imageResults\r\n          .filter(result => result.status === 'fulfilled')\r\n          .map(result => (result as PromiseFulfilledResult<any>).value.data);\r\n        \r\n        console.log(`${successfulUploads.length}개 이미지 업로드 완료`);\r\n      } else {\r\n        console.log('이미지 없음: 업로드 스킵');\r\n      }\r\n      \r\n      return receipt;\r\n    } catch (error) {\r\n      console.log('오류 상세:', error.response?.data?.detail);\r\n      console.error('수령 완료 처리 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 이미지와 함께 품목 업데이트\r\n  updateItemWithImages: async (itemId: number, itemData: any, images?: File[]): Promise<any> => {\r\n    try {\r\n      // 1. 품목 정보 업데이트\r\n      const updatedItem = await apiRequest.put(`/inventory/${itemId}`, itemData);\r\n      \r\n      // 2. 이미지 업로드\r\n      if (images && images.length > 0) {\r\n        for (const file of images) {\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n          formData.append('image_type', 'general');\r\n          \r\n          await api.post(`/inventory/${itemId}/images`, formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          });\r\n        }\r\n      }\r\n      \r\n      return updatedItem;\r\n    } catch (error) {\r\n      console.error('품목 업데이트 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  uploadTransactionDocument: async (itemId: number, file: File): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n    document_url: string;\r\n    uploaded_by: string;\r\n    upload_date: string;\r\n  }> => {\r\n    try {\r\n      console.log(`거래명세서 업로드 시작: 품목 ID=${itemId}, 파일명=${file.name}`);\r\n      \r\n      // 파일 유효성 검사\r\n      if (!file) {\r\n        throw new Error('파일이 선택되지 않았습니다.');\r\n      }\r\n      \r\n      // 지원되는 파일 형식 확인\r\n      const allowedTypes = [\r\n        'application/pdf',\r\n        'image/jpeg',\r\n        'image/png', \r\n        'image/jpg',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', // xlsx\r\n        'application/vnd.ms-excel' // xls\r\n      ];\r\n      \r\n      if (!allowedTypes.includes(file.type)) {\r\n        throw new Error('PDF, 이미지 파일 또는 Excel 파일만 업로드 가능합니다.');\r\n      }\r\n      \r\n      // 파일 크기 검증 (10MB)\r\n      const maxSize = 10 * 1024 * 1024;\r\n      if (file.size > maxSize) {\r\n        throw new Error('파일 크기는 10MB를 초과할 수 없습니다.');\r\n      }\r\n      \r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      \r\n      const response = await api.post(`/inventory/${itemId}/transaction-document`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        timeout: 180000, // 3분 타임아웃\r\n      });\r\n      \r\n      console.log('거래명세서 업로드 성공:', response.data);\r\n      \r\n      return {\r\n        success: response.data.success || true,\r\n        message: response.data.message || '거래명세서가 업로드되었습니다.',\r\n        document_url: response.data.document_url,\r\n        uploaded_by: response.data.uploaded_by,\r\n        upload_date: response.data.upload_date\r\n      };\r\n      \r\n    } catch (error: any) {\r\n      console.error('거래명세서 업로드 실패:', error);\r\n      \r\n      if (error.response?.data) {\r\n        throw new Error(error.response.data.detail || error.response.data.message || '업로드 중 오류가 발생했습니다.');\r\n      }\r\n      throw new Error(error.message || '업로드 중 알 수 없는 오류가 발생했습니다.');\r\n    }\r\n  },\r\n\r\n  // 거래명세서 상태 확인 함수\r\n  checkTransactionDocumentStatus: async (itemId: number): Promise<{\r\n    has_document: boolean;\r\n    document_url?: string;\r\n    upload_date?: string;\r\n    uploaded_by?: string;\r\n  }> => {\r\n    try {\r\n      const response = await apiRequest.get(`/inventory/${itemId}/transaction-document/status`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('거래명세서 상태 확인 실패:', error);\r\n      return { has_document: false };\r\n    }\r\n  },\r\n\r\n  // 거래명세서 삭제 함수\r\n  deleteTransactionDocument: async (itemId: number): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n  }> => {\r\n    try {\r\n      const response = await apiRequest.delete(`/inventory/${itemId}/transaction-document`);\r\n      return response;\r\n    } catch (error) {\r\n      console.error('거래명세서 삭제 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\n// 기존 수령 API는 deprecate하고 inventoryApi로 통합\r\nexport const receiptApi = {\r\n  // 호환성을 위해 기존 API 유지하되, 실제로는 inventoryApi 사용을 권장\r\n  getReceipts: async (page = 1, limit = 20, filters: any = {}): Promise<any> => {\r\n    console.warn('receiptApi.getReceipts는 deprecated입니다. inventoryApi를 사용하세요.');\r\n    \r\n    try {\r\n      // 샘플 데이터 반환 (기존 코드와 호환성 유지)\r\n      const sampleReceipts = [\r\n        {\r\n          id: 1,\r\n          receiptNumber: 'REC-001',\r\n          itemName: '노트북',\r\n          expectedQuantity: 5,\r\n          receivedQuantity: 5,\r\n          receiverName: '김철수',\r\n          department: '개발팀',\r\n          receivedDate: new Date().toISOString(),\r\n        },\r\n        {\r\n          id: 2,\r\n          receiptNumber: 'REC-002',\r\n          itemName: '프린터',\r\n          expectedQuantity: 2,\r\n          receivedQuantity: 2,\r\n          receiverName: '이영희',\r\n          department: '총무부',\r\n          receivedDate: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\r\n        }\r\n      ];\r\n\r\n      return {\r\n        data: {\r\n          items: sampleReceipts.slice((page - 1) * limit, page * limit),\r\n          total: sampleReceipts.length,\r\n          pages: Math.ceil(sampleReceipts.length / limit),\r\n          page,\r\n          size: limit,\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('수령 내역 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  createReceipt: async (data: any): Promise<any> => {\r\n    console.warn('receiptApi.createReceipt는 deprecated입니다. inventoryApi.addReceipt를 사용하세요.');\r\n    throw new Error('이 API는 더 이상 지원되지 않습니다. inventoryApi.addReceipt를 사용하세요.');\r\n  },\r\n\r\n  updateReceipt: async (id: number, data: any): Promise<any> => {\r\n    console.warn('receiptApi.updateReceipt는 deprecated입니다. inventoryApi.updateReceipt를 사용하세요.');\r\n    throw new Error('이 API는 더 이상 지원되지 않                                                     습니다. inventoryApi.updateReceipt를 사용하세요.');\r\n  },\r\n\r\n  deleteReceipt: async (id: number): Promise<any> => {\r\n    console.warn('receiptApi.deleteReceipt는 deprecated입니다. inventoryApi.deleteReceipt를 사용하세요.');\r\n    throw new Error('이 API는 더 이상 지원되지 않습니다. inventoryApi.deleteReceipt를 사용하세요.');\r\n  },\r\n\r\n  exportReceipts: async (): Promise<void> => {\r\n    console.warn('receiptApi.exportReceipts는 deprecated입니다. inventoryApi.exportData를 사용하세요.');\r\n    throw new Error('이 API는 더 이상 지원되지 않습니다. inventoryApi.exportData를 사용하세요.');\r\n  }\r\n};\r\n\r\n// 업로드 API - 실제 백엔드 연결\r\nexport const uploadApi = {\r\n  uploadExcel: async (file: File): Promise<{ \r\n    success: boolean; \r\n    data?: { itemCount: number }; \r\n    message: string; \r\n  }> => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      \r\n      const response = await api.post('/upload/excel', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        timeout: 120000,\r\n      });\r\n      \r\n      return {\r\n        success: true,\r\n        data: { itemCount: response.data.created_count || 0 },\r\n        message: response.data.message || '업로드가 완료되었습니다.',\r\n      };\r\n    } catch (error) {\r\n      console.error('파일 업로드 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getUploadInfo: async (): Promise<{ data: any }> => {\r\n    try {\r\n      const response = await apiRequest.get('/upload/');\r\n      return { data: response };\r\n    } catch (error) {\r\n      console.error('업로드 정보 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getTemplate: async (): Promise<{ data: any }> => {\r\n    try {\r\n      const response = await apiRequest.get('/upload/template');\r\n      return { data: response };\r\n    } catch (error) {\r\n      console.error('템플릿 정보 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 템플릿 다운로드 개선\r\ndownloadTemplate: async (): Promise<void> => {\r\n  try {\r\n    console.log('📋 템플릿 다운로드 시작...');\r\n    \r\n    const response = await api.get('/inventory/template/download', {\r\n      responseType: 'blob',\r\n      timeout: 60000, // 1분 타임아웃\r\n    });\r\n    \r\n    if (!response.data || response.data.size === 0) {\r\n      throw new Error('빈 템플릿 파일이 반환되었습니다.');\r\n    }\r\n    \r\n    console.log('📥 템플릿 파일 다운로드 완료');\r\n    \r\n    // 파일 다운로드 처리\r\n    const blob = response.data;\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    \r\n    const today = new Date().toISOString().split('T')[0].replace(/-/g, '');\r\n    link.download = `품목등록_템플릿_${today}.xlsx`;\r\n    \r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n    \r\n    console.log('✅ 템플릿 다운로드 완료');\r\n  } catch (error: any) {\r\n    console.error('❌ 템플릿 다운로드 실패:', error);\r\n    throw new Error('템플릿 다운로드 중 오류가 발생했습니다.');\r\n    }\r\n  },\r\n};\r\n\r\n// 대시보드 API\r\nexport const dashboardApi = {\r\n  getStats: async (): Promise<{ data: any }> => {\r\n    try {\r\n      const response = await apiRequest.get('/dashboard/stats');\r\n      return { data: response };\r\n    } catch (error) {\r\n      console.error('대시보드 통계 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getDashboard: async (): Promise<{ data: any }> => {\r\n    try {\r\n      const response = await apiRequest.get('/dashboard/');\r\n      return { data: response };\r\n    } catch (error) {\r\n      console.error('대시보드 조회 실패:', error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\n// API 연결 테스트\r\nexport const apiUtils = {\r\n  testConnection: async (): Promise<boolean> => {\r\n    try {\r\n      await apiRequest.get('/dashboard/');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('API 연결 테스트 실패:', error);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  checkHealth: async (): Promise<any> => {\r\n    try {\r\n      const response = await api.get('/health');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('헬스체크 실패:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default {\r\n  dashboard: dashboardApi,\r\n  purchase: purchaseApi,\r\n  inventory: inventoryApi, // 새로운 통합 재고 API\r\n  receipt: receiptApi, // deprecated\r\n  // kakao: kakaoApi,\r\n  upload: uploadApi,\r\n  utils: apiUtils,\r\n};","// client/src/components/inventory/common/Sidebar.tsx - 안전한 에러 처리 버전\r\nimport React, { useState, useEffect } from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport {\r\n  LayoutDashboard,\r\n  Package,\r\n  ShoppingCart,\r\n  ClipboardCheck,\r\n  MessageSquare,\r\n  Upload,\r\n  BarChart3,\r\n  History,\r\n  Settings,\r\n  Users,\r\n  Building,\r\n  CreditCard,\r\n  Bell,\r\n  ChevronLeft,\r\n  ChevronRight\r\n} from 'lucide-react';\r\nimport { purchaseApi } from '../../services/api';\r\n\r\ninterface SidebarProps {\r\n  isOpen: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\n// 스타일 컴포넌트들 (기존과 동일)\r\nconst SidebarContainer = styled.div<{ isOpen: boolean }>`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100vh;\r\n  width: ${props => props.isOpen ? '240px' : '60px'};\r\n  background: linear-gradient(180deg, #2c3e50 0%, #34495e 100%);\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  z-index: 1000;\r\n  box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst SidebarHeader = styled.div<{ isOpen: boolean }>`\r\n  padding: ${props => props.isOpen ? '16px' : '16px 8px'};\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${props => props.isOpen ? 'space-between' : 'center'};\r\n  min-height: 60px;\r\n  position: relative;\r\n`;\r\n\r\nconst Logo = styled.div<{ isOpen: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${props => props.isOpen ? '8px' : '0'};\r\n  \r\n  .logo-icon {\r\n    min-width: 28px;\r\n    width: 28px;\r\n    height: 28px;\r\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n    border-radius: 6px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .logo-text {\r\n    font-size: ${props => props.isOpen ? '1.1rem' : '0'};\r\n    font-weight: 600;\r\n    margin: 0;\r\n    opacity: ${props => props.isOpen ? '1' : '0'};\r\n    transition: all 0.3s ease;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst ToggleButton = styled.button<{ isOpen: boolean }>`\r\n  position: absolute;\r\n  right: ${props => props.isOpen ? '8px' : '-15px'};\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: ${props => props.isOpen ? 'rgba(255, 255, 255, 0.1)' : '#2c3e50'};\r\n  border: ${props => props.isOpen ? 'none' : '1px solid rgba(255, 255, 255, 0.2)'};\r\n  color: white;\r\n  cursor: pointer;\r\n  padding: 4px;\r\n  border-radius: 50%;\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 24px;\r\n  height: 24px;\r\n  z-index: 1001;\r\n  \r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n`;\r\n\r\nconst Navigation = styled.nav`\r\n  flex: 1;\r\n  padding: 12px 0;\r\n  overflow-y: auto;\r\n  \r\n  &::-webkit-scrollbar {\r\n    width: 3px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-track {\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n\r\nconst NavGroup = styled.div<{ isOpen: boolean }>`\r\n  margin-bottom: 20px;\r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst NavGroupTitle = styled.div<{ isOpen: boolean }>`\r\n  font-size: 0.7rem;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n  padding: 0 ${props => props.isOpen ? '16px' : '12px'};\r\n  margin-bottom: 8px;\r\n  opacity: ${props => props.isOpen ? '1' : '0'};\r\n  height: ${props => props.isOpen ? 'auto' : '0'};\r\n  overflow: hidden;\r\n  transition: all 0.3s ease;\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst NavItem = styled.li`\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nconst NavLinkStyled = styled(NavLink)<{ isOpen: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: ${props => props.isOpen ? '10px 16px' : '10px 16px'};\r\n  color: rgba(255, 255, 255, 0.8);\r\n  text-decoration: none;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  border-left: 3px solid transparent;\r\n  \r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.1);\r\n    color: white;\r\n    border-left-color: #3498db;\r\n  }\r\n  \r\n  &.active {\r\n    background: rgba(255, 255, 255, 0.15);\r\n    color: white;\r\n    border-left-color: #3498db;\r\n    \r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      bottom: 0;\r\n      width: 3px;\r\n      background: #3498db;\r\n    }\r\n  }\r\n  \r\n  .nav-icon {\r\n    min-width: 18px;\r\n    width: 18px;\r\n    height: 18px;\r\n    margin-right: ${props => props.isOpen ? '12px' : '0'};\r\n    transition: margin 0.3s ease;\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .nav-text {\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n    opacity: ${props => props.isOpen ? '1' : '0'};\r\n    transform: translateX(${props => props.isOpen ? '0' : '-10px'});\r\n    transition: all 0.3s ease;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\n// 🔥 동적 알림 배지 컴포넌트\r\nconst NavBadge = styled.span<{ isOpen: boolean; count: number }>`\r\n  margin-left: auto;\r\n  background: linear-gradient(135deg, #e74c3c, #c0392b);\r\n  color: white;\r\n  font-size: 0.7rem;\r\n  font-weight: 600;\r\n  padding: 2px 6px;\r\n  border-radius: 10px;\r\n  min-width: 18px;\r\n  height: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  opacity: ${props => props.isOpen ? '1' : '0'};\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 2px 4px rgba(231, 76, 60, 0.3);\r\n  \r\n  /* 펄스 애니메이션 */\r\n  animation: ${props => props.count > 0 ? 'pulse 2s infinite' : 'none'};\r\n  \r\n  @keyframes pulse {\r\n    0%, 100% {\r\n      transform: scale(1);\r\n      opacity: ${props => props.isOpen ? '1' : '0'};\r\n    }\r\n    50% {\r\n      transform: scale(1.1);\r\n      opacity: ${props => props.isOpen ? '0.8' : '0'};\r\n    }\r\n  }\r\n`;\r\n\r\n// 🔥 축소 상태에서의 알림 점\r\nconst CompactNotification = styled.div<{ show: boolean }>`\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 8px;\r\n  width: 8px;\r\n  height: 8px;\r\n  background: #e74c3c;\r\n  border-radius: 50%;\r\n  opacity: ${props => props.show ? '1' : '0'};\r\n  transition: opacity 0.3s ease;\r\n  animation: ${props => props.show ? 'pulse-dot 2s infinite' : 'none'};\r\n  \r\n  @keyframes pulse-dot {\r\n    0%, 100% {\r\n      transform: scale(1);\r\n      opacity: 1;\r\n    }\r\n    50% {\r\n      transform: scale(1.3);\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tooltip = styled.div<{ show: boolean }>`\r\n  position: absolute;\r\n  left: 100%;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: rgba(0, 0, 0, 0.8);\r\n  color: white;\r\n  padding: 6px 10px;\r\n  border-radius: 4px;\r\n  font-size: 0.8rem;\r\n  white-space: nowrap;\r\n  margin-left: 8px;\r\n  opacity: ${props => props.show ? '1' : '0'};\r\n  visibility: ${props => props.show ? 'visible' : 'hidden'};\r\n  transition: all 0.3s ease;\r\n  z-index: 1000;\r\n  pointer-events: none;\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    right: 100%;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    border: 4px solid transparent;\r\n    border-right-color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nconst NavItemWithTooltip = styled.div`\r\n  position: relative;\r\n  \r\n  &:hover .tooltip {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\n// 🔥 API 연결 상태 표시 컴포넌트\r\nconst ConnectionStatus = styled.div<{ connected: boolean }>`\r\n  position: absolute;\r\n  bottom: 4px;\r\n  right: 4px;\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50%;\r\n  background: ${props => props.connected ? '#10b981' : '#ef4444'};\r\n  opacity: 0.6;\r\n  transition: all 0.3s ease;\r\n`;\r\n\r\n// 🔥 안전한 구매 요청 개수 조회 훅\r\nconst usePurchaseRequestCount = () => {\r\n  const [apiConnected, setApiConnected] = useState(false);\r\n  \r\n  const { data: pendingRequestsData, isError } = useQuery({\r\n    queryKey: ['purchase-requests-pending-count'],\r\n    queryFn: async () => {\r\n      try {\r\n        console.log('🔍 구매 요청 개수 조회 시도...');\r\n        \r\n        const response = await purchaseApi.getRequests({\r\n          page: 1,\r\n          limit: 100, // 개수만 확인하므로 적게\r\n        });\r\n        \r\n        console.log('✅ API 연결 성공:', response);\r\n        setApiConnected(true);\r\n        \r\n        // 완료되지 않은 요청만 필터링\r\n        const pendingRequests = response.data.items.filter(\r\n          request => request.status !== 'COMPLETED' && request.status !== 'CANCELLED'\r\n        );\r\n        \r\n        return pendingRequests.length;\r\n      } catch (error) {\r\n        console.warn('⚠️ API 연결 실패, 샘플 모드로 전환:', error.message);\r\n        setApiConnected(false);\r\n        \r\n        // 🔥 샘플 데이터 반환 (데모용)\r\n        return 3; // 샘플: 3개의 미완료 요청\r\n      }\r\n    },\r\n    refetchInterval: apiConnected ? 30000 : 300000, // 연결 시 30초, 미연결 시 5분\r\n    staleTime: 15000, // 15초 캐시\r\n    retry: 1, // 1회만 재시도\r\n    retryDelay: 3000, // 3초 후 재시도\r\n  });\r\n\r\n  return {\r\n    pendingCount: pendingRequestsData || 0,\r\n    apiConnected,\r\n    hasError: isError\r\n  };\r\n};\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ isOpen, onToggle }) => {\r\n  const location = useLocation();\r\n  const { pendingCount, apiConnected } = usePurchaseRequestCount();\r\n\r\n  // 🔥 메뉴 아이템들 (동적 배지 포함)\r\n  const mainMenuItems = [\r\n    { path: '/dashboard', label: '대시보드', icon: LayoutDashboard },\r\n    { \r\n      path: '/purchase-requests', \r\n      label: '구매 요청', \r\n      icon: ShoppingCart, \r\n      dynamicBadge: pendingCount // 동적 배지\r\n    },\r\n    { path: '/inventory', label: '품목 관리', icon: Package },\r\n    { path: '/receipts', label: '수령 관리', icon: ClipboardCheck },\r\n    { path: '/kakao', label: '카톡 처리', icon: MessageSquare },\r\n  ];\r\n\r\n  const dataMenuItems = [\r\n    { path: '/upload', label: '파일 관리', icon: Upload },\r\n    { path: '/statistics', label: '통계 분석', icon: BarChart3 },\r\n    { path: '/logs', label: '시스템 로그', icon: History },\r\n  ];\r\n\r\n  const managementMenuItems = [\r\n    { path: '/suppliers', label: '공급업체', icon: Building },\r\n    { path: '/budgets', label: '예산 관리', icon: CreditCard },\r\n    { path: '/users', label: '사용자 관리', icon: Users },\r\n    { path: '/notifications', label: '알림 설정', icon: Bell },\r\n    { path: '/settings', label: '시스템 설정', icon: Settings },\r\n  ];\r\n\r\n  const renderNavItem = (item: any) => {\r\n    const Icon = item.icon;\r\n    const isActive = location.pathname === item.path;\r\n    const badgeCount = item.dynamicBadge || item.badge || 0;\r\n    const showBadge = badgeCount > 0;\r\n    \r\n    return (\r\n      <NavItem key={item.path}>\r\n        <NavItemWithTooltip>\r\n          <NavLinkStyled \r\n            to={item.path} \r\n            isOpen={isOpen}\r\n            className={isActive ? 'active' : ''}\r\n          >\r\n            <Icon className=\"nav-icon\" size={18} />\r\n            <span className=\"nav-text\">{item.label}</span>\r\n            \r\n            {/* 🔥 동적 알림 배지 (사이드바 열린 상태) */}\r\n            {showBadge && isOpen && (\r\n              <NavBadge isOpen={isOpen} count={badgeCount}>\r\n                {badgeCount > 99 ? '99+' : badgeCount}\r\n              </NavBadge>\r\n            )}\r\n            \r\n            {/* 🔥 축소 상태 알림 점 */}\r\n            {showBadge && !isOpen && (\r\n              <CompactNotification show={!isOpen} />\r\n            )}\r\n          </NavLinkStyled>\r\n          \r\n          {/* 🔥 툴팁 (축소 상태에서만) */}\r\n          {!isOpen && (\r\n            <Tooltip show={!isOpen} className=\"tooltip\">\r\n              {item.label}\r\n              {showBadge && ` (${badgeCount})`}\r\n              {item.path === '/purchase-requests' && !apiConnected && ' [샘플]'}\r\n            </Tooltip>\r\n          )}\r\n        </NavItemWithTooltip>\r\n      </NavItem>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SidebarContainer isOpen={isOpen}>\r\n      <SidebarHeader isOpen={isOpen}>\r\n        <Logo isOpen={isOpen}>\r\n          <div className=\"logo-icon\">\r\n            <Package size={16} />\r\n          </div>\r\n          <h1 className=\"logo-text\">ERP 시스템</h1>\r\n        </Logo>\r\n        <ToggleButton isOpen={isOpen} onClick={onToggle}>\r\n          {isOpen ? <ChevronLeft size={14} /> : <ChevronRight size={14} />}\r\n        </ToggleButton>\r\n        \r\n        {/* 🔥 API 연결 상태 표시 */}\r\n        <ConnectionStatus connected={apiConnected} title={apiConnected ? 'API 연결됨' : 'API 미연결 (샘플 모드)'} />\r\n      </SidebarHeader>\r\n\r\n      <Navigation>\r\n        <NavGroup isOpen={isOpen}>\r\n          <NavGroupTitle isOpen={isOpen}>주요 기능</NavGroupTitle>\r\n          <NavList>\r\n            {mainMenuItems.map(renderNavItem)}\r\n          </NavList>\r\n        </NavGroup>\r\n\r\n        <NavGroup isOpen={isOpen}>\r\n          <NavGroupTitle isOpen={isOpen}>데이터 관리</NavGroupTitle>\r\n          <NavList>\r\n            {dataMenuItems.map(renderNavItem)}\r\n          </NavList>\r\n        </NavGroup>\r\n\r\n        <NavGroup isOpen={isOpen}>\r\n          <NavGroupTitle isOpen={isOpen}>시스템 관리</NavGroupTitle>\r\n          <NavList>\r\n            {managementMenuItems.map(renderNavItem)}\r\n          </NavList>\r\n        </NavGroup>\r\n      </Navigation>\r\n    </SidebarContainer>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","// client/src/components/common/Header.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Menu, Bell, User, Search, LogOut, Settings } from 'lucide-react';\r\n\r\ninterface HeaderProps {\r\n  onToggleSidebar: () => void;\r\n  sidebarCollapsed: boolean;\r\n}\r\n\r\nconst HeaderContainer = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 24px;\r\n  height: 56px;\r\n  background: ${props => props.theme.colors.surface};\r\n  border-bottom: 1px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n`;\r\n\r\nconst MenuButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  background: none;\r\n  border: none;\r\n  color: ${props => props.theme.colors.text};\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n\r\n  &:hover {\r\n    background: ${props => props.theme.colors.background};\r\n  }\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 280px;\r\n  padding: 8px 12px 8px 36px;\r\n  border: 1px solid ${props => props.theme.colors.border};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  background: ${props => props.theme.colors.background};\r\n  font-size: 0.875rem;\r\n  transition: all 0.2s;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.theme.colors.primary};\r\n    box-shadow: 0 0 0 3px ${props => props.theme.colors.primary}20;\r\n    width: 320px;\r\n  }\r\n  \r\n  &::placeholder {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n  }\r\n`;\r\n\r\nconst SearchIcon = styled(Search)`\r\n  position: absolute;\r\n  left: 10px;\r\n  color: ${props => props.theme.colors.textSecondary};\r\n`;\r\n\r\nconst IconButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  background: none;\r\n  border: none;\r\n  color: ${props => props.theme.colors.text};\r\n  cursor: pointer;\r\n  position: relative;\r\n  transition: all 0.2s;\r\n\r\n  &:hover {\r\n    background: ${props => props.theme.colors.background};\r\n  }\r\n`;\r\n\r\nconst NotificationBadge = styled.span`\r\n  position: absolute;\r\n  top: 6px;\r\n  right: 6px;\r\n  width: 6px;\r\n  height: 6px;\r\n  background: ${props => props.theme.colors.error};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst UserSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 4px 8px;\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  border: 1px solid transparent;\r\n\r\n  &:hover {\r\n    background: ${props => props.theme.colors.background};\r\n    border-color: ${props => props.theme.colors.border};\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .user-name {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserAvatar = styled.div`\r\n  width: 28px;\r\n  height: 28px;\r\n  border-radius: 50%;\r\n  background: linear-gradient(135deg, ${props => props.theme.colors.primary}, ${props => props.theme.colors.secondary});\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst UserName = styled.span`\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  width: 1px;\r\n  height: 20px;\r\n  background: ${props => props.theme.colors.border};\r\n  margin: 0 4px;\r\n`;\r\n\r\nconst Header: React.FC<HeaderProps> = ({ onToggleSidebar, sidebarCollapsed }) => {\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderLeft>\r\n        <MenuButton onClick={onToggleSidebar}>\r\n          <Menu size={18} />\r\n        </MenuButton>\r\n        \r\n        <SearchContainer>\r\n          <SearchIcon size={14} />\r\n          <SearchInput \r\n            type=\"text\" \r\n            placeholder=\"검색어를 입력하세요...\" \r\n          />\r\n        </SearchContainer>\r\n      </HeaderLeft>\r\n\r\n      <HeaderRight>\r\n        <IconButton title=\"알림\">\r\n          <Bell size={18} />\r\n          <NotificationBadge />\r\n        </IconButton>\r\n        \r\n        <Divider />\r\n        \r\n        <UserSection>\r\n          <UserAvatar>관</UserAvatar>\r\n          <UserName className=\"user-name\">관리자</UserName>\r\n        </UserSection>\r\n        \r\n        <IconButton title=\"설정\">\r\n          <Settings size={18} />\r\n        </IconButton>\r\n        \r\n        <IconButton title=\"로그아웃\">\r\n          <LogOut size={18} />\r\n        </IconButton>\r\n      </HeaderRight>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;","// client/src/components/inventory/common/Layout.tsx\r\nimport React, { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Sidebar from './Sidebar';\r\nimport Header from './Header';\r\n\r\nconst LayoutContainer = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  background-color: ${props => props.theme.colors.background};\r\n  overflow: hidden;\r\n`;\r\n\r\nconst MainContent = styled.main<{ sidebarOpen: boolean }>`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: ${props => props.sidebarOpen ? '240px' : '60px'};\r\n  transition: margin-left 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n  background: ${props => props.theme.colors.background};\r\n  position: relative;\r\n  min-width: 0; /* 플렉스 아이템이 너무 작아지는 것을 방지 */\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  background: ${props => props.theme.colors.surface};\r\n  border-bottom: 1px solid ${props => props.theme.colors.border};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.02);\r\n  z-index: 100;\r\n  position: sticky;\r\n  top: 0;\r\n`;\r\n\r\nconst ContentArea = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  \r\n  /* 더 부드러운 스크롤바 */\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background: transparent;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background: ${props => props.theme.colors.border};\r\n    border-radius: 3px;\r\n    \r\n    &:hover {\r\n      background: ${props => props.theme.colors.gray};\r\n    }\r\n  }\r\n\r\n  /* 컨텐츠 애니메이션 */\r\n  > * {\r\n    animation: fadeInUp 0.4s ease-out;\r\n  }\r\n  \r\n  @keyframes fadeInUp {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(20px);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Layout: React.FC = () => {\r\n  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarOpen(!sidebarOpen);\r\n  };\r\n\r\n  return (\r\n    <LayoutContainer>\r\n      <Sidebar \r\n        isOpen={sidebarOpen} \r\n        onToggle={toggleSidebar} \r\n      />\r\n      \r\n      <MainContent sidebarOpen={sidebarOpen}>\r\n        <HeaderContainer>\r\n          <Header \r\n            onToggleSidebar={toggleSidebar}\r\n            sidebarCollapsed={!sidebarOpen}\r\n          />\r\n        </HeaderContainer>\r\n        \r\n        <ContentArea>\r\n          <Outlet />\r\n        </ContentArea>\r\n      </MainContent>\r\n    </LayoutContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;","// client/src/components/common/Card.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface CardProps {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  onClick?: () => void;\r\n  $hover?: boolean; // $ prefix for transient props\r\n  padding?: string;\r\n  margin?: string;\r\n  background?: string;\r\n  border?: string;\r\n  borderRadius?: string;\r\n  boxShadow?: string;\r\n}\r\n\r\nconst StyledCard = styled.div<{\r\n  $hover?: boolean;\r\n  $padding?: string;\r\n  $margin?: string;\r\n  $background?: string;\r\n  $border?: string;\r\n  $borderRadius?: string;\r\n  $boxShadow?: string;\r\n}>`\r\n  background: ${props => props.$background || '#ffffff'};\r\n  border: ${props => props.$border || '1px solid #e1e5e9'};\r\n  border-radius: ${props => props.$borderRadius || '8px'};\r\n  box-shadow: ${props => props.$boxShadow || '0 2px 4px rgba(0, 0, 0, 0.1)'};\r\n  padding: ${props => props.$padding || '1.5rem'};\r\n  margin: ${props => props.$margin || '0'};\r\n  transition: all 0.2s ease-in-out;\r\n  cursor: ${props => props.$hover ? 'pointer' : 'default'};\r\n\r\n  ${props => props.$hover && `\r\n    &:hover {\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n      transform: translateY(-2px);\r\n      border-color: #c3d4e6;\r\n    }\r\n  `}\r\n\r\n  @media (max-width: 768px) {\r\n    padding: ${props => props.$padding || '1rem'};\r\n    margin: ${props => props.$margin || '0 0 1rem 0'};\r\n  }\r\n`;\r\n\r\nexport const Card: React.FC<CardProps> = ({\r\n  children,\r\n  className,\r\n  onClick,\r\n  $hover = false,\r\n  padding,\r\n  margin,\r\n  background,\r\n  border,\r\n  borderRadius,\r\n  boxShadow,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledCard\r\n      className={className}\r\n      onClick={onClick}\r\n      $hover={$hover}\r\n      $padding={padding}\r\n      $margin={margin}\r\n      $background={background}\r\n      $border={border}\r\n      $borderRadius={borderRadius}\r\n      $boxShadow={boxShadow}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nexport default Card;","// client/src/components/common/Button.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n  children: React.ReactNode;\r\n  variant?: 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'outline';\r\n  size?: 'sm' | 'md' | 'lg';\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n  onClick?: () => void;\r\n  type?: 'button' | 'submit' | 'reset';\r\n  className?: string;\r\n  title?: string;\r\n}\r\n\r\ninterface StyledButtonProps {\r\n  $variant: string;\r\n  $size: string;\r\n  $disabled: boolean;\r\n  $loading: boolean;\r\n}\r\n\r\nconst ButtonContainer = styled.button<StyledButtonProps>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: ${props => props.theme.spacing.sm};\r\n  border: none;\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  white-space: nowrap;\r\n  position: relative;\r\n  \r\n  /* 크기별 스타일 */\r\n  ${props => {\r\n    switch (props.$size) {\r\n      case 'sm':\r\n        return `\r\n          padding: 6px 12px;\r\n          font-size: 0.875rem;\r\n          min-height: 32px;\r\n        `;\r\n      case 'lg':\r\n        return `\r\n          padding: 12px 24px;\r\n          font-size: 1.125rem;\r\n          min-height: 48px;\r\n        `;\r\n      default:\r\n        return `\r\n          padding: 8px 16px;\r\n          font-size: 1rem;\r\n          min-height: 40px;\r\n        `;\r\n    }\r\n  }}\r\n  \r\n  /* 변형별 스타일 */\r\n  ${props => {\r\n    const { colors } = props.theme;\r\n    switch (props.$variant) {\r\n      case 'secondary':\r\n        return `\r\n          background: ${colors.gray};\r\n          color: white;\r\n          &:hover:not(:disabled) {\r\n            background: ${colors.gray}dd;\r\n            transform: translateY(-1px);\r\n          }\r\n        `;\r\n      case 'success':\r\n        return `\r\n          background: ${colors.success};\r\n          color: white;\r\n          &:hover:not(:disabled) {\r\n            background: ${colors.success}dd;\r\n            transform: translateY(-1px);\r\n          }\r\n        `;\r\n      case 'warning':\r\n        return `\r\n          background: ${colors.warning};\r\n          color: white;\r\n          &:hover:not(:disabled) {\r\n            background: ${colors.warning}dd;\r\n            transform: translateY(-1px);\r\n          }\r\n        `;\r\n      case 'danger':\r\n        return `\r\n          background: ${colors.error};\r\n          color: white;\r\n          &:hover:not(:disabled) {\r\n            background: ${colors.error}dd;\r\n            transform: translateY(-1px);\r\n          }\r\n        `;\r\n      case 'outline':\r\n        return `\r\n          background: transparent;\r\n          color: ${colors.primary};\r\n          border: 1px solid ${colors.primary};\r\n          &:hover:not(:disabled) {\r\n            background: ${colors.primary}10;\r\n            transform: translateY(-1px);\r\n          }\r\n        `;\r\n      default:\r\n        return `\r\n          background: linear-gradient(135deg, ${colors.primary}, ${colors.secondary});\r\n          color: white;\r\n          &:hover:not(:disabled) {\r\n            transform: translateY(-1px);\r\n            box-shadow: ${props.theme.shadows.md};\r\n          }\r\n        `;\r\n    }\r\n  }}\r\n  \r\n  /* 비활성화 상태 */\r\n  ${props => props.$disabled && `\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n    &:hover {\r\n      transform: none;\r\n      box-shadow: none;\r\n    }\r\n  `}\r\n  \r\n  /* 로딩 상태 */\r\n  ${props => props.$loading && `\r\n    cursor: wait;\r\n    &:hover {\r\n      transform: none;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst LoadingSpinner = styled.div`\r\n  width: 16px;\r\n  height: 16px;\r\n  border: 2px solid rgba(255, 255, 255, 0.3);\r\n  border-top: 2px solid white;\r\n  border-radius: 50%;\r\n  animation: spin 0.8s linear infinite;\r\n  \r\n  @keyframes spin {\r\n    from { transform: rotate(0deg); }\r\n    to { transform: rotate(360deg); }\r\n  }\r\n`;\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  children,\r\n  variant = 'primary',\r\n  size = 'md',\r\n  disabled = false,\r\n  loading = false,\r\n  onClick,\r\n  type = 'button',\r\n  className,\r\n  title,\r\n}) => {\r\n  return (\r\n    <ButtonContainer\r\n      $variant={variant}\r\n      $size={size}\r\n      $disabled={disabled || loading}\r\n      $loading={loading}\r\n      onClick={onClick}\r\n      type={type}\r\n      className={className}\r\n      disabled={disabled || loading}\r\n      title={title}\r\n    >\r\n      {loading && <LoadingSpinner />}\r\n      {children}\r\n    </ButtonContainer>\r\n  );\r\n};\r\n\r\nexport default Button;","// client/src/components/common/LoadingSpinner.tsx\r\nimport React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst spin = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst SpinnerContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: ${props => props.theme.spacing.xl};\r\n  min-height: 200px;\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid ${props => props.theme.colors.border};\r\n  border-top: 4px solid ${props => props.theme.colors.primary};\r\n  border-radius: 50%;\r\n  animation: ${spin} 1s linear infinite;\r\n`;\r\n\r\nconst LoadingText = styled.div`\r\n  margin-left: ${props => props.theme.spacing.md};\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  font-size: 0.9rem;\r\n`;\r\n\r\ninterface LoadingSpinnerProps {\r\n  text?: string;\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ text = '로딩 중...' }) => {\r\n  return (\r\n    <SpinnerContainer>\r\n      <Spinner />\r\n      {text && <LoadingText>{text}</LoadingText>}\r\n    </SpinnerContainer>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n\r\n","// client/src/components/dashboard/DashboardPage.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { \r\n  Package, \r\n  ShoppingCart, \r\n  CheckCircle, \r\n  Clock, \r\n  DollarSign,\r\n  AlertTriangle \r\n} from 'lucide-react';\r\nimport Card from '../common/Card';\r\nimport Button from '../common/Button';\r\nimport LoadingSpinner from '../common/LoadingSpinner';\r\nimport { dashboardApi } from '../../services/api';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst PageTitle = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst PageSubtitle = styled.p`\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  margin-bottom: 30px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst StatsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StatCard = styled(Card)<{ color: string }>`\r\n  background: linear-gradient(135deg, ${props => props.color}15 0%, ${props => props.color}05 100%);\r\n  border-left: 4px solid ${props => props.color};\r\n  \r\n  .stat-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .stat-icon {\r\n    padding: 12px;\r\n    border-radius: 50%;\r\n    background: ${props => props.color}20;\r\n    color: ${props => props.color};\r\n  }\r\n  \r\n  .stat-value {\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n    color: ${props => props.color};\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .stat-label {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .stat-change {\r\n    font-size: 0.8rem;\r\n    margin-top: 8px;\r\n    \r\n    &.positive {\r\n      color: ${props => props.theme.colors.success};\r\n    }\r\n    \r\n    &.negative {\r\n      color: ${props => props.theme.colors.error};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContentGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 30px;\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.tablet}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst RecentActivity = styled(Card)`\r\n  .activity-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 20px;\r\n    \r\n    h3 {\r\n      margin: 0;\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n  \r\n  .activity-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n  }\r\n  \r\n  .activity-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    padding: 12px;\r\n    border-radius: 8px;\r\n    transition: background 0.2s;\r\n    \r\n    &:hover {\r\n      background: ${props => props.theme.colors.background};\r\n    }\r\n  }\r\n  \r\n  .activity-icon {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .activity-content {\r\n    flex: 1;\r\n    \r\n    .activity-title {\r\n      font-weight: 500;\r\n      margin-bottom: 4px;\r\n    }\r\n    \r\n    .activity-time {\r\n      font-size: 0.8rem;\r\n      color: ${props => props.theme.colors.textSecondary};\r\n    }\r\n  }\r\n`;\r\n\r\nconst QuickActions = styled(Card)`\r\n  h3 {\r\n    margin-bottom: 20px;\r\n    font-size: 1.2rem;\r\n  }\r\n  \r\n  .actions-grid {\r\n    display: grid;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .action-item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    padding: 16px;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n    text-decoration: none;\r\n    color: inherit;\r\n    \r\n    &:hover {\r\n      border-color: ${props => props.theme.colors.primary};\r\n      background: ${props => props.theme.colors.primary}05;\r\n      transform: translateY(-1px);\r\n    }\r\n  }\r\n  \r\n  .action-icon {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: ${props => props.theme.colors.primary}15;\r\n    color: ${props => props.theme.colors.primary};\r\n  }\r\n  \r\n  .action-content {\r\n    .action-title {\r\n      font-weight: 500;\r\n      margin-bottom: 4px;\r\n    }\r\n    \r\n    .action-desc {\r\n      font-size: 0.85rem;\r\n      color: ${props => props.theme.colors.textSecondary};\r\n    }\r\n  }\r\n`;\r\n\r\nconst DashboardPage: React.FC = () => {\r\n  const { data: stats, isLoading, error } = useQuery({\r\n    queryKey: ['dashboard-stats'],\r\n    queryFn: dashboardApi.getStats,\r\n    refetchInterval: 5 * 60 * 1000, // 5분마다 새로고침\r\n    retry: 3,\r\n    staleTime: 1000 * 60 * 5, // 5분\r\n  });\r\n\r\n  console.log('Dashboard data:', { stats, isLoading, error }); // 디버깅용\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner text=\"대시보드 데이터를 불러오는 중...\" />;\r\n  }\r\n\r\n  if (error) {\r\n    console.error('Dashboard error:', error);\r\n    return (\r\n      <Container>\r\n        <Card>\r\n          <div style={{ textAlign: 'center', padding: '40px' }}>\r\n            <AlertTriangle size={48} style={{ color: '#EF4444', marginBottom: '16px' }} />\r\n            <h3>데이터를 불러올 수 없습니다</h3>\r\n            <p style={{ marginBottom: '20px' }}>대시보드 데이터를 불러오는 중 오류가 발생했습니다.</p>\r\n            <Button onClick={() => window.location.reload()}>\r\n              새로고침\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // 백엔드에서 받은 데이터 또는 기본값 사용\r\n  const dashboardStats = stats?.data || {};\r\n\r\n  return (\r\n    <Container>\r\n      <PageTitle>대시보드</PageTitle>\r\n      <PageSubtitle>시스템 현황을 한눈에 확인하세요.</PageSubtitle>\r\n\r\n      <StatsGrid>\r\n        <StatCard color=\"#3B82F6\">\r\n          <div className=\"stat-header\">\r\n            <div>\r\n              <div className=\"stat-value\">{dashboardStats?.totalItems || 0}</div>\r\n              <div className=\"stat-label\">전체 품목</div>\r\n            </div>\r\n            <div className=\"stat-icon\">\r\n              <Package size={24} />\r\n            </div>\r\n          </div>\r\n          <div className=\"stat-change positive\">\r\n            이번 달 +{dashboardStats?.newItemsThisMonth || 0}\r\n          </div>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#F59E0B\">\r\n          <div className=\"stat-header\">\r\n            <div>\r\n              <div className=\"stat-value\">{dashboardStats?.lowStockItems || 0}</div>\r\n              <div className=\"stat-label\">재고 부족</div>\r\n            </div>\r\n            <div className=\"stat-icon\">\r\n              <AlertTriangle size={24} />\r\n            </div>\r\n          </div>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#10B981\">\r\n          <div className=\"stat-header\">\r\n            <div>\r\n              <div className=\"stat-value\">{dashboardStats?.recentPurchases || 0}</div>\r\n              <div className=\"stat-label\">최근 구매</div>\r\n            </div>\r\n            <div className=\"stat-icon\">\r\n              <ShoppingCart size={24} />\r\n            </div>\r\n          </div>\r\n        </StatCard>\r\n\r\n        <StatCard color=\"#8B5CF6\">\r\n          <div className=\"stat-header\">\r\n            <div>\r\n              <div className=\"stat-value\">₩{(dashboardStats?.totalValue || 0).toLocaleString()}</div>\r\n              <div className=\"stat-label\">총 재고 가치</div>\r\n            </div>\r\n            <div className=\"stat-icon\">\r\n              <DollarSign size={24} />\r\n            </div>\r\n          </div>\r\n        </StatCard>\r\n      </StatsGrid>\r\n\r\n      <ContentGrid>\r\n        <RecentActivity>\r\n          <div className=\"activity-header\">\r\n            <h3>최근 활동</h3>\r\n            <span style={{ fontSize: '0.9rem', color: '#666' }}>최근 24시간</span>\r\n          </div>\r\n          \r\n          <div className=\"activity-list\">\r\n            {dashboardStats?.recentActivities?.length > 0 ? (\r\n              dashboardStats.recentActivities.slice(0, 5).map((activity: any, index: number) => (\r\n                <div key={activity.id || index} className=\"activity-item\">\r\n                  <div \r\n                    className=\"activity-icon\"\r\n                    style={{ background: '#10B98120', color: '#10B981' }}\r\n                  >\r\n                    <Package size={20} />\r\n                  </div>\r\n                  <div className=\"activity-content\">\r\n                    <div className=\"activity-title\">\r\n                      {activity.description || '활동 없음'}\r\n                    </div>\r\n                    <div className=\"activity-time\">\r\n                      {activity.createdAt ? new Date(activity.createdAt).toLocaleString('ko-KR') : '시간 정보 없음'}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div style={{ textAlign: 'center', color: '#666', padding: '20px' }}>\r\n                최근 활동이 없습니다.\r\n              </div>\r\n            )}\r\n          </div>\r\n        </RecentActivity>\r\n\r\n        <QuickActions>\r\n          <h3>빠른 작업</h3>\r\n          <div className=\"actions-grid\">\r\n            <a href=\"/inventory\" className=\"action-item\">\r\n              <div className=\"action-icon\">\r\n                <Package size={20} />\r\n              </div>\r\n              <div className=\"action-content\">\r\n                <div className=\"action-title\">재고 관리</div>\r\n                <div className=\"action-desc\">품목 현황 확인 및 관리</div>\r\n              </div>\r\n            </a>\r\n\r\n            <a href=\"/upload\" className=\"action-item\">\r\n              <div className=\"action-icon\">\r\n                <ShoppingCart size={20} />\r\n              </div>\r\n              <div className=\"action-content\">\r\n                <div className=\"action-title\">파일 업로드</div>\r\n                <div className=\"action-desc\">Excel로 일괄 등록</div>\r\n              </div>\r\n            </a>\r\n\r\n            <a href=\"/statistics\" className=\"action-item\">\r\n              <div className=\"action-icon\">\r\n                <CheckCircle size={20} />\r\n              </div>\r\n              <div className=\"action-content\">\r\n                <div className=\"action-title\">통계 분석</div>\r\n                <div className=\"action-desc\">현황 분석 및 리포트</div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </QuickActions>\r\n      </ContentGrid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;","// client/src/components/common/Table.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ChevronUp, ChevronDown } from 'lucide-react';\r\nimport { TableColumn } from '../../types';\r\n\r\ninterface TableProps<T> {\r\n  columns: TableColumn<T>[];\r\n  data: T[];\r\n  loading?: boolean;\r\n  emptyMessage?: string;\r\n  selectable?: boolean;\r\n  selectedItems?: any[];\r\n  onSelectItems?: (items: any[]) => void;\r\n  onSort?: (field: string, direction: 'asc' | 'desc') => void;\r\n  sortField?: string;\r\n  sortDirection?: 'asc' | 'desc';\r\n}\r\n\r\nconst TableContainer = styled.div`\r\n  overflow-x: auto;\r\n  border-radius: ${props => props.theme.borderRadius.lg};\r\n  border: 1px solid ${props => props.theme.colors.border};\r\n  background: ${props => props.theme.colors.surface};\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst TableHeader = styled.thead`\r\n  background: ${props => props.theme.colors.background};\r\n  border-bottom: 2px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst TableHeaderCell = styled.th<{ sortable?: boolean; width?: string; align?: string }>`\r\n  padding: ${props => props.theme.spacing.md};\r\n  text-align: ${props => props.align || 'left'};\r\n  font-weight: 600;\r\n  color: ${props => props.theme.colors.text};\r\n  white-space: nowrap;\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n  background: ${props => props.theme.colors.background};\r\n  \r\n  ${props => props.width && `width: ${props.width};`}\r\n  \r\n  ${props => props.sortable && `\r\n    cursor: pointer;\r\n    user-select: none;\r\n    \r\n    &:hover {\r\n      background: ${props.theme.colors.border};\r\n    }\r\n  `}\r\n`;\r\n\r\nconst SortButton = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${props => props.theme.spacing.xs};\r\n`;\r\n\r\nconst SortIcon = styled.div<{ active?: boolean; direction?: string }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${props => props.active ? 1 : 0.3};\r\n  \r\n  svg {\r\n    width: 12px;\r\n    height: 12px;\r\n  }\r\n`;\r\n\r\nconst TableBody = styled.tbody``;\r\n\r\nconst TableRow = styled.tr<{ selected?: boolean }>`\r\n  transition: background-color 0.15s ease;\r\n  \r\n  &:hover {\r\n    background: ${props => props.theme.colors.background};\r\n  }\r\n  \r\n  ${props => props.selected && `\r\n    background: ${props.theme.colors.primary}10;\r\n  `}\r\n`;\r\n\r\nconst TableCell = styled.td<{ align?: string }>`\r\n  padding: ${props => props.theme.spacing.md};\r\n  text-align: ${props => props.align || 'left'};\r\n  border-bottom: 1px solid ${props => props.theme.colors.border};\r\n  vertical-align: top;\r\n  \r\n  &:first-child {\r\n    border-left: none;\r\n  }\r\n  \r\n  &:last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  width: 16px;\r\n  height: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst EmptyState = styled.div`\r\n  text-align: center;\r\n  padding: ${props => props.theme.spacing.xl};\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  \r\n  .empty-icon {\r\n    font-size: 3rem;\r\n    margin-bottom: ${props => props.theme.spacing.md};\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n\r\nconst LoadingState = styled.div`\r\n  text-align: center;\r\n  padding: ${props => props.theme.spacing.xl};\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  \r\n  .loading-spinner {\r\n    display: inline-block;\r\n    width: 24px;\r\n    height: 24px;\r\n    border: 3px solid ${props => props.theme.colors.border};\r\n    border-top: 3px solid ${props => props.theme.colors.primary};\r\n    border-radius: 50%;\r\n    animation: spin 1s linear infinite;\r\n    margin-bottom: ${props => props.theme.spacing.md};\r\n  }\r\n  \r\n  @keyframes spin {\r\n    from { transform: rotate(0deg); }\r\n    to { transform: rotate(360deg); }\r\n  }\r\n`;\r\n\r\nfunction Table<T extends Record<string, any>>({\r\n  columns,\r\n  data,\r\n  loading = false,\r\n  emptyMessage = '데이터가 없습니다.',\r\n  selectable = false,\r\n  selectedItems = [],\r\n  onSelectItems,\r\n  onSort,\r\n  sortField,\r\n  sortDirection\r\n}: TableProps<T>) {\r\n  const handleSelectAll = (checked: boolean) => {\r\n    if (onSelectItems) {\r\n      onSelectItems(checked ? data : []);\r\n    }\r\n  };\r\n\r\n  const handleSelectItem = (item: T, checked: boolean) => {\r\n    if (onSelectItems) {\r\n      if (checked) {\r\n        onSelectItems([...selectedItems, item]);\r\n      } else {\r\n        onSelectItems(selectedItems.filter(selected => selected !== item));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSort = (field: string) => {\r\n    if (!onSort) return;\r\n    \r\n    let direction: 'asc' | 'desc' = 'asc';\r\n    if (sortField === field && sortDirection === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    \r\n    onSort(field, direction);\r\n  };\r\n\r\n  const isAllSelected = data.length > 0 && selectedItems.length === data.length;\r\n  const isIndeterminate = selectedItems.length > 0 && selectedItems.length < data.length;\r\n\r\n  return (\r\n    <TableContainer>\r\n      <StyledTable>\r\n        <TableHeader>\r\n          <tr>\r\n            {selectable && (\r\n              <TableHeaderCell width=\"40px\">\r\n                <Checkbox\r\n                  type=\"checkbox\"\r\n                  checked={isAllSelected}\r\n                  ref={input => {\r\n                    if (input) input.indeterminate = isIndeterminate;\r\n                  }}\r\n                  onChange={(e) => handleSelectAll(e.target.checked)}\r\n                />\r\n              </TableHeaderCell>\r\n            )}\r\n            {columns.map((column) => (\r\n              <TableHeaderCell\r\n                key={String(column.key)}\r\n                width={column.width}\r\n                align={column.align}\r\n                sortable={column.sortable}\r\n                onClick={() => column.sortable && handleSort(String(column.key))}\r\n              >\r\n                {column.sortable ? (\r\n                  <SortButton>\r\n                    {column.label}\r\n                    <SortIcon \r\n                      active={sortField === column.key}\r\n                      direction={sortDirection}\r\n                    >\r\n                      <ChevronUp />\r\n                      <ChevronDown />\r\n                    </SortIcon>\r\n                  </SortButton>\r\n                ) : (\r\n                  column.label\r\n                )}\r\n              </TableHeaderCell>\r\n            ))}\r\n          </tr>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {loading ? (\r\n            <tr>\r\n              <TableCell colSpan={columns.length + (selectable ? 1 : 0)}>\r\n                <LoadingState>\r\n                  <div className=\"loading-spinner\" />\r\n                  <div>로딩 중...</div>\r\n                </LoadingState>\r\n              </TableCell>\r\n            </tr>\r\n          ) : data.length === 0 ? (\r\n            <tr>\r\n              <TableCell colSpan={columns.length + (selectable ? 1 : 0)}>\r\n                <EmptyState>\r\n                  <div className=\"empty-icon\">📋</div>\r\n                  <div>{emptyMessage}</div>\r\n                </EmptyState>\r\n              </TableCell>\r\n            </tr>\r\n          ) : (\r\n            data.map((item, index) => {\r\n              const isSelected = selectedItems.includes(item);\r\n              \r\n              return (\r\n                <TableRow key={index} selected={isSelected}>\r\n                  {selectable && (\r\n                    <TableCell>\r\n                      <Checkbox\r\n                        type=\"checkbox\"\r\n                        checked={isSelected}\r\n                        onChange={(e) => handleSelectItem(item, e.target.checked)}\r\n                      />\r\n                    </TableCell>\r\n                  )}\r\n                  {columns.map((column) => {\r\n                    const value = item[column.key];\r\n                    const displayValue = column.render \r\n                      ? column.render(value, item) \r\n                      : value;\r\n                    \r\n                    return (\r\n                      <TableCell key={String(column.key)} align={column.align}>\r\n                        {displayValue}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })\r\n          )}\r\n        </TableBody>\r\n      </StyledTable>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n\r\n\r\n\r\n","// client/src/components/common/Pagination.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\n\r\ninterface PaginationProps {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  onPageChange: (page: number) => void;\r\n  className?: string;\r\n}\r\n\r\nconst PaginationContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: ${props => props.theme.spacing.xs};\r\n  margin-top: ${props => props.theme.spacing.lg};\r\n`;\r\n\r\nconst PageButton = styled.button<{ active?: boolean; disabled?: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 1px solid ${props => props.theme.colors.border};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  background: ${props => props.active ? props.theme.colors.primary : props.theme.colors.surface};\r\n  color: ${props => props.active ? 'white' : props.theme.colors.text};\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n\r\n  &:hover:not(:disabled) {\r\n    background: ${props => props.active ? props.theme.colors.primary : props.theme.colors.background};\r\n    border-color: ${props => props.theme.colors.primary};\r\n  }\r\n\r\n  &:disabled {\r\n    background: ${props => props.theme.colors.background};\r\n    color: ${props => props.theme.colors.textSecondary};\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  svg {\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n`;\r\n\r\nconst PageInfo = styled.span`\r\n  margin: 0 ${props => props.theme.spacing.md};\r\n  font-size: 0.9rem;\r\n  color: ${props => props.theme.colors.textSecondary};\r\n`;\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({\r\n  currentPage,\r\n  totalPages,\r\n  onPageChange,\r\n  className\r\n}) => {\r\n  const getVisiblePages = () => {\r\n    const delta = 2;\r\n    const range: number[] = [];\r\n    const rangeWithDots: (number | string)[] = [];\r\n\r\n    for (let i = Math.max(2, currentPage - delta); i <= Math.min(totalPages - 1, currentPage + delta); i++) {\r\n      range.push(i);\r\n    }\r\n\r\n    if (currentPage - delta > 2) {\r\n      rangeWithDots.push(1, '...');\r\n    } else {\r\n      rangeWithDots.push(1);\r\n    }\r\n\r\n    rangeWithDots.push(...range);\r\n\r\n    if (currentPage + delta < totalPages - 1) {\r\n      rangeWithDots.push('...', totalPages);\r\n    } else if (totalPages > 1) {\r\n      rangeWithDots.push(totalPages);\r\n    }\r\n\r\n    return rangeWithDots;\r\n  };\r\n\r\n  if (totalPages <= 1) {\r\n    return null;\r\n  }\r\n\r\n  const visiblePages = getVisiblePages();\r\n\r\n  return (\r\n    <PaginationContainer className={className}>\r\n      <PageButton\r\n        disabled={currentPage === 1}\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n      >\r\n        <ChevronLeft />\r\n      </PageButton>\r\n\r\n      {visiblePages.map((page, index) => (\r\n        <React.Fragment key={index}>\r\n          {page === '...' ? (\r\n            <PageInfo>...</PageInfo>\r\n          ) : (\r\n            <PageButton\r\n              active={page === currentPage}\r\n              onClick={() => onPageChange(page as number)}\r\n            >\r\n              {page}\r\n            </PageButton>\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n\r\n      <PageButton\r\n        disabled={currentPage === totalPages}\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n      >\r\n        <ChevronRight />\r\n      </PageButton>\r\n    </PaginationContainer>\r\n  );\r\n};\r\n\r\nexport default Pagination;","// client/src/components/common/Modal.tsx\r\nimport React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { X } from 'lucide-react';\r\nimport { ModalProps } from '../../types';\r\n\r\nconst ModalOverlay = styled.div<{ isOpen: boolean }>`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: ${props => props.isOpen ? 'flex' : 'none'};\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  padding: ${props => props.theme.spacing.lg};\r\n  animation: fadeIn 0.2s ease-out;\r\n  \r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModalContainer = styled.div<{ size: string }>`\r\n  background: ${props => props.theme.colors.surface};\r\n  border-radius: ${props => props.theme.borderRadius.lg};\r\n  box-shadow: ${props => props.theme.shadows.lg};\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  animation: slideIn 0.3s ease-out;\r\n  position: relative;\r\n  \r\n  ${props => {\r\n    switch (props.size) {\r\n      case 'sm':\r\n        return 'width: 100%; max-width: 400px;';\r\n      case 'lg':\r\n        return 'width: 100%; max-width: 800px;';\r\n      case 'xl':\r\n        return 'width: 100%; max-width: 1200px;';\r\n      default:\r\n        return 'width: 100%; max-width: 600px;';\r\n    }\r\n  }}\r\n  \r\n  @keyframes slideIn {\r\n    from {\r\n      transform: scale(0.95) translateY(-10px);\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      transform: scale(1) translateY(0);\r\n      opacity: 1;\r\n    }\r\n  }\r\n  \r\n  @media (max-width: ${props => props.theme.breakpoints.mobile}) {\r\n    margin: ${props => props.theme.spacing.md};\r\n    max-width: calc(100vw - ${props => props.theme.spacing.lg});\r\n  }\r\n`;\r\n\r\nconst ModalHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: ${props => props.theme.spacing.lg};\r\n  border-bottom: 1px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst ModalTitle = styled.h2`\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: ${props => props.theme.colors.text};\r\n  margin: 0;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 32px;\r\n  height: 32px;\r\n  border: none;\r\n  background: none;\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: ${props => props.theme.colors.background};\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  padding: ${props => props.theme.spacing.lg};\r\n`;\r\n\r\nconst Modal: React.FC<ModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  title,\r\n  children,\r\n  size = 'md',\r\n  closable = true\r\n}) => {\r\n  // ESC 키로 모달 닫기\r\n  useEffect(() => {\r\n    const handleEscKey = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape' && closable) {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', handleEscKey);\r\n      document.body.style.overflow = 'hidden'; // 배경 스크롤 방지\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscKey);\r\n      document.body.style.overflow = 'unset';\r\n    };\r\n  }, [isOpen, onClose, closable]);\r\n\r\n  // 오버레이 클릭으로 모달 닫기\r\n  const handleOverlayClick = (event: React.MouseEvent) => {\r\n    if (event.target === event.currentTarget && closable) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <ModalOverlay isOpen={isOpen} onClick={handleOverlayClick}>\r\n      <ModalContainer size={size}>\r\n        <ModalHeader>\r\n          <ModalTitle>{title}</ModalTitle>\r\n          {closable && (\r\n            <CloseButton onClick={onClose}>\r\n              <X size={20} />\r\n            </CloseButton>\r\n          )}\r\n        </ModalHeader>\r\n        <ModalContent>\r\n          {children}\r\n        </ModalContent>\r\n      </ModalContainer>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","// client/src/components/inventory/InventoryFilters.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Search, Filter, X } from 'lucide-react';\r\nimport Button from '../common/Button';\r\nimport { SearchFilters } from '../../types';\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: 16px;\r\n  margin-bottom: 20px;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst SearchGroup = styled.div`\r\n  position: relative;\r\n  flex: 1;\r\n  min-width: 200px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 100%;\r\n  padding: 8px 12px 8px 40px;\r\n  border: 1px solid ${props => props.theme.colors.border};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  font-size: 14px;\r\n  background: ${props => props.theme.colors.surface};\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.theme.colors.primary};\r\n    box-shadow: 0 0 0 3px ${props => props.theme.colors.primary}20;\r\n  }\r\n`;\r\n\r\nconst SearchIcon = styled(Search)`\r\n  position: absolute;\r\n  left: 12px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 16px;\r\n  height: 16px;\r\n  color: ${props => props.theme.colors.textSecondary};\r\n`;\r\n\r\nconst FilterSelect = styled.select`\r\n  padding: 8px 12px;\r\n  border: 1px solid ${props => props.theme.colors.border};\r\n  border-radius: ${props => props.theme.borderRadius.md};\r\n  font-size: 14px;\r\n  background: ${props => props.theme.colors.surface};\r\n  cursor: pointer;\r\n  min-width: 120px;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.theme.colors.primary};\r\n    box-shadow: 0 0 0 3px ${props => props.theme.colors.primary}20;\r\n  }\r\n`;\r\n\r\nconst FilterButton = styled(Button)`\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst ActiveFilters = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n  flex-wrap: wrap;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst FilterTag = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  padding: 4px 8px;\r\n  background: ${props => props.theme.colors.primary}15;\r\n  color: ${props => props.theme.colors.primary};\r\n  border-radius: ${props => props.theme.borderRadius.sm};\r\n  font-size: 0.85rem;\r\n  \r\n  .remove-filter {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n    \r\n    &:hover {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface InventoryFiltersProps {\r\n  onFilter: (filters: SearchFilters) => void;\r\n}\r\n\r\nconst InventoryFilters: React.FC<InventoryFiltersProps> = ({ onFilter }) => {\r\n  const [filters, setFilters] = useState<SearchFilters>({});\r\n\r\n  const handleFilterChange = (key: keyof SearchFilters, value: string) => {\r\n    const newFilters = { ...filters };\r\n    \r\n    if (value) {\r\n      newFilters[key] = value;\r\n    } else {\r\n      delete newFilters[key];\r\n    }\r\n    \r\n    setFilters(newFilters);\r\n    onFilter(newFilters);\r\n  };\r\n\r\n  const removeFilter = (key: keyof SearchFilters) => {\r\n    const newFilters = { ...filters };\r\n    delete newFilters[key];\r\n    setFilters(newFilters);\r\n    onFilter(newFilters);\r\n  };\r\n\r\n  const clearAllFilters = () => {\r\n    setFilters({});\r\n    onFilter({});\r\n  };\r\n\r\n  const hasActiveFilters = Object.keys(filters).length > 0;\r\n\r\n  const getFilterDisplayName = (key: string, value: string) => {\r\n    const names: Record<string, string> = {\r\n      search: '검색',\r\n      category: '카테고리',\r\n      is_active: '상태',\r\n    };\r\n    \r\n    if (key === 'is_active') {\r\n      return `${names[key]}: ${value === 'true' ? '활성' : '비활성'}`;\r\n    }\r\n    \r\n    return `${names[key] || key}: ${value}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FilterContainer>\r\n        <SearchGroup>\r\n          <SearchIcon />\r\n          <SearchInput\r\n            type=\"text\"\r\n            placeholder=\"품목명, 품목코드로 검색...\"\r\n            value={filters.search || ''}\r\n            onChange={(e) => handleFilterChange('search', e.target.value)}\r\n          />\r\n        </SearchGroup>\r\n\r\n        <FilterSelect\r\n          value={filters.category || ''}\r\n          onChange={(e) => handleFilterChange('category', e.target.value)}\r\n        >\r\n          <option value=\"\">전체 카테고리</option>\r\n          <option value=\"IT 관련 장비\">IT 관련 장비</option>\r\n          <option value=\"사무 용품\">사무 용품</option>\r\n          <option value=\"제조 장비\">제조 장비</option>\r\n          <option value=\"소모품\">소모품</option>\r\n          <option value=\"아이템\">아이템</option>\r\n          <option value=\"기타\">기타</option>\r\n        </FilterSelect>\r\n\r\n        <FilterSelect\r\n          value={filters.is_active || ''}\r\n          onChange={(e) => handleFilterChange('is_active', e.target.value)}\r\n        >\r\n          <option value=\"\">전체 상태</option>\r\n          <option value=\"true\">활성</option>\r\n          <option value=\"false\">비활성</option>\r\n        </FilterSelect>\r\n\r\n        <FilterButton \r\n          variant=\"outline\" \r\n          onClick={clearAllFilters}\r\n          disabled={!hasActiveFilters}\r\n        >\r\n          <Filter size={16} />\r\n          {hasActiveFilters ? '필터 초기화' : '필터'}\r\n        </FilterButton>\r\n      </FilterContainer>\r\n\r\n      {/* 활성 필터 표시 */}\r\n      {hasActiveFilters && (\r\n        <ActiveFilters>\r\n          {Object.entries(filters).map(([key, value]) => (\r\n            <FilterTag key={key}>\r\n              <span>{getFilterDisplayName(key, value as string)}</span>\r\n              <X \r\n                size={12} \r\n                className=\"remove-filter\"\r\n                onClick={() => removeFilter(key as keyof SearchFilters)}\r\n              />\r\n            </FilterTag>\r\n          ))}\r\n        </ActiveFilters>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InventoryFilters;","// client/src/components/common/Input.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #374151;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  padding: 8px 12px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  background: white;\r\n  color: #374151;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #f9fafb;\r\n    color: #9ca3af;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  &::placeholder {\r\n    color: #9ca3af;\r\n  }\r\n`;\r\n\r\ninterface InputProps {\r\n  label?: string;\r\n  type?: string;\r\n  value?: string | number;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  required?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  label,\r\n  type = \"text\",\r\n  value,\r\n  onChange,\r\n  placeholder,\r\n  disabled = false,\r\n  required = false,\r\n  className\r\n}) => {\r\n  return (\r\n    <InputContainer className={className}>\r\n      {label && (\r\n        <Label>\r\n          {label}\r\n          {required && <span style={{ color: '#ef4444' }}>*</span>}\r\n        </Label>\r\n      )}\r\n      <StyledInput\r\n        type={type}\r\n        value={value || ''}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        required={required}\r\n      />\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport default Input;","// client/src/components/common/Select.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SelectContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #374151;\r\n`;\r\n\r\nconst StyledSelect = styled.select`\r\n  padding: 8px 12px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  background: white;\r\n  color: #374151;\r\n  cursor: pointer;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #f9fafb;\r\n    color: #9ca3af;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\ninterface SelectOption {\r\n  value: string | number;\r\n  label: string;\r\n  disabled?: boolean;\r\n}\r\n\r\ninterface SelectProps {\r\n  label?: string;\r\n  value?: string | number;\r\n  options: SelectOption[];\r\n  onChange?: (value: string | number) => void;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  required?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  label,\r\n  value,\r\n  options,\r\n  onChange,\r\n  placeholder = \"선택하세요\",\r\n  disabled = false,\r\n  required = false,\r\n  className\r\n}) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (onChange) {\r\n      onChange(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SelectContainer className={className}>\r\n      {label && (\r\n        <Label>\r\n          {label}\r\n          {required && <span style={{ color: '#ef4444' }}>*</span>}\r\n        </Label>\r\n      )}\r\n      <StyledSelect\r\n        value={value || ''}\r\n        onChange={handleChange}\r\n        disabled={disabled}\r\n        required={required}\r\n      >\r\n        {placeholder && (\r\n          <option value=\"\" disabled>\r\n            {placeholder}\r\n          </option>\r\n        )}\r\n        {options.map((option) => (\r\n          <option \r\n            key={option.value} \r\n            value={option.value}\r\n            disabled={option.disabled}\r\n          >\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </StyledSelect>\r\n    </SelectContainer>\r\n  );\r\n};\r\n\r\nexport default Select;","// client/src/components/inventory/InventoryForm.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from '../common/Card';\r\nimport Button from '../common/Button';\r\nimport Input from '../common/Input';\r\nimport Select from '../common/Select';\r\n\r\nconst FormContainer = styled.div`\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst FormGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 16px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n  justify-content: flex-end;\r\n  margin-top: 30px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid #e5e7eb;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin-bottom: 20px;\r\n  color: #374151;\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst SectionTitle = styled.h4`\r\n  margin: 20px 0 16px 0;\r\n  color: #6b7280;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  border-bottom: 1px solid #e5e7eb;\r\n  padding-bottom: 8px;\r\n`;\r\n\r\ninterface UnifiedInventoryItem {\r\n  id?: number;\r\n  item_code: string;\r\n  item_name: string;\r\n  category?: string;\r\n  brand?: string;\r\n  specifications?: string;\r\n  unit: string;\r\n  unit_price?: number;\r\n  currency: string;\r\n  location?: string;\r\n  warehouse?: string;\r\n  storage_section?: string;\r\n  supplier_name?: string;\r\n  supplier_contact?: string;\r\n  minimum_stock: number;\r\n  maximum_stock?: number;\r\n  reorder_point?: number;\r\n  is_consumable: boolean;\r\n  requires_approval: boolean;\r\n  description?: string;\r\n  notes?: string;\r\n  tags: string[];\r\n}\r\n\r\ninterface InventoryFormProps {\r\n  item?: UnifiedInventoryItem;\r\n  onSubmit: (item: UnifiedInventoryItem) => void;\r\n  onCancel: () => void;\r\n  loading?: boolean;\r\n}\r\n\r\nconst InventoryForm: React.FC<InventoryFormProps> = ({ \r\n  item, \r\n  onSubmit, \r\n  onCancel,\r\n  loading = false\r\n}) => {\r\n  const [formData, setFormData] = useState<UnifiedInventoryItem>({\r\n    item_code: item?.item_code || '',\r\n    item_name: item?.item_name || '',\r\n    category: item?.category || '',\r\n    brand: item?.brand || '',\r\n    specifications: item?.specifications || '',\r\n    unit: item?.unit || '개',\r\n    unit_price: item?.unit_price || undefined,\r\n    currency: item?.currency || 'KRW',\r\n    location: item?.location || '',\r\n    warehouse: item?.warehouse || '',\r\n    storage_section: item?.storage_section || '',\r\n    supplier_name: item?.supplier_name || '',\r\n    supplier_contact: item?.supplier_contact || '',\r\n    minimum_stock: item?.minimum_stock || 0,\r\n    maximum_stock: item?.maximum_stock || undefined,\r\n    reorder_point: item?.reorder_point || undefined,\r\n    is_consumable: item?.is_consumable || false,\r\n    requires_approval: item?.requires_approval || false,\r\n    description: item?.description || '',\r\n    notes: item?.notes || '',\r\n    tags: item?.tags || [],\r\n  });\r\n\r\n  const [tagsInput, setTagsInput] = useState(formData.tags.join(', '));\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // 태그 처리\r\n    const tags = tagsInput\r\n      .split(',')\r\n      .map(tag => tag.trim())\r\n      .filter(tag => tag.length > 0);\r\n\r\n    const submitData = {\r\n      ...formData,\r\n      tags,\r\n      // 빈 문자열을 undefined로 변환\r\n      category: formData.category || undefined,\r\n      brand: formData.brand || undefined,\r\n      specifications: formData.specifications || undefined,\r\n      location: formData.location || undefined,\r\n      warehouse: formData.warehouse || undefined,\r\n      storage_section: formData.storage_section || undefined,\r\n      supplier_name: formData.supplier_name || undefined,\r\n      supplier_contact: formData.supplier_contact || undefined,\r\n      description: formData.description || undefined,\r\n      notes: formData.notes || undefined,\r\n    };\r\n\r\n    onSubmit(submitData);\r\n  };\r\n\r\n  const handleChange = (field: keyof UnifiedInventoryItem, value: any) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const categoryOptions = [\r\n    { value: '', label: '카테고리 선택' },\r\n    { value: 'IT 관련 장비', label: 'IT 관련 장비' },\r\n    { value: '사무 용품', label: '사무 용품' },\r\n    { value: '제조 장비', label: '제조 장비' },\r\n    { value: '소모품', label: '소모품' },\r\n    { value: '아이템', label: '아이템' },\r\n    { value: '기타', label: '기타' },\r\n  ];\r\n\r\n  const unitOptions = [\r\n    { value: '개', label: '개' },\r\n    { value: '박스', label: '박스' },\r\n    { value: 'kg', label: 'kg' },\r\n    { value: 'L', label: 'L' },\r\n    { value: '세트', label: '세트' },\r\n    { value: 'm', label: 'm' },\r\n    { value: '권', label: '권' },\r\n    { value: '대', label: '대' },\r\n  ];\r\n\r\n  const currencyOptions = [\r\n    { value: 'KRW', label: '원 (KRW)' },\r\n    { value: 'USD', label: '달러 (USD)' },\r\n    { value: 'EUR', label: '유로 (EUR)' },\r\n    { value: 'JPY', label: '엔 (JPY)' },\r\n  ];\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Title>{item ? '품목 수정' : '품목 추가'}</Title>\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        {/* 기본 정보 */}\r\n        <SectionTitle>기본 정보</SectionTitle>\r\n        <FormGrid>\r\n          <FormGroup>\r\n            <Input\r\n              label=\"품목 코드 *\"\r\n              type=\"text\"\r\n              value={formData.item_code}\r\n              onChange={(e) => handleChange('item_code', e.target.value)}\r\n              placeholder=\"품목 코드를 입력하세요\"\r\n              required\r\n              disabled={!!item} // 수정 시 품목 코드 변경 불가\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Input\r\n              label=\"품목명 *\"\r\n              type=\"text\"\r\n              value={formData.item_name}\r\n              onChange={(e) => handleChange('item_name', e.target.value)}\r\n              placeholder=\"품목명을 입력하세요\"\r\n              required\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Select\r\n              label=\"카테고리\"\r\n              value={formData.category || ''}\r\n              options={categoryOptions}\r\n              onChange={(value) => handleChange('category', value)}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Input\r\n              label=\"브랜드\"\r\n              type=\"text\"\r\n              value={formData.brand || ''}\r\n              onChange={(e) => handleChange('brand', e.target.value)}\r\n              placeholder=\"브랜드를 입력하세요\"\r\n            />\r\n          </FormGroup>\r\n        </FormGrid>\r\n\r\n        <FormGroup>\r\n          <Input\r\n            label=\"사양/스펙\"\r\n            type=\"textarea\"\r\n            value={formData.specifications || ''}\r\n            onChange={(e) => handleChange('specifications', e.target.value)}\r\n            placeholder=\"제품 사양이나 스펙을 입력하세요\"\r\n            rows={3}\r\n          />\r\n        </FormGroup>\r\n\r\n        {/* 수량 및 가격 정보 */}\r\n        <SectionTitle>수량 및 가격 정보</SectionTitle>\r\n        <FormGrid>\r\n          <FormGroup>\r\n            <Select\r\n              label=\"단위 *\"\r\n              value={formData.unit}\r\n              options={unitOptions}\r\n              onChange={(value) => handleChange('unit', value)}\r\n              required\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Input\r\n              label=\"단가\"\r\n              type=\"number\"\r\n              value={formData.unit_price || ''}\r\n              onChange={(e) => handleChange('unit_price', e.target.value ? parseFloat(e.target.value) : undefined)}\r\n              placeholder=\"단가를 입력하세요\"\r\n              min=\"0\"\r\n              step=\"0.01\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Select\r\n              label=\"통화\"\r\n              value={formData.currency}\r\n              options={currencyOptions}\r\n              onChange={(value) => handleChange('currency', value)}\r\n            />\r\n          </FormGroup>\r\n        </FormGrid>\r\n\r\n        {/* 재고 관리 설정 */}\r\n        <SectionTitle>재고 관리 설정</SectionTitle>\r\n        <FormGrid>\r\n          <FormGroup>\r\n            <Input\r\n              label=\"최소 재고 *\"\r\n              type=\"number\"\r\n              value={formData.minimum_stock}\r\n              onChange={(e) => handleChange('minimum_stock', parseInt(e.target.value) || 0)}\r\n              placeholder=\"최소 재고 수량\"\r\n              required\r\n              min=\"0\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Input\r\n              label=\"최대 재고\"\r\n              type=\"number\"\r\n              value={formData.maximum_stock || ''}\r\n              onChange={(e) => handleChange('maximum_stock', e.target.value ? parseInt(e.target.value) : undefined)}\r\n              placeholder=\"최대 재고 수량\"\r\n              min=\"0\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Input\r\n              label=\"재주문 포인트\"\r\n              type=\"number\"\r\n              value={formData.reorder_point || ''}\r\n              onChange={(e) => handleChange('reorder_point', e.target.value ? parseInt(e.target.value) : undefined)}\r\n              placeholder=\"재주문 시점\"\r\n              min=\"0\"\r\n            />\r\n          </FormGroup>\r\n        </FormGrid>\r\n\r\n        {/* 위치 정보 */}\r\n        <SectionTitle>위치 정보</SectionTitle>\r\n        <FormGrid>\r\n          <FormGroup>\r\n            <Input\r\n              label=\"창고\"\r\n              type=\"text\"\r\n              value={formData.warehouse || ''}\r\n              onChange={(e) => handleChange('warehouse', e.target.value)}\r\n              placeholder=\"창고명을 입력하세요\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Input\r\n              label=\"보관 위치\"\r\n              type=\"text\"\r\n              value={formData.location || ''}\r\n              onChange={(e) => handleChange('location', e.target.value)}\r\n              placeholder=\"보관 위치를 입력하세요\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Input\r\n              label=\"보관 구역\"\r\n              type=\"text\"\r\n              value={formData.storage_section || ''}\r\n              onChange={(e) => handleChange('storage_section', e.target.value)}\r\n              placeholder=\"보관 구역을 입력하세요\"\r\n            />\r\n          </FormGroup>\r\n        </FormGrid>\r\n\r\n        {/* 공급업체 정보 */}\r\n        <SectionTitle>공급업체 정보</SectionTitle>\r\n        <FormGrid>\r\n          <FormGroup>\r\n            <Input\r\n              label=\"공급업체명\"\r\n              type=\"text\"\r\n              value={formData.supplier_name || ''}\r\n              onChange={(e) => handleChange('supplier_name', e.target.value)}\r\n              placeholder=\"공급업체명을 입력하세요\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Input\r\n              label=\"공급업체 연락처\"\r\n              type=\"text\"\r\n              value={formData.supplier_contact || ''}\r\n              onChange={(e) => handleChange('supplier_contact', e.target.value)}\r\n              placeholder=\"연락처를 입력하세요\"\r\n            />\r\n          </FormGroup>\r\n        </FormGrid>\r\n\r\n        {/* 설정 옵션 */}\r\n        <SectionTitle>설정 옵션</SectionTitle>\r\n        <FormGrid>\r\n          <FormGroup>\r\n            <label style={{ display: 'flex', alignItems: 'center', gap: '8px', cursor: 'pointer' }}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={formData.is_consumable}\r\n                onChange={(e) => handleChange('is_consumable', e.target.checked)}\r\n              />\r\n              소모품 (사용 시 차감)\r\n            </label>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <label style={{ display: 'flex', alignItems: 'center', gap: '8px', cursor: 'pointer' }}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={formData.requires_approval}\r\n                onChange={(e) => handleChange('requires_approval', e.target.checked)}\r\n              />\r\n              사용 시 승인 필요\r\n            </label>\r\n          </FormGroup>\r\n        </FormGrid>\r\n\r\n        {/* 추가 정보 */}\r\n        <SectionTitle>추가 정보</SectionTitle>\r\n        <FormGroup>\r\n          <Input\r\n            label=\"태그\"\r\n            type=\"text\"\r\n            value={tagsInput}\r\n            onChange={(e) => setTagsInput(e.target.value)}\r\n            placeholder=\"태그를 쉼표로 구분하여 입력하세요 (예: 전자제품, 필수품, 고가)\"\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Input\r\n            label=\"설명\"\r\n            type=\"textarea\"\r\n            value={formData.description || ''}\r\n            onChange={(e) => handleChange('description', e.target.value)}\r\n            placeholder=\"품목에 대한 설명을 입력하세요\"\r\n            rows={3}\r\n          />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Input\r\n            label=\"비고\"\r\n            type=\"textarea\"\r\n            value={formData.notes || ''}\r\n            onChange={(e) => handleChange('notes', e.target.value)}\r\n            placeholder=\"추가 메모사항을 입력하세요\"\r\n            rows={2}\r\n          />\r\n        </FormGroup>\r\n\r\n        <ButtonGroup>\r\n          <Button \r\n            type=\"button\" \r\n            variant=\"secondary\" \r\n            onClick={onCancel}\r\n            disabled={loading}\r\n          >\r\n            취소\r\n          </Button>\r\n          <Button \r\n            type=\"submit\" \r\n            variant=\"primary\"\r\n            loading={loading}\r\n            disabled={loading}\r\n          >\r\n            {item ? '수정' : '추가'}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default InventoryForm;","// client/src/components/inventory/ReceiptModal.tsx - 개선된 버전\r\nimport React, { useState, useRef, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Upload, X, ChevronDown, Image } from 'lucide-react';\r\nimport Button from '../common/Button';\r\n\r\nconst FormContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  min-height: 400px;\r\n  background: white;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin: 0 0 20px 0;\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: #374151;\r\n`;\r\n\r\nconst FormGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 16px;\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: flex-end;\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid #e5e7eb;\r\n`;\r\n\r\n// 부서 선택을 위한 Select 컴포넌트 스타일\r\nconst SelectContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n`;\r\n\r\nconst SelectLabel = styled.label`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: #374151;\r\n`;\r\n\r\nconst SelectButton = styled.button<{ isOpen: boolean; hasError?: boolean }>`\r\n  width: 100%;\r\n  padding: 8px 12px;\r\n  border: 1px solid ${props => props.hasError ? '#ef4444' : '#d1d5db'};\r\n  border-radius: 4px;\r\n  background: white;\r\n  font-size: 14px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    border-color: ${props => props.hasError ? '#ef4444' : '#3b82f6'};\r\n  }\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 0 0 1px #3b82f6;\r\n  }\r\n  \r\n  .placeholder {\r\n    color: #9ca3af;\r\n  }\r\n  \r\n  .chevron {\r\n    transform: ${props => props.isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\r\n    transition: transform 0.2s ease;\r\n    color: #6b7280;\r\n  }\r\n`;\r\n\r\nconst DropdownMenu = styled.div<{ isOpen: boolean }>`\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1000;\r\n  background: white;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 4px;\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\r\n  margin-top: 4px;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  display: ${props => props.isOpen ? 'block' : 'none'};\r\n  \r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-track {\r\n    background: #f1f5f9;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb {\r\n    background: #cbd5e1;\r\n    border-radius: 3px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb:hover {\r\n    background: #94a3b8;\r\n  }\r\n`;\r\n\r\nconst OptionItem = styled.div<{ isSelected: boolean }>`\r\n  padding: 8px 12px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  background: ${props => props.isSelected ? '#3b82f6' : 'white'};\r\n  color: ${props => props.isSelected ? 'white' : '#374151'};\r\n  border-bottom: 1px solid #f3f4f6;\r\n  \r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n  \r\n  &:hover {\r\n    background: ${props => props.isSelected ? '#3b82f6' : '#f8fafc'};\r\n  }\r\n`;\r\n\r\n// 🔥 개선된 이미지 업로드 섹션\r\nconst ImageUploadSection = styled.div<{ isDragging: boolean }>`\r\n  border: 2px dashed ${props => props.isDragging ? '#3b82f6' : '#d1d5db'};\r\n  border-radius: 8px;\r\n  padding: 30px 20px;\r\n  text-align: center;\r\n  background: ${props => props.isDragging ? '#eff6ff' : '#f9fafb'};\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  \r\n  &:hover {\r\n    border-color: #3b82f6;\r\n    background: #eff6ff;\r\n    transform: translateY(-2px);\r\n  }\r\n  \r\n  /* 드래그 중일 때 효과 */\r\n  ${props => props.isDragging && `\r\n    border-color: #1d4ed8;\r\n    background: #dbeafe;\r\n    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);\r\n  `}\r\n`;\r\n\r\nconst DragOverlay = styled.div<{ isDragging: boolean }>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(59, 130, 246, 0.1);\r\n  border-radius: 6px;\r\n  display: ${props => props.isDragging ? 'flex' : 'none'};\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: 600;\r\n  color: #1d4ed8;\r\n  font-size: 18px;\r\n  z-index: 10;\r\n`;\r\n\r\nconst ImagePreviewGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\r\n  gap: 16px;\r\n  margin-top: 20px;\r\n  padding: 16px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n  border: 1px solid #e2e8f0;\r\n`;\r\n\r\nconst ImagePreviewItem = styled.div`\r\n  position: relative;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  border: 2px solid #e5e7eb;\r\n  aspect-ratio: 1;\r\n  background: white;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    border-color: #3b82f6;\r\n    transform: scale(1.02);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .preview-image {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .remove-button {\r\n    position: absolute;\r\n    top: 4px;\r\n    right: 4px;\r\n    width: 24px;\r\n    height: 24px;\r\n    border-radius: 50%;\r\n    background: rgba(239, 68, 68, 0.9);\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 12px;\r\n    opacity: 0;\r\n    transition: opacity 0.2s ease;\r\n  }\r\n  \r\n  &:hover .remove-button {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst ImageCounter = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-top: 12px;\r\n  padding: 8px 12px;\r\n  background: #f0f9ff;\r\n  border: 1px solid #0ea5e9;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  color: #0c4a6e;\r\n  \r\n  .icon {\r\n    color: #0ea5e9;\r\n  }\r\n`;\r\n\r\nconst ProcessingIndicator = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  padding: 12px;\r\n  background: #fef3c7;\r\n  border: 1px solid #f59e0b;\r\n  border-radius: 6px;\r\n  color: #92400e;\r\n  font-size: 14px;\r\n  margin-top: 12px;\r\n  \r\n  .spinner {\r\n    width: 16px;\r\n    height: 16px;\r\n    border: 2px solid #f59e0b;\r\n    border-top: 2px solid transparent;\r\n    border-radius: 50%;\r\n    animation: spin 1s linear infinite;\r\n  }\r\n  \r\n  @keyframes spin {\r\n    0% { transform: rotate(0deg); }\r\n    100% { transform: rotate(360deg); }\r\n  }\r\n`;\r\n\r\n// 부서 옵션\r\nconst DEPARTMENT_OPTIONS = [\r\n  { value: 'H/W 개발팀', label: 'H/W 개발팀' },\r\n  { value: 'S/W 개발팀', label: 'S/W 개발팀' },\r\n  { value: '총무부', label: '총무부' },\r\n  { value: '사무관리팀', label: '사무관리팀' },\r\n  { value: '영업팀', label: '영업팀' },\r\n];\r\n\r\ninterface ReceiptModalProps {\r\n  item: any;\r\n  onSubmit: (receiptData: any, images?: File[]) => void;\r\n  onCancel: () => void;\r\n  loading?: boolean;\r\n  requireImages?: boolean;\r\n}\r\n\r\nconst ReceiptModal: React.FC<ReceiptModalProps> = ({\r\n  item,\r\n  onSubmit,\r\n  onCancel,\r\n  loading = false,\r\n  requireImages = false\r\n}) => {\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const departmentSelectRef = useRef<HTMLDivElement>(null);\r\n  \r\n  // 부서 선택 관련 상태\r\n  const [isDepartmentOpen, setIsDepartmentOpen] = useState(false);\r\n  \r\n  // 기본 폼 데이터\r\n  const [formData, setFormData] = useState({\r\n    received_quantity: 1,\r\n    receiver_name: '',\r\n    receiver_email: '',\r\n    department: '',\r\n    received_date: new Date().toISOString().split('T')[0],\r\n    location: '',\r\n    condition: 'good',\r\n    notes: ''\r\n  });\r\n\r\n  // 이미지 관련 상태\r\n  const [selectedImages, setSelectedImages] = useState<File[]>([]);\r\n  const [imagePreviewUrls, setImagePreviewUrls] = useState<string[]>([]);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [isProcessingImages, setIsProcessingImages] = useState(false);\r\n\r\n  // 🔥 드래그 이벤트 핸들러 개선\r\n  const handleDragEvents = useCallback({\r\n    onDragEnter: (e: React.DragEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setIsDragging(true);\r\n    },\r\n    \r\n    onDragLeave: (e: React.DragEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      // 실제로 영역을 벗어났는지 확인\r\n      const rect = e.currentTarget.getBoundingClientRect();\r\n      const x = e.clientX;\r\n      const y = e.clientY;\r\n      \r\n      if (x < rect.left || x >= rect.right || y < rect.top || y >= rect.bottom) {\r\n        setIsDragging(false);\r\n      }\r\n    },\r\n    \r\n    onDragOver: (e: React.DragEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      e.dataTransfer.dropEffect = 'copy';\r\n    },\r\n    \r\n    onDrop: (e: React.DragEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setIsDragging(false);\r\n      \r\n      const files = e.dataTransfer.files;\r\n      if (files.length > 0) {\r\n        handleFileSelect(files);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // 클린업 함수\r\n  React.useEffect(() => {\r\n    return () => {\r\n      imagePreviewUrls.forEach(url => {\r\n        if (url.startsWith('blob:')) {\r\n          URL.revokeObjectURL(url);\r\n        }\r\n      });\r\n    };\r\n  }, [imagePreviewUrls]);\r\n\r\n  const handleInputChange = (field: string, value: any) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  // 부서 선택 핸들러\r\n  const handleDepartmentSelect = (departmentValue: string) => {\r\n    handleInputChange('department', departmentValue);\r\n    setIsDepartmentOpen(false);\r\n  };\r\n\r\n  const handleDepartmentToggle = () => {\r\n    setIsDepartmentOpen(!isDepartmentOpen);\r\n  };\r\n\r\n  // 🔥 개선된 이미지 처리 함수\r\n  const handleFileSelect = async (files: FileList | null) => {\r\n    if (!files || files.length === 0) return;\r\n    \r\n    console.log('🔥 파일 선택됨:', files.length, '개');\r\n    \r\n    setIsProcessingImages(true);\r\n\r\n    // 이미지 파일만 필터링 (크기 제한 포함)\r\n    const imageFiles = Array.from(files).filter(file => {\r\n      const isImage = file.type.startsWith('image/');\r\n      const isValidSize = file.size <= 10 * 1024 * 1024; // 10MB\r\n      \r\n      if (!isImage) {\r\n        console.warn('🚫 이미지가 아닌 파일 제외:', file.name);\r\n      }\r\n      if (!isValidSize) {\r\n        console.warn('🚫 크기 초과 파일 제외:', file.name, file.size);\r\n      }\r\n      \r\n      return isImage && isValidSize;\r\n    });\r\n    \r\n    if (imageFiles.length === 0) {\r\n      alert('유효한 이미지 파일이 없습니다.\\n(JPG, PNG 등 이미지 파일, 10MB 이하만 가능)');\r\n      setIsProcessingImages(false);\r\n      return;\r\n    }\r\n\r\n    console.log('✅ 처리할 이미지 파일:', imageFiles.length, '개');\r\n\r\n    // 🔥 FileReader를 사용하여 base64로 변환\r\n    const promises = imageFiles.map((file, index) => {\r\n      return new Promise<string>((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          console.log(`✅ 이미지 ${index + 1} 로딩 완료:`, file.name);\r\n          resolve(reader.result as string);\r\n        };\r\n        reader.onerror = () => {\r\n          console.error(`❌ 이미지 ${index + 1} 로딩 실패:`, file.name);\r\n          reject(new Error(`파일 읽기 실패: ${file.name}`));\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    });\r\n\r\n    try {\r\n      const newPreviewUrls = await Promise.all(promises);\r\n      \r\n      // 상태 업데이트\r\n      setSelectedImages(prev => [...prev, ...imageFiles]);\r\n      setImagePreviewUrls(prev => [...prev, ...newPreviewUrls]);\r\n      \r\n      console.log('🎉 모든 이미지 처리 완료! 총', newPreviewUrls.length, '개');\r\n      \r\n    } catch (error) {\r\n      console.error('❌ 이미지 처리 중 오류:', error);\r\n      alert(`이미지 처리 중 오류가 발생했습니다:\\n${error.message}`);\r\n    } finally {\r\n      setIsProcessingImages(false);\r\n    }\r\n  };\r\n\r\n  const handleFileInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log('📁 파일 입력 변경됨');\r\n    handleFileSelect(e.target.files);\r\n  };\r\n\r\n  const removeImage = (index: number) => {\r\n    console.log('🗑️ 이미지 제거:', index);\r\n    \r\n    // base64 URL은 revoke 불필요하지만, blob URL인 경우 처리\r\n    const urlToRemove = imagePreviewUrls[index];\r\n    if (urlToRemove && urlToRemove.startsWith('blob:')) {\r\n      URL.revokeObjectURL(urlToRemove);\r\n    }\r\n    \r\n    setSelectedImages(prev => prev.filter((_, i) => i !== index));\r\n    setImagePreviewUrls(prev => prev.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // 이미지 필수 체크\r\n    if (requireImages && selectedImages.length === 0) {\r\n      alert('이미지 업로드가 필수입니다.\\n최소 1개의 이미지를 업로드해주세요.');\r\n      return;\r\n    }\r\n    \r\n    // 필수 필드 체크\r\n    if (!formData.receiver_name || !formData.department) {\r\n      alert('수령자명과 부서는 필수 입력 항목입니다.');\r\n      return;\r\n    }\r\n    \r\n    console.log('📤 폼 제출:', {\r\n      formData,\r\n      imageCount: selectedImages.length\r\n    });\r\n    \r\n    onSubmit(formData, selectedImages);\r\n  };\r\n\r\n  const conditionOptions = [\r\n    { value: 'excellent', label: '최상' },\r\n    { value: 'good', label: '양호' },\r\n    { value: 'damaged', label: '손상' },\r\n    { value: 'defective', label: '불량' }\r\n  ];\r\n\r\n  if (!item) {\r\n    return (\r\n      <FormContainer>\r\n        <div>아이템 정보를 불러올 수 없습니다.</div>\r\n      </FormContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Title>\r\n        {requireImages ? '수령 완료' : '수령 추가'} - {item.item_name}\r\n      </Title>\r\n\r\n      {requireImages && (\r\n        <div style={{ \r\n          padding: '12px 16px', \r\n          background: '#fef3c7', \r\n          border: '1px solid #f59e0b', \r\n          borderRadius: '6px',\r\n          color: '#92400e',\r\n          fontSize: '0.875rem',\r\n          marginBottom: '16px'\r\n        }}>\r\n          ⚠️ 수령 완료를 위해 이미지 업로드가 필수입니다.\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* 기본 수령 정보 */}\r\n        <FormGrid>\r\n          <FormGroup>\r\n            <label>수령 수량 *</label>\r\n            <input\r\n              type=\"number\"\r\n              value={formData.received_quantity}\r\n              onChange={(e) => handleInputChange('received_quantity', parseInt(e.target.value) || 1)}\r\n              min=\"1\"\r\n              required\r\n              style={{\r\n                padding: '8px 12px',\r\n                border: '1px solid #d1d5db',\r\n                borderRadius: '4px',\r\n                fontSize: '14px'\r\n              }}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <label>수령자명 *</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.receiver_name}\r\n              onChange={(e) => handleInputChange('receiver_name', e.target.value)}\r\n              placeholder=\"수령자명을 입력하세요\"\r\n              required\r\n              style={{\r\n                padding: '8px 12px',\r\n                border: '1px solid #d1d5db',\r\n                borderRadius: '4px',\r\n                fontSize: '14px'\r\n              }}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <label>수령자 이메일</label>\r\n            <input\r\n              type=\"email\"\r\n              value={formData.receiver_email}\r\n              onChange={(e) => handleInputChange('receiver_email', e.target.value)}\r\n              placeholder=\"이메일을 입력하세요\"\r\n              style={{\r\n                padding: '8px 12px',\r\n                border: '1px solid #d1d5db',\r\n                borderRadius: '4px',\r\n                fontSize: '14px'\r\n              }}\r\n            />\r\n          </FormGroup>\r\n\r\n          {/* 부서 선택 드롭다운 */}\r\n          <FormGroup>\r\n            <SelectContainer ref={departmentSelectRef}>\r\n              <SelectLabel>부서 *</SelectLabel>\r\n              \r\n              <SelectButton\r\n                type=\"button\"\r\n                isOpen={isDepartmentOpen}\r\n                onClick={handleDepartmentToggle}\r\n              >\r\n                <span className={formData.department ? '' : 'placeholder'}>\r\n                  {formData.department || '부서를 선택하세요'}\r\n                </span>\r\n                <ChevronDown size={16} className=\"chevron\" />\r\n              </SelectButton>\r\n\r\n              <DropdownMenu isOpen={isDepartmentOpen}>\r\n                {DEPARTMENT_OPTIONS.map((dept) => (\r\n                  <OptionItem\r\n                    key={dept.value}\r\n                    isSelected={formData.department === dept.value}\r\n                    onClick={() => handleDepartmentSelect(dept.value)}\r\n                  >\r\n                    {dept.label}\r\n                  </OptionItem>\r\n                ))}\r\n              </DropdownMenu>\r\n            </SelectContainer>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <label>수령일 *</label>\r\n            <input\r\n              type=\"date\"\r\n              value={formData.received_date}\r\n              onChange={(e) => handleInputChange('received_date', e.target.value)}\r\n              required\r\n              style={{\r\n                padding: '8px 12px',\r\n                border: '1px solid #d1d5db',\r\n                borderRadius: '4px',\r\n                fontSize: '14px'\r\n              }}\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <label>수령 위치</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.location}\r\n              onChange={(e) => handleInputChange('location', e.target.value)}\r\n              placeholder=\"수령 위치를 입력하세요\"\r\n              style={{\r\n                padding: '8px 12px',\r\n                border: '1px solid #d1d5db',\r\n                borderRadius: '4px',\r\n                fontSize: '14px'\r\n              }}\r\n            />\r\n          </FormGroup>\r\n        </FormGrid>\r\n\r\n        <FormGroup>\r\n          <label>품목 상태</label>\r\n          <select\r\n            value={formData.condition}\r\n            onChange={(e) => handleInputChange('condition', e.target.value)}\r\n            style={{\r\n              padding: '8px 12px',\r\n              border: '1px solid #d1d5db',\r\n              borderRadius: '4px',\r\n              fontSize: '14px'\r\n            }}\r\n          >\r\n            {conditionOptions.map(option => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>비고</label>\r\n          <textarea\r\n            value={formData.notes}\r\n            onChange={(e) => handleInputChange('notes', e.target.value)}\r\n            placeholder=\"추가 메모사항을 입력하세요\"\r\n            rows={3}\r\n            style={{\r\n              padding: '8px 12px',\r\n              border: '1px solid #d1d5db',\r\n              borderRadius: '4px',\r\n              fontSize: '14px',\r\n              resize: 'vertical'\r\n            }}\r\n          />\r\n        </FormGroup>\r\n\r\n        {/* 🔥 개선된 이미지 업로드 섹션 */}\r\n        <FormGroup>\r\n          <label>\r\n            수령 이미지 {requireImages && <span style={{ color: '#ef4444' }}>*</span>}\r\n          </label>\r\n          \r\n          <ImageUploadSection\r\n            isDragging={isDragging}\r\n            onClick={() => fileInputRef.current?.click()}\r\n            {...handleDragEvents}\r\n          >\r\n            <DragOverlay isDragging={isDragging}>\r\n              📷 이미지를 놓아주세요!\r\n            </DragOverlay>\r\n            \r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '16px' }}>\r\n              <Upload size={40} style={{ color: isDragging ? '#1d4ed8' : '#6b7280' }} />\r\n              <div>\r\n                <div style={{ fontSize: '18px', fontWeight: '600', marginBottom: '4px' }}>\r\n                  {isDragging ? '여기에 이미지를 놓아주세요' : '이미지를 업로드하세요'}\r\n                </div>\r\n                <div style={{ fontSize: '14px', color: '#6b7280' }}>\r\n                  클릭하거나 드래그앤드롭으로 업로드 • JPG, PNG (최대 10MB)\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <input\r\n              ref={fileInputRef}\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              onChange={handleFileInputChange}\r\n              style={{ display: 'none' }}\r\n            />\r\n          </ImageUploadSection>\r\n\r\n          {/* 🔥 처리 중 표시 */}\r\n          {isProcessingImages && (\r\n            <ProcessingIndicator>\r\n              <div className=\"spinner\"></div>\r\n              이미지를 처리하고 있습니다...\r\n            </ProcessingIndicator>\r\n          )}\r\n\r\n          {/* 🔥 개선된 이미지 미리보기 */}\r\n          {selectedImages.length > 0 && (\r\n            <>\r\n              <ImageCounter>\r\n                <Image size={16} className=\"icon\" />\r\n                <strong>{selectedImages.length}개</strong> 이미지가 선택되었습니다\r\n              </ImageCounter>\r\n              \r\n              <ImagePreviewGrid>\r\n                {imagePreviewUrls.map((url, index) => (\r\n                  <ImagePreviewItem key={index}>\r\n                    <img \r\n                      src={url}\r\n                      alt={`Preview ${index + 1}`} \r\n                      className=\"preview-image\"\r\n                      onError={(e) => {\r\n                        console.error(`❌ 이미지 로딩 실패 (index: ${index}):`, url.substring(0, 50));\r\n                        e.currentTarget.style.display = 'none';\r\n                      }}\r\n                      onLoad={() => {\r\n                        console.log(`✅ 이미지 로딩 성공 (index: ${index})`);\r\n                      }}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"remove-button\"\r\n                      onClick={() => removeImage(index)}\r\n                      title=\"이미지 제거\"\r\n                    >\r\n                      <X size={14} />\r\n                    </button>\r\n                  </ImagePreviewItem>\r\n                ))}\r\n              </ImagePreviewGrid>\r\n            </>\r\n          )}\r\n        </FormGroup>\r\n\r\n        <ButtonGroup>\r\n          <Button \r\n            type=\"button\" \r\n            variant=\"secondary\" \r\n            onClick={onCancel}\r\n            disabled={loading}\r\n          >\r\n            취소\r\n          </Button>\r\n          <Button \r\n            type=\"submit\" \r\n            variant=\"primary\"\r\n            disabled={loading || isProcessingImages || (requireImages && selectedImages.length === 0)}\r\n            style={{\r\n              opacity: loading || isProcessingImages || (requireImages && selectedImages.length === 0) ? 0.5 : 1,\r\n              cursor: loading || isProcessingImages || (requireImages && selectedImages.length === 0) ? 'not-allowed' : 'pointer'\r\n            }}\r\n          >\r\n            {loading ? '처리 중...' : isProcessingImages ? '이미지 처리 중...' : (requireImages ? '수령 완료' : '수령 추가')}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ReceiptModal;","// client/src/components/common/ExcelUploadGuide.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { \r\n  FileSpreadsheet, \r\n  Download, \r\n  Upload, \r\n  CheckCircle, \r\n  AlertTriangle,\r\n  Info,\r\n  ArrowRight,\r\n  FileText\r\n} from 'lucide-react';\r\nimport Card from './Card';\r\n\r\ninterface ExcelUploadGuideProps {\r\n  type: 'purchase' | 'inventory';\r\n}\r\n\r\nconst GuideContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst GuideCard = styled(Card)`\r\n  padding: 24px;\r\n  \r\n  .guide-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    margin-bottom: 20px;\r\n    \r\n    .guide-icon {\r\n      padding: 8px;\r\n      background: linear-gradient(135deg, #667eea, #764ba2);\r\n      color: white;\r\n      border-radius: 10px;\r\n    }\r\n    \r\n    .guide-title {\r\n      font-size: 1.25rem;\r\n      font-weight: 600;\r\n      color: #1f2937;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StepContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n`;\r\n\r\nconst StepItem = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 16px;\r\n  padding: 16px;\r\n  background: #f8fafc;\r\n  border-radius: 12px;\r\n  border-left: 4px solid #3b82f6;\r\n  \r\n  .step-number {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 32px;\r\n    height: 32px;\r\n    background: #3b82f6;\r\n    color: white;\r\n    border-radius: 50%;\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .step-content {\r\n    flex: 1;\r\n    \r\n    .step-title {\r\n      font-weight: 600;\r\n      margin-bottom: 8px;\r\n      color: #1f2937;\r\n    }\r\n    \r\n    .step-description {\r\n      color: #6b7280;\r\n      line-height: 1.5;\r\n      margin-bottom: 12px;\r\n    }\r\n    \r\n    .step-details {\r\n      background: white;\r\n      padding: 12px;\r\n      border-radius: 8px;\r\n      border: 1px solid #e5e7eb;\r\n      \r\n      .detail-item {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        margin-bottom: 6px;\r\n        font-size: 14px;\r\n        \r\n        &:last-child {\r\n          margin-bottom: 0;\r\n        }\r\n        \r\n        .bullet {\r\n          width: 4px;\r\n          height: 4px;\r\n          background: #3b82f6;\r\n          border-radius: 50%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst WarningBox = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 12px;\r\n  padding: 16px;\r\n  background: #fef3c7;\r\n  border: 1px solid #f59e0b;\r\n  border-radius: 8px;\r\n  \r\n  .warning-icon {\r\n    color: #f59e0b;\r\n    flex-shrink: 0;\r\n    margin-top: 2px;\r\n  }\r\n  \r\n  .warning-content {\r\n    .warning-title {\r\n      font-weight: 600;\r\n      color: #92400e;\r\n      margin-bottom: 4px;\r\n    }\r\n    \r\n    .warning-text {\r\n      color: #92400e;\r\n      font-size: 14px;\r\n      line-height: 1.5;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TipBox = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 12px;\r\n  padding: 16px;\r\n  background: #dbeafe;\r\n  border: 1px solid #3b82f6;\r\n  border-radius: 8px;\r\n  \r\n  .tip-icon {\r\n    color: #3b82f6;\r\n    flex-shrink: 0;\r\n    margin-top: 2px;\r\n  }\r\n  \r\n  .tip-content {\r\n    .tip-title {\r\n      font-weight: 600;\r\n      color: #1e40af;\r\n      margin-bottom: 4px;\r\n    }\r\n    \r\n    .tip-text {\r\n      color: #1e40af;\r\n      font-size: 14px;\r\n      line-height: 1.5;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RequiredColumns = styled.div`\r\n  .columns-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    gap: 12px;\r\n    margin-top: 12px;\r\n    \r\n    .column-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      padding: 8px 12px;\r\n      background: white;\r\n      border: 1px solid #e5e7eb;\r\n      border-radius: 8px;\r\n      \r\n      .required-mark {\r\n        color: #ef4444;\r\n        font-weight: bold;\r\n      }\r\n      \r\n      .column-name {\r\n        font-weight: 500;\r\n        color: #374151;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ExcelUploadGuide: React.FC<ExcelUploadGuideProps> = ({ type }) => {\r\n  const isPurchase = type === 'purchase';\r\n  \r\n  const purchaseColumns = [\r\n    { name: '품목명', required: true },\r\n    { name: '수량', required: true },\r\n    { name: '요청자명', required: true },\r\n    { name: '부서', required: true },\r\n    { name: '구매사유', required: true },\r\n    { name: '사양', required: false },\r\n    { name: '예상단가', required: false },\r\n    { name: '공급업체', required: false },\r\n    { name: '카테고리', required: false },\r\n    { name: '긴급도', required: false },\r\n    { name: '프로젝트', required: false },\r\n    { name: '예산코드', required: false }\r\n  ];\r\n  \r\n  const inventoryColumns = [\r\n    { name: '품목코드', required: true },\r\n    { name: '품목명', required: true },\r\n    { name: '단위', required: true },\r\n    { name: '최소재고', required: true },\r\n    { name: '카테고리', required: false },\r\n    { name: '브랜드', required: false },\r\n    { name: '사양', required: false },\r\n    { name: '단가', required: false },\r\n    { name: '위치', required: false },\r\n    { name: '창고', required: false },\r\n    { name: '공급업체', required: false },\r\n    { name: '설명', required: false }\r\n  ];\r\n  \r\n  const columns = isPurchase ? purchaseColumns : inventoryColumns;\r\n  \r\n  return (\r\n    <GuideContainer>\r\n      <GuideCard>\r\n        <div className=\"guide-header\">\r\n          <FileSpreadsheet className=\"guide-icon\" size={24} />\r\n          <div className=\"guide-title\">\r\n            {isPurchase ? '구매 요청' : '품목'} Excel 업로드 가이드\r\n          </div>\r\n        </div>\r\n        \r\n        <StepContainer>\r\n          <StepItem>\r\n            <div className=\"step-number\">1</div>\r\n            <div className=\"step-content\">\r\n              <div className=\"step-title\">템플릿 다운로드</div>\r\n              <div className=\"step-description\">\r\n                먼저 Excel 템플릿을 다운로드하여 올바른 형식을 확인하세요.\r\n              </div>\r\n              <div className=\"step-details\">\r\n                <div className=\"detail-item\">\r\n                  <Download size={16} />\r\n                  <span>'{isPurchase ? '구매 요청' : '품목'} 템플릿 다운로드' 버튼 클릭</span>\r\n                </div>\r\n                <div className=\"detail-item\">\r\n                  <div className=\"bullet\" />\r\n                  <span>템플릿에는 샘플 데이터와 입력 가이드가 포함되어 있습니다</span>\r\n                </div>\r\n                <div className=\"detail-item\">\r\n                  <div className=\"bullet\" />\r\n                  <span>각 시트별로 상세한 설명과 옵션을 확인할 수 있습니다</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </StepItem>\r\n          \r\n          <StepItem>\r\n            <div className=\"step-number\">2</div>\r\n            <div className=\"step-content\">\r\n              <div className=\"step-title\">데이터 입력</div>\r\n              <div className=\"step-description\">\r\n                템플릿의 양식에 맞춰 {isPurchase ? '구매 요청' : '품목'} 정보를 입력하세요.\r\n              </div>\r\n              <RequiredColumns>\r\n                <div className=\"columns-grid\">\r\n                  {columns.map((column, index) => (\r\n                    <div key={index} className=\"column-item\">\r\n                      {column.required && <span className=\"required-mark\">*</span>}\r\n                      <span className=\"column-name\">{column.name}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </RequiredColumns>\r\n            </div>\r\n          </StepItem>\r\n          \r\n          <StepItem>\r\n            <div className=\"step-number\">3</div>\r\n            <div className=\"step-content\">\r\n              <div className=\"step-title\">파일 저장 및 업로드</div>\r\n              <div className=\"step-description\">\r\n                입력이 완료되면 파일을 저장하고 업로드하세요.\r\n              </div>\r\n              <div className=\"step-details\">\r\n                <div className=\"detail-item\">\r\n                  <FileText size={16} />\r\n                  <span>Excel 파일을 .xlsx 또는 .xls 형식으로 저장</span>\r\n                </div>\r\n                <div className=\"detail-item\">\r\n                  <Upload size={16} />\r\n                  <span>'Excel 업로드' 버튼을 클릭하여 파일 선택</span>\r\n                </div>\r\n                <div className=\"detail-item\">\r\n                  <CheckCircle size={16} />\r\n                  <span>업로드 완료 후 결과 확인</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </StepItem>\r\n        </StepContainer>\r\n      </GuideCard>\r\n      \r\n      <WarningBox>\r\n        <AlertTriangle className=\"warning-icon\" size={20} />\r\n        <div className=\"warning-content\">\r\n          <div className=\"warning-title\">주의사항</div>\r\n          <div className=\"warning-text\">\r\n            • 필수 컬럼({columns.filter(c => c.required).map(c => c.name).join(', ')})은 반드시 입력해야 합니다<br/>\r\n            • {isPurchase ? '요청자명과 부서는 정확히 입력해주세요' : '품목코드는 고유해야 하며, 중복 시 기존 품목이 업데이트됩니다'}<br/>\r\n            • 파일 크기는 10MB를 초과할 수 없습니다<br/>\r\n            • 최대 1,000개 항목까지 한 번에 업로드 가능합니다\r\n          </div>\r\n        </div>\r\n      </WarningBox>\r\n      \r\n      <TipBox>\r\n        <Info className=\"tip-icon\" size={20} />\r\n        <div className=\"tip-content\">\r\n          <div className=\"tip-title\">유용한 팁</div>\r\n          <div className=\"tip-text\">\r\n            • 템플릿의 '사용안내' 시트에서 자세한 가이드를 확인하세요<br/>\r\n            • {isPurchase ? '카테고리, 긴급도, 부서 옵션' : '카테고리 예시와 데이터 형식'}은 별도 시트에서 참조 가능합니다<br/>\r\n            • 업로드 실패 시 오류 메시지를 확인하고 해당 행의 데이터를 수정하세요<br/>\r\n            • 대량 데이터는 여러 번에 나누어 업로드하는 것을 권장합니다\r\n          </div>\r\n        </div>\r\n      </TipBox>\r\n    </GuideContainer>\r\n  );\r\n};\r\n\r\nexport default ExcelUploadGuide;","// client/src/components/inventory/InventoryExcelUpload.tsx - 수정된 버전\r\nimport React, { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { toast } from 'react-toastify';\r\nimport { \r\n  Upload, \r\n  Download, \r\n  FileSpreadsheet, \r\n  AlertCircle, \r\n  CheckCircle, \r\n  FileText,\r\n  Loader,\r\n  Package,\r\n  Database,\r\n  Info,\r\n  ArrowLeft,\r\n  X,\r\n  RefreshCw\r\n} from 'lucide-react';\r\nimport Card from '../common/Card';\r\nimport Button from '../common/Button';\r\nimport Modal from '../common/Modal';\r\nimport ExcelUploadGuide from '../common/ExcelUploadGuide';\r\nimport { inventoryApi } from '../../services/api';\r\n\r\ninterface InventoryExcelUploadProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSuccess: () => void;\r\n}\r\n\r\ninterface UploadResult {\r\n  success: boolean;\r\n  created_count: number;\r\n  updated_count?: number;\r\n  created_items: string[];\r\n  updated_items?: string[];\r\n  total_processed?: number;\r\n  errors?: Array<{\r\n    row: number;\r\n    field: string;\r\n    message: string;\r\n  }>;\r\n  message?: string;\r\n}\r\n\r\nconst UploadContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n  min-height: 500px;\r\n`;\r\n\r\nconst InfoSection = styled(Card)`\r\n  background: linear-gradient(135deg, #f0f9ff, #e0f2fe);\r\n  border-left: 4px solid #0ea5e9;\r\n  \r\n  .info-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    margin-bottom: 16px;\r\n    \r\n    .info-icon {\r\n      color: #0ea5e9;\r\n    }\r\n    \r\n    .info-title {\r\n      font-size: 1.1rem;\r\n      font-weight: 600;\r\n      color: #0c4a6e;\r\n    }\r\n  }\r\n  \r\n  .info-content {\r\n    .info-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      margin-bottom: 8px;\r\n      font-size: 14px;\r\n      color: #0c4a6e;\r\n      \r\n      &:last-child {\r\n        margin-bottom: 0;\r\n      }\r\n      \r\n      .bullet {\r\n        width: 4px;\r\n        height: 4px;\r\n        background: #0ea5e9;\r\n        border-radius: 50%;\r\n        flex-shrink: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst TemplateSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  \r\n  .template-header {\r\n    .template-title {\r\n      font-size: 1.1rem;\r\n      font-weight: 600;\r\n      margin-bottom: 8px;\r\n      color: #1f2937;\r\n    }\r\n    \r\n    .template-description {\r\n      color: #6b7280;\r\n      font-size: 14px;\r\n      line-height: 1.5;\r\n    }\r\n  }\r\n  \r\n  .template-actions {\r\n    display: flex;\r\n    gap: 12px;\r\n    align-items: center;\r\n    margin-top: 12px;\r\n  }\r\n`;\r\n\r\nconst UploadArea = styled.div<{ isDragOver: boolean; disabled?: boolean }>`\r\n  border: 2px dashed ${props => \r\n    props.disabled \r\n      ? '#d1d5db' \r\n      : props.isDragOver \r\n        ? '#3b82f6' \r\n        : '#d1d5db'\r\n  };\r\n  border-radius: 12px;\r\n  padding: 48px 24px;\r\n  text-align: center;\r\n  background: ${props => \r\n    props.disabled\r\n      ? '#f9fafb'\r\n      : props.isDragOver \r\n        ? '#eff6ff' \r\n        : '#ffffff'\r\n  };\r\n  transition: all 0.3s ease;\r\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\r\n  opacity: ${props => props.disabled ? 0.6 : 1};\r\n  position: relative;\r\n  \r\n  &:hover {\r\n    border-color: ${props => props.disabled ? '#d1d5db' : '#3b82f6'};\r\n    background: ${props => props.disabled ? '#f9fafb' : '#eff6ff'};\r\n  }\r\n  \r\n  .upload-icon {\r\n    margin-bottom: 16px;\r\n    color: ${props => props.disabled ? '#9ca3af' : '#3b82f6'};\r\n    opacity: 0.8;\r\n  }\r\n  \r\n  .upload-title {\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    margin-bottom: 8px;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .upload-subtitle {\r\n    color: #6b7280;\r\n    font-size: 14px;\r\n    margin-bottom: 16px;\r\n    line-height: 1.5;\r\n  }\r\n  \r\n  .upload-hint {\r\n    color: #9ca3af;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .file-info {\r\n    margin-top: 12px;\r\n    padding: 12px;\r\n    background: #f0f9ff;\r\n    border-radius: 8px;\r\n    border: 1px solid #bae6fd;\r\n    \r\n    .file-name {\r\n      font-weight: 500;\r\n      color: #0c4a6e;\r\n      margin-bottom: 4px;\r\n    }\r\n    \r\n    .file-size {\r\n      font-size: 12px;\r\n      color: #0369a1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProgressSection = styled.div`\r\n  .progress-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 12px;\r\n    \r\n    .progress-title {\r\n      font-weight: 500;\r\n      color: #1f2937;\r\n    }\r\n    \r\n    .progress-percentage {\r\n      font-size: 14px;\r\n      color: #6b7280;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n  \r\n  .progress-bar {\r\n    width: 100%;\r\n    height: 10px;\r\n    background: #f3f4f6;\r\n    border-radius: 5px;\r\n    overflow: hidden;\r\n    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);\r\n    \r\n    .progress-fill {\r\n      height: 100%;\r\n      background: linear-gradient(90deg, #3b82f6, #1d4ed8);\r\n      transition: width 0.3s ease;\r\n      border-radius: 5px;\r\n      position: relative;\r\n      \r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);\r\n        animation: shimmer 2s infinite;\r\n      }\r\n    }\r\n  }\r\n  \r\n  @keyframes shimmer {\r\n    0% { transform: translateX(-100%); }\r\n    100% { transform: translateX(100%); }\r\n  }\r\n  \r\n  .progress-status {\r\n    margin-top: 12px;\r\n    font-size: 14px;\r\n    color: #6b7280;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    \r\n    .status-icon {\r\n      animation: spin 1s linear infinite;\r\n    }\r\n  }\r\n  \r\n  @keyframes spin {\r\n    from { transform: rotate(0deg); }\r\n    to { transform: rotate(360deg); }\r\n  }\r\n`;\r\n\r\nconst ResultSection = styled.div<{ success: boolean }>`\r\n  .result-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    margin-bottom: 16px;\r\n    \r\n    .result-icon {\r\n      color: ${props => props.success ? '#10b981' : '#ef4444'};\r\n    }\r\n    \r\n    .result-title {\r\n      font-size: 1.2rem;\r\n      font-weight: 600;\r\n      color: ${props => props.success ? '#065f46' : '#991b1b'};\r\n    }\r\n  }\r\n  \r\n  .result-summary {\r\n    background: ${props => props.success ? '#ecfdf5' : '#fef2f2'};\r\n    border: 1px solid ${props => props.success ? '#a7f3d0' : '#fecaca'};\r\n    border-radius: 8px;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n    \r\n    .summary-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n      gap: 16px;\r\n    }\r\n    \r\n    .summary-item {\r\n      text-align: center;\r\n      \r\n      .value {\r\n        font-size: 1.5rem;\r\n        font-weight: 700;\r\n        color: ${props => props.success ? '#059669' : '#dc2626'};\r\n        margin-bottom: 4px;\r\n      }\r\n      \r\n      .label {\r\n        font-size: 12px;\r\n        color: ${props => props.success ? '#065f46' : '#991b1b'};\r\n        text-transform: uppercase;\r\n        letter-spacing: 0.5px;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .error-details {\r\n    max-height: 300px;\r\n    overflow-y: auto;\r\n    border: 1px solid #e5e7eb;\r\n    border-radius: 8px;\r\n    background: white;\r\n    \r\n    .error-header {\r\n      padding: 12px 16px;\r\n      background: #fef2f2;\r\n      border-bottom: 1px solid #fecaca;\r\n      font-weight: 600;\r\n      color: #991b1b;\r\n      position: sticky;\r\n      top: 0;\r\n      z-index: 1;\r\n    }\r\n    \r\n    .error-item {\r\n      padding: 12px 16px;\r\n      border-bottom: 1px solid #f3f4f6;\r\n      \r\n      &:last-child {\r\n        border-bottom: none;\r\n      }\r\n      \r\n      &:hover {\r\n        background: #f9fafb;\r\n      }\r\n      \r\n      .error-row {\r\n        font-weight: 600;\r\n        color: #dc2626;\r\n        margin-bottom: 4px;\r\n        font-size: 14px;\r\n      }\r\n      \r\n      .error-field {\r\n        font-weight: 500;\r\n        color: #6b7280;\r\n        margin-bottom: 4px;\r\n        font-size: 13px;\r\n      }\r\n      \r\n      .error-message {\r\n        font-size: 13px;\r\n        color: #374151;\r\n        line-height: 1.4;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .success-items {\r\n    margin-top: 20px;\r\n    \r\n    .items-header {\r\n      font-weight: 600;\r\n      margin-bottom: 12px;\r\n      color: #1f2937;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n    \r\n    .items-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n      gap: 8px;\r\n      max-height: 200px;\r\n      overflow-y: auto;\r\n      padding: 12px;\r\n      background: #f8fafc;\r\n      border-radius: 8px;\r\n      border: 1px solid #e2e8f0;\r\n      \r\n      .item-code {\r\n        display: inline-block;\r\n        padding: 6px 10px;\r\n        background: linear-gradient(135deg, #e0f2fe, #bae6fd);\r\n        color: #0c4a6e;\r\n        border-radius: 6px;\r\n        font-size: 12px;\r\n        font-weight: 500;\r\n        font-family: 'Courier New', monospace;\r\n        border: 1px solid #7dd3fc;\r\n        transition: all 0.2s ease;\r\n        \r\n        &:hover {\r\n          background: linear-gradient(135deg, #bae6fd, #7dd3fc);\r\n          transform: translateY(-1px);\r\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HiddenInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 24px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid #e5e7eb;\r\n  \r\n  .left-actions {\r\n    display: flex;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .right-actions {\r\n    display: flex;\r\n    gap: 12px;\r\n  }\r\n`;\r\n\r\nconst LoadingOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 12px;\r\n  z-index: 10;\r\n`;\r\n\r\nconst requiredColumns = [\r\n  { name: '품목코드', required: true, description: '고유한 품목 식별코드 (예: ITM-001)' },\r\n  { name: '품목명', required: true, description: '품목의 이름' },\r\n  { name: '단위', required: true, description: '수량 단위 (개, kg, L 등)' },\r\n  { name: '최소재고', required: true, description: '최소 보유 수량' },\r\n  { name: '카테고리', required: false, description: '품목 분류' },\r\n  { name: '브랜드', required: false, description: '제조사 또는 브랜드' },\r\n  { name: '사양', required: false, description: '제품 상세 사양' },\r\n  { name: '단가', required: false, description: '품목 단가 (원)' },\r\n  { name: '통화', required: false, description: '가격 통화 (KRW, USD 등)' },\r\n  { name: '위치', required: false, description: '보관 위치' },\r\n  { name: '창고', required: false, description: '창고명' },\r\n  { name: '공급업체', required: false, description: '공급업체명' },\r\n  { name: '최대재고', required: false, description: '최대 보유 수량' },\r\n  { name: '설명', required: false, description: '품목 설명' },\r\n  { name: '비고', required: false, description: '추가 메모' },\r\n];\r\n\r\nconst InventoryExcelUpload: React.FC<InventoryExcelUploadProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onSuccess\r\n}) => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  // State\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadResult, setUploadResult] = useState<UploadResult | null>(null);\r\n  const [showGuide, setShowGuide] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState<'upload' | 'processing' | 'result'>('upload');\r\n\r\n  // 🔥 개선된 업로드 Mutation\r\n  const uploadMutation = useMutation({\r\n    mutationFn: inventoryApi.uploadExcel,\r\n    onMutate: () => {\r\n      setCurrentStep('processing');\r\n      setUploadProgress(0);\r\n      \r\n      // 진행률 시뮬레이션\r\n      const progressInterval = setInterval(() => {\r\n        setUploadProgress(prev => {\r\n          if (prev >= 90) {\r\n            clearInterval(progressInterval);\r\n            return 90;\r\n          }\r\n          return prev + Math.random() * 10;\r\n        });\r\n      }, 500);\r\n      \r\n      return { progressInterval };\r\n    },\r\n    onSuccess: (result: UploadResult, _, context) => {\r\n      if (context?.progressInterval) {\r\n        clearInterval(context.progressInterval);\r\n      }\r\n      \r\n      setUploadProgress(100);\r\n      setCurrentStep('result');\r\n      setUploadResult(result);\r\n      \r\n      // 쿼리 무효화\r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory'] });\r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory-stats'] });\r\n      \r\n      // 성공 메시지\r\n      const successMsg = result.updated_count && result.updated_count > 0 \r\n        ? `${result.created_count}개 신규 등록, ${result.updated_count}개 업데이트 완료!`\r\n        : `${result.created_count}개 품목이 성공적으로 등록되었습니다!`;\r\n      \r\n      toast.success(successMsg, {\r\n        position: 'top-center',\r\n        autoClose: 5000,\r\n      });\r\n      \r\n      // 부모 컴포넌트에 성공 알림\r\n      onSuccess();\r\n    },\r\n    onError: (error: any, _, context) => {\r\n      if (context?.progressInterval) {\r\n        clearInterval(context.progressInterval);\r\n      }\r\n      \r\n      setCurrentStep('result');\r\n      setUploadProgress(0);\r\n      \r\n      // 에러 결과 설정\r\n      setUploadResult({\r\n        success: false,\r\n        created_count: 0,\r\n        created_items: [],\r\n        errors: [{ \r\n          row: 0, \r\n          field: 'file', \r\n          message: error.message || '업로드 중 알 수 없는 오류가 발생했습니다.' \r\n        }],\r\n      });\r\n      \r\n      toast.error(error.message || '업로드에 실패했습니다.', {\r\n        position: 'top-center',\r\n        autoClose: 7000,\r\n      });\r\n    },\r\n  });\r\n\r\n  // 🔥 개선된 템플릿 다운로드 Mutation\r\n  const downloadTemplateMutation = useMutation({\r\n    mutationFn: inventoryApi.downloadTemplate,\r\n    onSuccess: () => {\r\n      toast.success('템플릿이 성공적으로 다운로드되었습니다!', {\r\n        position: 'top-right',\r\n      });\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.message || '템플릿 다운로드에 실패했습니다.', {\r\n        position: 'top-right',\r\n      });\r\n    },\r\n  });\r\n\r\n  // 파일 선택 핸들러\r\n  const handleFileSelect = useCallback((file: File) => {\r\n    if (!file) return;\r\n    \r\n    console.log('📁 파일 선택:', file.name, file.size);\r\n    \r\n    // 파일 확장자 검증\r\n    if (!file.name.match(/\\.(xlsx|xls)$/i)) {\r\n      toast.error('Excel 파일만 업로드 가능합니다 (.xlsx, .xls)', {\r\n        position: 'top-center',\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // 파일 크기 검증 (10MB)\r\n    const maxSize = 10 * 1024 * 1024;\r\n    if (file.size > maxSize) {\r\n      toast.error('파일 크기는 10MB를 초과할 수 없습니다.', {\r\n        position: 'top-center',\r\n      });\r\n      return;\r\n    }\r\n    \r\n    setSelectedFile(file);\r\n    setUploadResult(null);\r\n    setCurrentStep('upload');\r\n    \r\n    toast.success('파일이 선택되었습니다. 업로드 버튼을 클릭하세요.', {\r\n      position: 'top-right',\r\n      autoClose: 3000,\r\n    });\r\n  }, []);\r\n\r\n  // 업로드 실행\r\n  const handleUpload = useCallback(() => {\r\n    if (!selectedFile) {\r\n      toast.error('파일을 먼저 선택해주세요.', {\r\n        position: 'top-center',\r\n      });\r\n      return;\r\n    }\r\n    \r\n    console.log('🚀 업로드 시작:', selectedFile.name);\r\n    uploadMutation.mutate(selectedFile);\r\n  }, [selectedFile, uploadMutation]);\r\n\r\n  // 드래그 앤 드롭 핸들러들\r\n  const handleDrop = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    if (uploadMutation.isPending) return;\r\n    \r\n    const files = e.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      handleFileSelect(files[0]);\r\n    }\r\n  }, [uploadMutation.isPending, handleFileSelect]);\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    if (!uploadMutation.isPending) {\r\n      setDragOver(true);\r\n    }\r\n  }, [uploadMutation.isPending]);\r\n\r\n  const handleDragLeave = useCallback(() => {\r\n    setDragOver(false);\r\n  }, []);\r\n\r\n  // 파일 입력 클릭\r\n  const handleFileInputClick = useCallback(() => {\r\n    if (uploadMutation.isPending) return;\r\n    const input = document.getElementById('inventory-excel-file-input') as HTMLInputElement;\r\n    input?.click();\r\n  }, [uploadMutation.isPending]);\r\n\r\n  // 업로드 초기화\r\n  const resetUpload = useCallback(() => {\r\n    setSelectedFile(null);\r\n    setUploadResult(null);\r\n    setUploadProgress(0);\r\n    setCurrentStep('upload');\r\n  }, []);\r\n\r\n  // 모달 닫기\r\n  const handleClose = useCallback(() => {\r\n    if (uploadMutation.isPending) {\r\n      const confirm = window.confirm('업로드가 진행 중입니다. 정말로 취소하시겠습니까?');\r\n      if (!confirm) return;\r\n    }\r\n    \r\n    resetUpload();\r\n    setShowGuide(false);\r\n    onClose();\r\n  }, [uploadMutation.isPending, resetUpload, onClose]);\r\n\r\n  // 파일 크기 포맷팅\r\n  const formatFileSize = (bytes: number): string => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      title=\"품목 Excel 일괄 업로드\"\r\n      size=\"xl\"\r\n    >\r\n      {showGuide ? (\r\n        // 가이드 표시\r\n        <div>\r\n          <ExcelUploadGuide type=\"inventory\" />\r\n          <div style={{ \r\n            display: 'flex', \r\n            justifyContent: 'center', \r\n            marginTop: '24px', \r\n            paddingTop: '24px', \r\n            borderTop: '1px solid #e5e7eb' \r\n          }}>\r\n            <Button variant=\"outline\" onClick={() => setShowGuide(false)}>\r\n              <ArrowLeft size={16} />\r\n              업로드로 돌아가기\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        // 메인 업로드 UI\r\n        <UploadContainer>\r\n          {/* 안내 정보 */}\r\n          <InfoSection>\r\n            <div className=\"info-header\">\r\n              <Database className=\"info-icon\" size={20} />\r\n              <div className=\"info-title\">품목 일괄 등록 안내</div>\r\n            </div>\r\n            <div className=\"info-content\">\r\n              <div className=\"info-item\">\r\n                <div className=\"bullet\" />\r\n                <span>Excel 템플릿을 다운로드하여 품목 정보를 입력해주세요.</span>\r\n              </div>\r\n              <div className=\"info-item\">\r\n                <div className=\"bullet\" />\r\n                <span>품목코드는 고유해야 하며, 중복 시 기존 품목이 업데이트됩니다.</span>\r\n              </div>\r\n              <div className=\"info-item\">\r\n                <div className=\"bullet\" />\r\n                <span>최대 1,000개 품목까지 한 번에 업로드할 수 있습니다.</span>\r\n              </div>\r\n              <div className=\"info-item\">\r\n                <div className=\"bullet\" />\r\n                <span>파일 크기는 10MB를 초과할 수 없습니다.</span>\r\n              </div>\r\n            </div>\r\n          </InfoSection>\r\n\r\n          {/* 템플릿 다운로드 섹션 */}\r\n          <TemplateSection>\r\n            <div className=\"template-header\">\r\n              <div className=\"template-title\">📋 1단계: Excel 템플릿 다운로드</div>\r\n              <div className=\"template-description\">\r\n                먼저 템플릿을 다운로드하여 올바른 형식을 확인하세요. \r\n                템플릿에는 필수 컬럼과 샘플 데이터가 포함되어 있습니다.\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"template-actions\">\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => downloadTemplateMutation.mutate()}\r\n                disabled={downloadTemplateMutation.isPending}\r\n                loading={downloadTemplateMutation.isPending}\r\n              >\r\n                <Download size={16} />\r\n                품목 등록 템플릿 다운로드\r\n              </Button>\r\n              \r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => setShowGuide(true)}\r\n                size=\"sm\"\r\n              >\r\n                <Info size={16} />\r\n                상세 가이드 보기\r\n              </Button>\r\n            </div>\r\n          </TemplateSection>\r\n\r\n          {/* 파일 업로드 영역 */}\r\n          {currentStep === 'upload' && (\r\n            <div>\r\n              <div style={{ \r\n                fontSize: '1.1rem', \r\n                fontWeight: '600', \r\n                marginBottom: '12px',\r\n                color: '#1f2937'\r\n              }}>\r\n                📤 2단계: Excel 파일 업로드\r\n              </div>\r\n              \r\n              <UploadArea\r\n                isDragOver={dragOver}\r\n                disabled={uploadMutation.isPending}\r\n                onDrop={handleDrop}\r\n                onDragOver={handleDragOver}\r\n                onDragLeave={handleDragLeave}\r\n                onClick={handleFileInputClick}\r\n              >\r\n                {uploadMutation.isPending && (\r\n                  <LoadingOverlay>\r\n                    <Loader size={32} className=\"status-icon\" />\r\n                  </LoadingOverlay>\r\n                )}\r\n                \r\n                <Package size={48} className=\"upload-icon\" />\r\n                \r\n                <div className=\"upload-title\">\r\n                  {selectedFile ? '파일이 선택되었습니다' : 'Excel 파일을 선택하세요'}\r\n                </div>\r\n                \r\n                <div className=\"upload-subtitle\">\r\n                  {selectedFile \r\n                    ? '아래 업로드 버튼을 클릭하여 업로드를 시작하세요'\r\n                    : '파일을 여기에 끌어다 놓거나 클릭하여 선택하세요'\r\n                  }\r\n                </div>\r\n                \r\n                {selectedFile && (\r\n                  <div className=\"file-info\">\r\n                    <div className=\"file-name\">📄 {selectedFile.name}</div>\r\n                    <div className=\"file-size\">파일 크기: {formatFileSize(selectedFile.size)}</div>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className=\"upload-hint\">\r\n                  .xlsx, .xls 파일만 지원됩니다 (최대 10MB)\r\n                </div>\r\n              </UploadArea>\r\n            </div>\r\n          )}\r\n\r\n          <HiddenInput\r\n            id=\"inventory-excel-file-input\"\r\n            type=\"file\"\r\n            accept=\".xlsx,.xls\"\r\n            onChange={(e) => {\r\n              const file = e.target.files?.[0];\r\n              if (file) handleFileSelect(file);\r\n            }}\r\n            disabled={uploadMutation.isPending}\r\n          />\r\n\r\n          {/* 업로드 진행률 */}\r\n          {currentStep === 'processing' && (\r\n            <ProgressSection>\r\n              <div className=\"progress-header\">\r\n                <div className=\"progress-title\">📊 업로드 진행중...</div>\r\n                <div className=\"progress-percentage\">{Math.round(uploadProgress)}%</div>\r\n              </div>\r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-fill\" \r\n                  style={{ width: `${uploadProgress}%` }}\r\n                />\r\n              </div>\r\n              <div className=\"progress-status\">\r\n                <Loader size={16} className=\"status-icon\" />\r\n                <span>Excel 파일을 분석하고 품목을 생성하는 중입니다...</span>\r\n              </div>\r\n            </ProgressSection>\r\n          )}\r\n\r\n          {/* 업로드 결과 */}\r\n          {currentStep === 'result' && uploadResult && (\r\n            <ResultSection success={uploadResult.success}>\r\n              <div className=\"result-header\">\r\n                <div className=\"result-icon\">\r\n                  {uploadResult.success ? (\r\n                    <CheckCircle size={32} />\r\n                  ) : (\r\n                    <AlertCircle size={32} />\r\n                  )}\r\n                </div>\r\n                <div className=\"result-title\">\r\n                  {uploadResult.success ? '🎉 업로드 완료!' : '❌ 업로드 실패'}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"result-summary\">\r\n                <div className=\"summary-grid\">\r\n                  <div className=\"summary-item\">\r\n                    <div className=\"value\">{uploadResult.created_count}</div>\r\n                    <div className=\"label\">신규 등록</div>\r\n                  </div>\r\n                  \r\n                  {uploadResult.updated_count && uploadResult.updated_count > 0 && (\r\n                    <div className=\"summary-item\">\r\n                      <div className=\"value\">{uploadResult.updated_count}</div>\r\n                      <div className=\"label\">업데이트</div>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {uploadResult.total_processed && (\r\n                    <div className=\"summary-item\">\r\n                      <div className=\"value\">{uploadResult.total_processed}</div>\r\n                      <div className=\"label\">총 처리</div>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {uploadResult.errors && uploadResult.errors.length > 0 && (\r\n                    <div className=\"summary-item\">\r\n                      <div className=\"value\">{uploadResult.errors.length}</div>\r\n                      <div className=\"label\">오류 발생</div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* 성공한 품목 코드들 */}\r\n              {uploadResult.success && uploadResult.created_items.length > 0 && (\r\n                <div className=\"success-items\">\r\n                  <div className=\"items-header\">\r\n                    <Package size={16} />\r\n                    생성된 품목 코드 ({uploadResult.created_items.length}개)\r\n                  </div>\r\n                  <div className=\"items-grid\">\r\n                    {uploadResult.created_items.slice(0, 50).map((code, index) => (\r\n                      <span key={index} className=\"item-code\">\r\n                        {code}\r\n                      </span>\r\n                    ))}\r\n                    {uploadResult.created_items.length > 50 && (\r\n                      <span className=\"item-code\">\r\n                        +{uploadResult.created_items.length - 50}개 더\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* 오류 상세 내역 */}\r\n              {uploadResult.errors && uploadResult.errors.length > 0 && (\r\n                <div className=\"error-details\">\r\n                  <div className=\"error-header\">\r\n                    오류 상세 내역 ({uploadResult.errors.length}건)\r\n                  </div>\r\n                  {uploadResult.errors.slice(0, 20).map((error, index) => (\r\n                    <div key={index} className=\"error-item\">\r\n                      <div className=\"error-row\">\r\n                        📍 행 {error.row}\r\n                      </div>\r\n                      <div className=\"error-field\">\r\n                        필드: {error.field}\r\n                      </div>\r\n                      <div className=\"error-message\">\r\n                        {error.message}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  {uploadResult.errors.length > 20 && (\r\n                    <div className=\"error-item\">\r\n                      <div className=\"error-message\" style={{ textAlign: 'center', fontStyle: 'italic' }}>\r\n                        ... 및 {uploadResult.errors.length - 20}개의 추가 오류\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </ResultSection>\r\n          )}\r\n\r\n          {/* 버튼 그룹 */}\r\n          <ButtonGroup>\r\n            <div className=\"left-actions\">\r\n              {currentStep === 'result' && (\r\n                <Button variant=\"outline\" onClick={resetUpload}>\r\n                  <RefreshCw size={16} />\r\n                  다시 업로드\r\n                </Button>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"right-actions\">\r\n              <Button \r\n                variant=\"outline\" \r\n                onClick={handleClose}\r\n                disabled={uploadMutation.isPending}\r\n              >\r\n                <X size={16} />\r\n                {uploadMutation.isPending ? '업로드 중...' : '닫기'}\r\n              </Button>\r\n              \r\n              {selectedFile && currentStep === 'upload' && (\r\n                <Button \r\n                  onClick={handleUpload}\r\n                  disabled={uploadMutation.isPending}\r\n                  loading={uploadMutation.isPending}\r\n                >\r\n                  <Upload size={16} />\r\n                  업로드 시작\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </ButtonGroup>\r\n        </UploadContainer>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InventoryExcelUpload;","// client/src/components/inventory/TransactionDocumentModal.tsx - 개선된 버전\r\nimport React, { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Upload, FileText, X, ExternalLink, CheckCircle, AlertCircle } from 'lucide-react';\r\nimport Button from '../common/Button';\r\n\r\nconst ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 9999;\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n  background: white;\r\n  border-radius: 12px;\r\n  width: 90%;\r\n  max-width: 600px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);\r\n`;\r\n\r\nconst ModalHeader = styled.div`\r\n  padding: 24px;\r\n  border-bottom: 1px solid #e5e7eb;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  \r\n  h2 {\r\n    margin: 0;\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    color: #111827;\r\n  }\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  padding: 24px;\r\n  max-height: calc(90vh - 140px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst CurrentFileSection = styled.div<{ hasFile: boolean }>`\r\n  margin-bottom: 24px;\r\n  padding: 16px;\r\n  background: ${props => props.hasFile ? '#f0f9ff' : '#fefce8'};\r\n  border-radius: 8px;\r\n  border: 1px solid ${props => props.hasFile ? '#bfdbfe' : '#fde047'};\r\n  \r\n  .current-file-title {\r\n    font-weight: 600;\r\n    color: ${props => props.hasFile ? '#1e40af' : '#a16207'};\r\n    margin-bottom: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n  }\r\n  \r\n  .current-file-info {\r\n    color: #374151;\r\n    font-size: 0.9rem;\r\n    margin-bottom: 12px;\r\n  }\r\n  \r\n  .current-file-actions {\r\n    display: flex;\r\n    gap: 8px;\r\n  }\r\n`;\r\n\r\nconst UploadArea = styled.div<{ dragOver: boolean; hasError: boolean }>`\r\n  border: 2px dashed ${props => \r\n    props.hasError ? '#ef4444' : \r\n    props.dragOver ? '#3b82f6' : '#d1d5db'\r\n  };\r\n  border-radius: 12px;\r\n  padding: 48px 24px;\r\n  text-align: center;\r\n  background: ${props => \r\n    props.hasError ? '#fef2f2' :\r\n    props.dragOver ? '#eff6ff' : '#f9fafb'\r\n  };\r\n  transition: all 0.2s ease;\r\n  cursor: pointer;\r\n  margin-bottom: 24px;\r\n  \r\n  &:hover {\r\n    border-color: ${props => props.hasError ? '#ef4444' : '#3b82f6'};\r\n    background: ${props => props.hasError ? '#fef2f2' : '#eff6ff'};\r\n  }\r\n  \r\n  .upload-icon {\r\n    margin-bottom: 16px;\r\n    color: ${props => \r\n      props.hasError ? '#ef4444' :\r\n      props.dragOver ? '#3b82f6' : '#6b7280'\r\n    };\r\n  }\r\n  \r\n  .upload-title {\r\n    font-size: 1.125rem;\r\n    font-weight: 600;\r\n    color: ${props => props.hasError ? '#dc2626' : '#374151'};\r\n    margin-bottom: 8px;\r\n  }\r\n  \r\n  .upload-subtitle {\r\n    color: ${props => props.hasError ? '#dc2626' : '#6b7280'};\r\n    font-size: 0.875rem;\r\n    line-height: 1.5;\r\n  }\r\n`;\r\n\r\nconst SelectedFilePreview = styled.div`\r\n  margin-top: 20px;\r\n  padding: 16px;\r\n  background: #f0fdf4;\r\n  border-radius: 8px;\r\n  border: 1px solid #bbf7d0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  \r\n  .file-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    flex: 1;\r\n    \r\n    .file-icon {\r\n      color: #16a34a;\r\n    }\r\n    \r\n    .file-details {\r\n      .file-name {\r\n        font-weight: 600;\r\n        color: #166534;\r\n        margin-bottom: 4px;\r\n        word-break: break-all;\r\n      }\r\n      \r\n      .file-size {\r\n        font-size: 0.85rem;\r\n        color: #16a34a;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .remove-file {\r\n    margin-left: 12px;\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 12px;\r\n  justify-content: flex-end;\r\n  margin-top: 32px;\r\n  padding-top: 24px;\r\n  border-top: 1px solid #e5e7eb;\r\n`;\r\n\r\nconst CloseButtonStyled = styled.button`\r\n  background: none;\r\n  border: none;\r\n  padding: 8px;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  color: #6b7280;\r\n  transition: all 0.2s;\r\n  \r\n  &:hover {\r\n    background: #f3f4f6;\r\n    color: #374151;\r\n  }\r\n`;\r\n\r\nconst FileValidationMessage = styled.div<{ type: 'success' | 'error' | 'warning' }>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  font-size: 0.875rem;\r\n  margin-top: 16px;\r\n  \r\n  ${props => {\r\n    switch (props.type) {\r\n      case 'success':\r\n        return `\r\n          background: #f0fdf4;\r\n          color: #166534;\r\n          border: 1px solid #bbf7d0;\r\n        `;\r\n      case 'error':\r\n        return `\r\n          background: #fef2f2;\r\n          color: #dc2626;\r\n          border: 1px solid #fecaca;\r\n        `;\r\n      case 'warning':\r\n        return `\r\n          background: #fffbeb;\r\n          color: #92400e;\r\n          border: 1px solid #fde68a;\r\n        `;\r\n    }\r\n  }}\r\n`;\r\n\r\ninterface InventoryItem {\r\n  id: number;\r\n  item_name: string;\r\n  transaction_document_url?: string;\r\n  transaction_upload_date?: string;\r\n  transaction_uploaded_by?: string;\r\n}\r\n\r\ninterface TransactionDocumentModalProps {\r\n  isOpen: boolean;\r\n  item: InventoryItem | null;\r\n  onClose: () => void;\r\n  onSubmit: (file: File) => void;\r\n  loading?: boolean;\r\n}\r\n\r\nconst TransactionDocumentModal: React.FC<TransactionDocumentModalProps> = ({\r\n  isOpen,\r\n  item,\r\n  onClose,\r\n  onSubmit,\r\n  loading = false\r\n}) => {\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const [uploadError, setUploadError] = useState<string>('');\r\n  const [validationMessage, setValidationMessage] = useState<{\r\n    type: 'success' | 'error' | 'warning';\r\n    message: string;\r\n  } | null>(null);\r\n\r\n  if (!isOpen || !item) return null;\r\n\r\n  const validateFile = (file: File): { isValid: boolean; message: string; type: 'success' | 'error' | 'warning' } => {\r\n    // 파일 형식 검증\r\n    const allowedTypes = [\r\n      'application/pdf',\r\n      'image/jpeg',\r\n      'image/png', \r\n      'image/jpg',\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', // xlsx\r\n      'application/vnd.ms-excel' // xls\r\n    ];\r\n    \r\n    if (!allowedTypes.includes(file.type)) {\r\n      return {\r\n        isValid: false,\r\n        message: 'PDF, 이미지 파일 또는 Excel 파일만 업로드 가능합니다.',\r\n        type: 'error'\r\n      };\r\n    }\r\n    \r\n    // 파일 크기 검증 (10MB)\r\n    if (file.size > 10 * 1024 * 1024) {\r\n      return {\r\n        isValid: false,\r\n        message: '파일 크기는 10MB를 초과할 수 없습니다.',\r\n        type: 'error'\r\n      };\r\n    }\r\n    \r\n    // 파일 크기 경고 (5MB 이상)\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      return {\r\n        isValid: true,\r\n        message: '파일 크기가 큽니다. 업로드에 시간이 걸릴 수 있습니다.',\r\n        type: 'warning'\r\n      };\r\n    }\r\n    \r\n    return {\r\n      isValid: true,\r\n      message: '업로드 가능한 파일입니다.',\r\n      type: 'success'\r\n    };\r\n  };\r\n\r\n  const handleFileSelect = useCallback((file: File) => {\r\n    setUploadError('');\r\n    \r\n    const validation = validateFile(file);\r\n    setValidationMessage(validation);\r\n    \r\n    if (validation.isValid) {\r\n      setSelectedFile(file);\r\n    } else {\r\n      setSelectedFile(null);\r\n    }\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    const files = Array.from(e.dataTransfer.files);\r\n    if (files.length > 1) {\r\n      setValidationMessage({\r\n        type: 'error',\r\n        message: '한 번에 하나의 파일만 업로드할 수 있습니다.'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    const file = files[0];\r\n    if (file) handleFileSelect(file);\r\n  }, [handleFileSelect]);\r\n\r\n  const handleFileInput = useCallback(() => {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = '.pdf,.jpg,.jpeg,.png,.xlsx,.xls';\r\n    input.onchange = (e) => {\r\n      const file = (e.target as HTMLInputElement).files?.[0];\r\n      if (file) handleFileSelect(file);\r\n    };\r\n    input.click();\r\n  }, [handleFileSelect]);\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedFile) {\r\n      setUploadError('');\r\n      onSubmit(selectedFile);\r\n      setSelectedFile(null);\r\n      setValidationMessage(null);\r\n    }\r\n  };\r\n\r\n  const handleViewCurrent = () => {\r\n    if (item.transaction_document_url) {\r\n      const fullUrl = item.transaction_document_url.startsWith('http') \r\n        ? item.transaction_document_url \r\n        // : `http://192.168.0.16:8000${item.transaction_document_url}`;\r\n        : `http://221.44.183.165:8000${item.transaction_document_url}`;\r\n      window.open(fullUrl, '_blank');\r\n    }\r\n  };\r\n\r\n  const handleRemoveFile = () => {\r\n    setSelectedFile(null);\r\n    setValidationMessage(null);\r\n    setUploadError('');\r\n  };\r\n\r\n  const formatFileSize = (bytes: number): string => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const getFileTypeIcon = (type: string) => {\r\n    if (type.includes('pdf')) return '📄';\r\n    if (type.includes('image')) return '🖼️';\r\n    if (type.includes('excel') || type.includes('spreadsheet')) return '📊';\r\n    return '📄';\r\n  };\r\n\r\n  const hasCurrentFile = Boolean(item.transaction_document_url);\r\n\r\n  return (\r\n    <ModalOverlay onClick={onClose}>\r\n      <ModalContainer onClick={(e) => e.stopPropagation()}>\r\n        <ModalHeader>\r\n          <h2>거래명세서 관리 - {item.item_name}</h2>\r\n          <CloseButtonStyled onClick={onClose}>\r\n            <X size={20} />\r\n          </CloseButtonStyled>\r\n        </ModalHeader>\r\n        \r\n        <ModalContent>\r\n          {/* 현재 업로드된 파일 표시 */}\r\n          <CurrentFileSection hasFile={hasCurrentFile}>\r\n            <div className=\"current-file-title\">\r\n              {hasCurrentFile ? (\r\n                <>\r\n                  <CheckCircle size={18} />\r\n                  현재 업로드된 거래명세서\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <AlertCircle size={18} />\r\n                  거래명세서가 업로드되지 않음\r\n                </>\r\n              )}\r\n            </div>\r\n            \r\n            {hasCurrentFile ? (\r\n              <>\r\n                <div className=\"current-file-info\">\r\n                  업로드일: {item.transaction_upload_date ? \r\n                    new Date(item.transaction_upload_date).toLocaleDateString('ko-KR', {\r\n                      year: 'numeric',\r\n                      month: 'long',\r\n                      day: 'numeric',\r\n                      hour: '2-digit',\r\n                      minute: '2-digit'\r\n                    }) : '정보 없음'}\r\n                  {item.transaction_uploaded_by && (\r\n                    <> • 업로드자: {item.transaction_uploaded_by}</>\r\n                  )}\r\n                </div>\r\n                <div className=\"current-file-actions\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline\"\r\n                    onClick={handleViewCurrent}\r\n                    style={{\r\n                      background: '#dbeafe',\r\n                      color: '#1d4ed8',\r\n                      border: '1px solid #3b82f6'\r\n                    }}\r\n                  >\r\n                    <ExternalLink size={14} />\r\n                    현재 파일 보기\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"current-file-info\">\r\n                이 품목에는 아직 거래명세서가 업로드되지 않았습니다. \r\n                구매 관련 서류를 체계적으로 관리하기 위해 거래명세서를 업로드해 주세요.\r\n              </div>\r\n            )}\r\n          </CurrentFileSection>\r\n\r\n          {/* 파일 업로드 영역 */}\r\n          <UploadArea\r\n            dragOver={dragOver}\r\n            hasError={Boolean(uploadError)}\r\n            onDragOver={(e) => { \r\n              e.preventDefault(); \r\n              setDragOver(true); \r\n            }}\r\n            onDragLeave={() => setDragOver(false)}\r\n            onDrop={handleDrop}\r\n            onClick={handleFileInput}\r\n          >\r\n            <div className=\"upload-icon\">\r\n              <Upload size={48} />\r\n            </div>\r\n            <div className=\"upload-title\">\r\n              {hasCurrentFile ? '새 파일로 교체' : '거래명세서 파일 업로드'}\r\n            </div>\r\n            <div className=\"upload-subtitle\">\r\n              PDF, 이미지 파일 또는 Excel 파일을 드래그하거나 클릭하여 선택하세요<br />\r\n              <strong>지원 형식:</strong> PDF, JPG, PNG, XLSX, XLS<br />\r\n              <strong>최대 크기:</strong> 10MB\r\n            </div>\r\n          </UploadArea>\r\n\r\n          {/* 업로드 오류 표시 */}\r\n          {uploadError && (\r\n            <FileValidationMessage type=\"error\">\r\n              <AlertCircle size={16} />\r\n              {uploadError}\r\n            </FileValidationMessage>\r\n          )}\r\n\r\n          {/* 파일 검증 메시지 */}\r\n          {validationMessage && (\r\n            <FileValidationMessage type={validationMessage.type}>\r\n              {validationMessage.type === 'success' && <CheckCircle size={16} />}\r\n              {validationMessage.type === 'error' && <AlertCircle size={16} />}\r\n              {validationMessage.type === 'warning' && <AlertCircle size={16} />}\r\n              {validationMessage.message}\r\n            </FileValidationMessage>\r\n          )}\r\n\r\n          {/* 선택된 파일 미리보기 */}\r\n          {selectedFile && (\r\n            <SelectedFilePreview>\r\n              <div className=\"file-info\">\r\n                <div style={{ fontSize: '1.5rem' }}>\r\n                  {getFileTypeIcon(selectedFile.type)}\r\n                </div>\r\n                <div className=\"file-details\">\r\n                  <div className=\"file-name\">{selectedFile.name}</div>\r\n                  <div className=\"file-size\">\r\n                    {formatFileSize(selectedFile.size)} • {selectedFile.type}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"remove-file\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"outline\"\r\n                  onClick={handleRemoveFile}\r\n                  title=\"파일 제거\"\r\n                >\r\n                  <X size={16} />\r\n                </Button>\r\n              </div>\r\n            </SelectedFilePreview>\r\n          )}\r\n\r\n          {/* 안내 메시지 */}\r\n          <div style={{ \r\n            marginTop: '20px', \r\n            padding: '16px', \r\n            background: '#fef3c7', \r\n            borderRadius: '8px',\r\n            fontSize: '0.875rem',\r\n            color: '#92400e'\r\n          }}>\r\n            <strong>💡 팁:</strong> 거래명세서를 업로드하면 해당 품목의 구매 관련 서류를 체계적으로 관리할 수 있습니다. \r\n            업로드된 파일은 언제든지 조회하고 다운로드할 수 있으며, 새 파일로 교체도 가능합니다.\r\n          </div>\r\n        </ModalContent>\r\n        \r\n        <div style={{ padding: '24px' }}>\r\n          <ButtonGroup>\r\n            <Button \r\n              variant=\"secondary\" \r\n              onClick={onClose}\r\n              disabled={loading}\r\n            >\r\n              취소\r\n            </Button>\r\n            <Button \r\n              variant=\"primary\" \r\n              onClick={handleSubmit} \r\n              disabled={!selectedFile || loading || validationMessage?.type === 'error'}\r\n              loading={loading}\r\n            >\r\n              {loading ? '업로드 중...' : (hasCurrentFile ? '파일 교체' : '업로드 등록')}\r\n            </Button>\r\n          </ButtonGroup>\r\n        </div>\r\n      </ModalContainer>\r\n    </ModalOverlay>\r\n  );\r\n};\r\n\r\nexport default TransactionDocumentModal;","// client/src/components/inventory/InventoryPage.tsx - 수정된 버전\r\nimport React, { useState, useMemo, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { toast } from 'react-toastify';\r\nimport { Plus, Download, Filter, RefreshCw, Edit, Trash2, Package, X, ZoomIn, ZoomOut, FileText, CheckCircle  } from 'lucide-react';\r\n\r\n// Components\r\nimport Table from '../common/Table';\r\nimport Button from '../common/Button';\r\nimport Card from '../common/Card';\r\nimport Pagination from '../common/Pagination';\r\nimport LoadingSpinner from '../common/LoadingSpinner';\r\nimport Modal from '../common/Modal';\r\nimport InventoryFilters from './InventoryFilters';\r\nimport InventoryForm from './InventoryForm';\r\nimport ReceiptModal from './ReceiptModal';\r\n\r\nimport InventoryExcelUpload from './InventoryExcelUpload';\r\nimport TransactionDocumentModal from './TransactionDocumentModal';\r\n\r\n// Services\r\nimport api from '../../services/api';\r\nimport { inventoryApi } from '../../services/api';\r\nimport { UnifiedInventoryItem as InventoryItem } from '../../services/api';\r\n\r\n// Types\r\nimport { TableColumn, SearchFilters } from '../../types';\r\n\r\ninterface InventoryItem {\r\n  id: number;\r\n  item_code: string;\r\n  item_name: string;\r\n  category?: string;\r\n  brand?: string;\r\n  current_quantity: number;\r\n  total_received: number;\r\n  reserved_quantity: number;\r\n  minimum_stock: number;\r\n  maximum_stock?: number;\r\n  unit_price?: number;\r\n  currency: string;\r\n  supplier_name?: string;\r\n  supplier_contact?: string;\r\n  location?: string;\r\n  warehouse?: string;\r\n  is_active: boolean;\r\n  description?: string;\r\n  receipt_history?: ReceiptHistory[];\r\n  condition_quantities?: { [key: string]: number };\r\n  last_received_date?: string;\r\n  last_received_by?: string;\r\n  stock_status: 'normal' | 'low_stock' | 'out_of_stock' | 'overstocked';\r\n  created_at: string;\r\n  updated_at?: string;\r\n  image_urls?: string[];\r\n  main_image_url?: string;\r\n  transaction_document_url?: string;\r\n  transaction_upload_date?: string;\r\n  transaction_uploaded_by?: string;\r\n}\r\n\r\ninterface ReceiptHistory {\r\n  receipt_number: string;\r\n  item_name: string;\r\n  expected_quantity: number;\r\n  received_quantity: number;\r\n  receiver_name: string;\r\n  department: string;\r\n  received_date: string;\r\n  condition?: string;\r\n  notes?: string;\r\n  image_urls?: string[];\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  \r\n  /* 🔥 테이블 세로 가운데 정렬 강제 적용 */\r\n  table {\r\n    td, th {\r\n      vertical-align: middle !important;\r\n      padding: 12px;\r\n    }\r\n    \r\n    tbody tr {\r\n      height: 80px; /* 행 높이를 고정하여 일관성 유지 */\r\n    }\r\n    \r\n    /* 호버 효과 개선 */\r\n    tbody tr:hover {\r\n      background-color: #f8fafc;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PageTitle = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst PageSubtitle = styled.p`\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  margin-bottom: 30px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StatCard = styled(Card)<{ color?: string }>`\r\n  text-align: center;\r\n  background: ${props => props.color ? `linear-gradient(135deg, ${props.color}20 0%, ${props.color}10 100%)` : 'white'};\r\n  border-left: 4px solid ${props => props.color || props.theme.colors.primary};\r\n  \r\n  h3 {\r\n    font-size: 2rem;\r\n    margin-bottom: 5px;\r\n    color: ${props => props.color || props.theme.colors.primary};\r\n  }\r\n  \r\n  p {\r\n    font-size: 0.9rem;\r\n    color: ${props => props.theme.colors.textSecondary};\r\n  }\r\n`;\r\n\r\n// 🔥 수정: 수령 상태 표시를 위한 새로운 컴포넌트\r\nconst ReceiptStatusBadge = styled.span<{ hasReceipts: boolean }>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 4px 12px;\r\n  border-radius: 12px;\r\n  font-size: 0.85rem;\r\n  font-weight: 500;\r\n  background: ${props => props.hasReceipts ? '#10B98120' : '#F59E0B20'};\r\n  color: ${props => props.hasReceipts ? '#10B981' : '#F59E0B'};\r\n`;\r\n\r\nconst ActionButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  min-height: 40px;\r\n`;\r\n\r\nconst StockIndicator = styled.div<{ stockLevel: 'high' | 'medium' | 'low' | 'out' }>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  \r\n  .stock-dot {\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n    background: ${props => {\r\n      switch (props.stockLevel) {\r\n        case 'high': return '#10B981';\r\n        case 'medium': return '#F59E0B';\r\n        case 'low': return '#EF4444';\r\n        case 'out': return '#6B7280';\r\n        default: return '#6B7280';\r\n      }\r\n    }};\r\n  }\r\n  \r\n  .stock-text {\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst QuantityInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n  justify-content: center;\r\n  \r\n  .main-quantity {\r\n    font-weight: bold;\r\n    font-size: 0.95rem;\r\n  }\r\n  \r\n  .sub-info {\r\n    font-size: 0.8rem;\r\n    color: #666;\r\n  }\r\n`;\r\n\r\n// 🔥 새로운: 이미지 미리보기 컴포넌트\r\nconst ImagePreviewGrid = styled.div`\r\n  display: flex;\r\n  gap: 4px;\r\n  flex-wrap: wrap;\r\n  max-width: 300px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n  .thumbnail {\r\n    width: 60px;\r\n    height: 60px;\r\n    object-fit: cover;\r\n    border-radius: 4px;\r\n    border: 1px solid #e5e7eb;\r\n    transition: all 0.2s ease;\r\n    \r\n    &:hover {\r\n      transform: scale(1.05);\r\n      border-color: #3b82f6;\r\n      box-shadow: 0 2px 8px rgba(59, 130, 246, 0.2);\r\n    }\r\n  }\r\n  \r\n  .more-images {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 60px;\r\n    height: 60px;\r\n    background: #f3f4f6;\r\n    border-radius: 4px;\r\n    font-size: 0.75rem;\r\n    color: #6b7280;\r\n    border: 1px solid #e5e7eb;\r\n  }\r\n  \r\n  .no-image {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 60px;\r\n    height: 60px;\r\n    background: #f9fafb;\r\n    border-radius: 4px;\r\n    font-size: 0.7rem;\r\n    color: #9ca3af;\r\n    border: 1px dashed #d1d5db;\r\n  }\r\n`;\r\n\r\n// 기존 스타일 컴포넌트들 아래에 추가\r\nconst ImageViewerModal = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.9);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 9999;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ImageViewerContainer = styled.div`\r\n  position: relative;\r\n  max-width: 90vw;\r\n  max-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: white;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ImageViewerHeader = styled.div`\r\n  display: flex;\r\n  justify-content: between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  background: #f8f9fa;\r\n  border-bottom: 1px solid #e9ecef;\r\n  \r\n  h3 {\r\n    margin: 0;\r\n    flex: 1;\r\n    font-size: 1.1rem;\r\n    color: #333;\r\n  }\r\n`;\r\n\r\nconst ImageViewerControls = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n`;\r\n\r\nconst ImageViewerContent = styled.div`\r\n  position: relative;\r\n  overflow: auto;\r\n  max-height: calc(90vh - 80px);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f8f9fa;\r\n`;\r\n\r\nconst ViewerImage = styled.img<{ zoom: number }>`\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  transform: scale(${props => props.zoom});\r\n  transition: transform 0.2s ease;\r\n  cursor: ${props => props.zoom > 1 ? 'grab' : 'default'};\r\n  \r\n  &:active {\r\n    cursor: ${props => props.zoom > 1 ? 'grabbing' : 'default'};\r\n  }\r\n`;\r\n\r\nconst TransactionDocumentPreview = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 60px;\r\n`;\r\nconst TransactionStatusBadge = styled.div<{ hasDocument: boolean }>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  padding: 6px 12px;\r\n  border-radius: 12px;\r\n  font-size: 0.8rem;\r\n  font-weight: 500;\r\n  cursor: ${props => props.hasDocument ? 'pointer' : 'default'};\r\n  transition: all 0.2s ease;\r\n  \r\n  ${props => props.hasDocument ? `\r\n    background: #dcfce7;\r\n    color: #166534;\r\n    border: 1px solid #bbf7d0;\r\n    \r\n    &:hover {\r\n      background: #bbf7d0;\r\n      transform: translateY(-1px);\r\n      box-shadow: 0 2px 8px rgba(22, 101, 52, 0.15);\r\n    }\r\n  ` : `\r\n    background: #fef3c7;\r\n    color: #92400e;\r\n    border: 1px solid #fcd34d;\r\n  `}\r\n`;\r\n\r\nconst TransactionButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 4px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nconst ZoomButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 36px;\r\n  height: 36px;\r\n  border: 1px solid #d1d5db;\r\n  background: white;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  \r\n  &:hover {\r\n    background: #f3f4f6;\r\n    border-color: #9ca3af;\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst DownloadButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 8px 16px;\r\n  background: #3b82f6;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: background 0.2s;\r\n  \r\n  &:hover {\r\n    background: #2563eb;\r\n  }\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 36px;\r\n  height: 36px;\r\n  border: 1px solid #d1d5db;\r\n  background: white;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n  \r\n  &:hover {\r\n    background: #f3f4f6;\r\n    border-color: #ef4444;\r\n    color: #ef4444;\r\n  }\r\n`;\r\n\r\nconst InventoryPage: React.FC = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  // State\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filters, setFilters] = useState<SearchFilters>({});\r\n  const [isFormModalOpen, setIsFormModalOpen] = useState(false);\r\n  const [isReceiptModalOpen, setIsReceiptModalOpen] = useState(false);\r\n  const [editingItem, setEditingItem] = useState<UnifiedInventoryItem  | null>(null);\r\n  const [selectedItem, setSelectedItem] = useState<UnifiedInventoryItem  | null>(null);\r\n  const [isReceiptWithImagesModalOpen, setIsReceiptWithImagesModalOpen] = useState(false);\r\n  const [selectedItemForReceipt, setSelectedItemForReceipt] = useState<UnifiedInventoryItem  | null>(null);\r\n  const [selectedImageUrl, setSelectedImageUrl] = useState<string | null>(null);\r\n  const [selectedImageName, setSelectedImageName] = useState<string>('');\r\n  const [imageZoom, setImageZoom] = useState(1);\r\n  const [isExcelUploadModalOpen, setIsExcelUploadModalOpen] = useState(false);\r\n  const [sortBy, setSortBy] = useState('created_at'); // 생성일 기준\r\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc'); // 최신순\r\n  const [isTransactionUploadModalOpen, setIsTransactionUploadModalOpen] = useState(false);\r\n  const [selectedItemForTransaction, setSelectedItemForTransaction] = useState<UnifiedInventoryItem  | null>(null);\r\n  const [selectedTransactionUrl, setSelectedTransactionUrl] = useState<string | null>(null);\r\n  const [selectedTransactionName, setSelectedTransactionName] = useState<string>('');\r\n\r\n  // 재고 목록 조회\r\n  const { \r\n    data: inventoryData, \r\n    isLoading, \r\n    error,\r\n    refetch \r\n  } = useQuery({\r\n    queryKey: ['unified-inventory', currentPage, filters],\r\n    queryFn: () => api.inventory.getItems(currentPage, 20, filters, {\r\n      sort_by: 'item_code',  // 품목코드 기준\r\n      sort_order: 'desc'     // 내림차순\r\n    }),\r\n    keepPreviousData: true,\r\n    staleTime: 5 * 60 * 1000,\r\n    retry: 3,\r\n  });\r\n\r\n\r\n  // 재고 통계 조회\r\n  const { data: statsData } = useQuery({\r\n    queryKey: ['unified-inventory-stats'],\r\n    queryFn: () => api.inventory.getStats(),\r\n    staleTime: 5 * 60 * 1000,\r\n  });\r\n\r\n  // 🔥 수정: 수령 완료 처리 (이미지 포함) - FormData 방식으로 변경\r\n  const addReceiptWithImagesMutation = useMutation({\r\n    mutationFn: async ({ itemId, receiptData, images }: { \r\n      itemId: number; \r\n      receiptData: any; \r\n      images: File[] \r\n    }) => {\r\n      const formData = new FormData();\r\n      \r\n      // 수령 데이터를 FormData에 추가\r\n      formData.append('received_quantity', receiptData.received_quantity.toString());\r\n      formData.append('receiver_name', receiptData.receiver_name);\r\n      if (receiptData.receiver_email) formData.append('receiver_email', receiptData.receiver_email);\r\n      formData.append('department', receiptData.department);\r\n      formData.append('received_date', receiptData.received_date);\r\n      if (receiptData.location) formData.append('location', receiptData.location);\r\n      formData.append('condition', receiptData.condition || 'good');\r\n      if (receiptData.notes) formData.append('notes', receiptData.notes);\r\n      \r\n      // 이미지 파일들 추가\r\n      images.forEach((image, index) => {\r\n        formData.append('images', image);\r\n      });\r\n      \r\n      // API 호출\r\n      const response = await fetch(`http://211.44.183.165:8000/api/v1/inventory/${itemId}/complete-receipt-with-images`, {\r\n      // const response = await fetch(`http://192.168.0.16:8000/api/v1/inventory/${itemId}/complete-receipt-with-images`, {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || '수령 처리 중 오류가 발생했습니다.');\r\n      }\r\n      \r\n      return response.json();\r\n    },\r\n    onSuccess: (responseData, variables) => {\r\n      console.log('수령 완료 성공:', responseData);\r\n      \r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory'] });\r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory-stats'] });\r\n      \r\n      // 안전한 itemId 참조\r\n      if (variables?.itemId) {\r\n        queryClient.invalidateQueries({ queryKey: ['inventory-item', variables.itemId] });\r\n      }\r\n      \r\n      refetch();\r\n      toast.success('🎉 수령이 완료되고 이미지가 업로드되었습니다!');\r\n      setIsReceiptWithImagesModalOpen(false);\r\n      setSelectedItemForReceipt(null);\r\n    },\r\n    onError: (error: any) => {\r\n      console.error('수령 처리 오류:', error);\r\n      toast.error(error.message || '수령 처리 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  // 나머지 mutations (기존과 동일)\r\n  const createItemMutation = useMutation({\r\n    mutationFn: api.inventory.createItem,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory'] });\r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory-stats'] });\r\n      toast.success('품목이 등록되었습니다.');\r\n      handleFormModalClose();\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.message || '품목 등록 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const updateItemMutation = useMutation({\r\n    mutationFn: ({ id, data }: { id: number; data: any }) => \r\n      api.inventory.updateItem(id, data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory'] });\r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory-stats'] });\r\n      toast.success('품목이 수정되었습니다.');\r\n      handleFormModalClose();\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.message || '품목 수정 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const deleteItemMutation = useMutation({\r\n    mutationFn: api.inventory.deleteItem,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory'] });\r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory-stats'] });\r\n      toast.success('품목이 삭제되었습니다.');\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.message || '삭제 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const addReceiptMutation = useMutation({\r\n    mutationFn: ({ itemId, receiptData }: { itemId: number; receiptData: any }) =>\r\n      api.inventory.addReceipt(itemId, receiptData),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory'] });\r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory-stats'] });\r\n      toast.success('수령 내역이 추가되었습니다.');\r\n      setIsReceiptModalOpen(false);\r\n      setSelectedItem(null);\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.message || '수령 추가 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const exportMutation = useMutation({\r\n    mutationFn: () => api.inventory.exportData(),\r\n    onSuccess: (blob: Blob) => {\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `inventory_${new Date().toISOString().split('T')[0]}.xlsx`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n      toast.success('Excel 파일이 다운로드되었습니다.');\r\n    },\r\n    onError: () => {\r\n      toast.error('내보내기 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const uploadTransactionDocumentMutation = useMutation({\r\n    mutationFn: ({ itemId, file }: { itemId: number; file: File }) =>\r\n      api.inventory.uploadTransactionDocument(itemId, file),\r\n    onSuccess: (responseData) => {\r\n      \r\n      queryClient.invalidateQueries({ queryKey: ['unified-inventory'] });\r\n      if (responseData.transaction_document_url && selectedItemForTransaction) {\r\n        setSelectedItemForTransaction({\r\n          ...selectedItemForTransaction,\r\n          transaction_document_url: responseData.transaction_document_url\r\n        });\r\n      }\r\n      toast.success('거래명세서가 업로드되었습니다.');\r\n      setIsTransactionUploadModalOpen(false);\r\n      setSelectedItemForTransaction(null);\r\n    },\r\n    onError: (error: any) => {\r\n      toast.error(error.response?.data?.message || '거래명세서 업로드 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  // 🔥 수정: 수령 상태 판단 함수\r\n  const hasReceipts = (item: InventoryItem): boolean => {\r\n    // 1. receipt_history 배열 확인\r\n    const hasReceiptHistory = item.receipt_history && item.receipt_history.length > 0;\r\n    \r\n    // 2. last_received_date 확인\r\n    const hasLastReceived = Boolean(item.last_received_date);\r\n    \r\n    // 3. last_received_by 확인\r\n    const hasReceivedBy = Boolean(item.last_received_by);\r\n    \r\n    // 4. 총 수령량 확인\r\n    const hasTotalReceived = item.total_received && item.total_received > 0;\r\n    \r\n    // 어느 하나라도 있으면 수령 완료로 판단\r\n    const result = hasReceiptHistory || hasLastReceived || hasReceivedBy || hasTotalReceived;\r\n    \r\n    console.log(`품목 ${item.id} 수령 상태 확인:`, {\r\n      hasReceiptHistory,\r\n      hasLastReceived,\r\n      hasReceivedBy,\r\n      hasTotalReceived,\r\n      result,\r\n      receipt_history_length: item.receipt_history?.length || 0\r\n    });\r\n    \r\n    return result;\r\n  };\r\n\r\n  // 재고 수준 계산\r\n  const getStockLevel = (current: number, minimum: number): 'high' | 'medium' | 'low' | 'out' => {\r\n    const currentNum = Number(current) || 0;\r\n    const minimumNum = Number(minimum) || 0;\r\n    \r\n    if (currentNum === 0) return 'out';\r\n    if (minimumNum === 0) return 'high';\r\n    if (currentNum <= minimumNum) return 'low';\r\n    if (currentNum <= minimumNum * 2) return 'medium';\r\n    return 'high';\r\n  };\r\n\r\n  // 재고 상태 표시\r\n  const getStockStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'normal': return '#10B981';\r\n      case 'low_stock': return '#F59E0B';\r\n      case 'out_of_stock': return '#EF4444';\r\n      case 'overstocked': return '#3B82F6';\r\n      default: return '#6B7280';\r\n    }\r\n  };\r\n  const getFullImageUrl = (imageUrl) => {\r\n    console.log('🔍 getFullImageUrl 입력:', JSON.stringify(imageUrl));\r\n    \r\n    if (!imageUrl) return null;\r\n    \r\n    // 이미 전체 URL인 경우\r\n    if (imageUrl.startsWith('http')) {\r\n      console.log('🔍 이미 완전한 URL:', imageUrl);\r\n      return imageUrl;\r\n    }\r\n    \r\n    // URL 정리 - 불필요한 슬래시 제거\r\n    const cleanUrl = imageUrl.replace(/^\\/+/, ''); // 앞의 모든 슬래시 제거\r\n    const fullUrl = `http://211.44.183.165:8000/${cleanUrl}`;\r\n    // const fullUrl = `http://192.168.0.16:8000/${cleanUrl}`;\r\n    \r\n    console.log('🔍 생성된 URL:', fullUrl);\r\n    return fullUrl;\r\n  };\r\n  const handleImageClick = (imageUrl: string, itemName: string, imageIndex: number) => {\r\n    setSelectedImageUrl(getFullImageUrl(imageUrl));\r\n    setSelectedImageName(`${itemName}_이미지_${imageIndex + 1}`);\r\n    setImageZoom(1);\r\n  };\r\n\r\n  // 이미지 다운로드 핸들러\r\n  const handleImageDownload = async () => {\r\n    if (!selectedImageUrl || !selectedImageName) return;\r\n    \r\n    try {\r\n      const response = await fetch(selectedImageUrl);\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      \r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `${selectedImageName}.${getFileExtension(selectedImageUrl)}`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n      \r\n      toast.success('이미지가 다운로드되었습니다.');\r\n    } catch (error) {\r\n      console.error('다운로드 실패:', error);\r\n      toast.error('이미지 다운로드에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  // 파일 확장자 추출\r\n  const getFileExtension = (url: string): string => {\r\n    const match = url.match(/\\.[^.]+$/);\r\n    return match ? match[0].slice(1) : 'jpg';\r\n  };\r\n\r\n  // 줌 컨트롤\r\n  const handleZoomIn = () => {\r\n    setImageZoom(prev => Math.min(prev + 0.25, 3));\r\n  };\r\n\r\n  const handleZoomOut = () => {\r\n    setImageZoom(prev => Math.max(prev - 0.25, 0.5));\r\n  };\r\n\r\n  // 모달 닫기\r\n  const handleCloseImageViewer = () => {\r\n    setSelectedImageUrl(null);\r\n    setSelectedImageName('');\r\n    setImageZoom(1);\r\n  };\r\n\r\n  const sortedItems = useMemo(() => {\r\n    if (!inventoryData?.data?.items) return [];\r\n    \r\n    const items = [...inventoryData.data.items];\r\n    \r\n    return items.sort((a, b) => {\r\n      // 품목코드에서 마지막 4자리 숫자만 추출\r\n      const getLastFourDigits = (code: string) => {\r\n        const match = code.match(/-(\\d{4})$/);\r\n        return match ? parseInt(match[1], 10) : 0;\r\n      };\r\n      \r\n      const aNum = getLastFourDigits(a.item_code);\r\n      const bNum = getLastFourDigits(b.item_code);\r\n      \r\n      // 내림차순 정렬 (큰 숫자가 먼저)\r\n      return bNum - aNum;\r\n    });\r\n  }, [inventoryData?.data?.items]);\r\n\r\n  const handleSort = (column: string) => {\r\n    if (sortBy === column) {\r\n      // 같은 컬럼 클릭시 정렬 순서 변경\r\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      // 다른 컬럼 클릭시 해당 컬럼으로 정렬\r\n      setSortBy(column);\r\n      setSortOrder('desc'); // 기본적으로 내림차순\r\n    }\r\n  };\r\n  // ESC 키로 모달 닫기\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape') {\r\n        handleCloseImageViewer();\r\n      }\r\n    };\r\n\r\n    if (selectedImageUrl) {\r\n      document.addEventListener('keydown', handleKeyDown);\r\n      return () => document.removeEventListener('keydown', handleKeyDown);\r\n    }\r\n  }, [selectedImageUrl]);\r\n\r\n  const handleTransactionDocumentUpload = (item: InventoryItem) => {\r\n    console.log('🔍 거래명세서 업로드 버튼 클릭됨:', item);\r\n    console.log('🔍 API 베이스 URL:', 'http://211.44.183.165:8000');\r\n    \r\n    setSelectedItemForTransaction(item);\r\n    setIsTransactionUploadModalOpen(true);\r\n    \r\n    console.log('🔍 모달 상태 변경 완료');\r\n  };\r\n\r\n  const handleTransactionDocumentSubmit = (file: File) => {\r\n    if (selectedItemForTransaction) {\r\n      uploadTransactionDocumentMutation.mutate({\r\n        itemId: selectedItemForTransaction.id,\r\n        file\r\n      });\r\n    }\r\n  };\r\n  const handleTransactionDocumentClick = (transactionUrl: string, itemName: string) => {\r\n    setSelectedTransactionUrl(getFullImageUrl(transactionUrl)); // 기존 이미지 URL 처리 함수 재사용\r\n    setSelectedTransactionName(`${itemName}_거래명세서`);\r\n  };\r\n\r\n  const handleCloseTransactionViewer = () => {\r\n    setSelectedTransactionUrl(null);\r\n    setSelectedTransactionName('');\r\n  };\r\n\r\n  // 🔥 수정: 테이블 컬럼 정의 - 상태 표시 로직 변경\r\n  // const columns: TableColumn<InventoryItem>[] = useMemo(() => [\r\n  const columns: TableColumn<UnifiedInventoryItem>[] = useMemo(() => [\r\n    {\r\n      key: 'item_code',\r\n      label: '품목코드',\r\n      sortable: true,\r\n      width: '160px',\r\n      style: { verticalAlign: 'middle' },\r\n      // render: (value) => (\r\n      //   <span style={{ fontFamily: 'monospace', fontSize: '0.9rem', fontWeight: '500' }}>\r\n      //     {value}\r\n      //   </span>\r\n      render: (value) => (\r\n        <span style={{ fontFamily: 'monospace', fontSize: '0.9rem', fontWeight: '500' }}>\r\n          {value}\r\n          {/* 정렬 표시 아이콘 */}\r\n          {sortBy === 'item_code' && (\r\n            <span style={{ marginLeft: '4px', fontSize: '0.8rem' }}>\r\n              {sortOrder === 'desc' ? '↓' : '↑'}\r\n            </span>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      key: 'item_name',\r\n      label: '품목명',\r\n      sortable: true,\r\n      style: { verticalAlign: 'middle' },\r\n      render: (value, item) => (\r\n        <div>\r\n          <div style={{ fontWeight: 'bold', marginBottom: '4px' }}>{value}</div>\r\n          {item.brand && (\r\n            <div style={{ fontSize: '0.85rem', color: '#666' }}>\r\n              {item.brand}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: 'current_quantity',\r\n      label: '재고 현황',\r\n      sortable: true,\r\n      width: '140px',\r\n      style: { verticalAlign: 'middle' },\r\n      render: (value, item) => (\r\n        <QuantityInfo>\r\n          <div className=\"main-quantity\" style={{ color: getStockStatusColor(item.stock_status) }}>\r\n            현재: {value.toLocaleString()}\r\n          </div>\r\n          {/* <div className=\"sub-info\">\r\n            총수령: {item.total_received?.toLocaleString() || 0}\r\n          </div> */}\r\n          {/* <div className=\"sub-info\">\r\n            최소: {item.minimum_stock?.toLocaleString() || 0}\r\n          </div> */}\r\n        </QuantityInfo>\r\n      ),\r\n    },\r\n    {\r\n      key: 'unit_price',\r\n      label: '단가',\r\n      sortable: true,\r\n      width: '160px',\r\n      align: 'right',\r\n      style: { verticalAlign: 'middle' },\r\n      render: (value, item) => {\r\n        if (!value || value === 0) return '-';\r\n        const currency = item.currency || '원';\r\n        return `${currency} ${value.toLocaleString()}`;\r\n      },\r\n    },\r\n    {\r\n      key: 'last_received_date',\r\n      label: '최근수령일',\r\n      width: '130px',\r\n      style: { verticalAlign: 'middle' },\r\n      render: (value) => value ? new Date(value).toLocaleDateString('ko-KR') : '-',\r\n    },\r\n    {\r\n      key: 'image_urls',\r\n      label: '이미지',\r\n      width: '150px',\r\n      style: { verticalAlign: 'middle' },\r\n      render: (value, item) => {\r\n        const allImageUrls = [];\r\n        \r\n        if (item.main_image_url) {\r\n          allImageUrls.push(item.main_image_url);\r\n        }\r\n        \r\n        if (item.image_urls && item.image_urls.length > 0) {\r\n          item.image_urls.forEach(url => {\r\n            if (!allImageUrls.includes(url)) {\r\n              allImageUrls.push(url);\r\n            }\r\n          });\r\n        }\r\n        \r\n        const displayImages = allImageUrls.slice(0, 3);\r\n        \r\n        if (allImageUrls.length === 0) {\r\n          return (\r\n            <ImagePreviewGrid>\r\n              <div className=\"no-image\">이미지 없음</div>\r\n            </ImagePreviewGrid>\r\n          );\r\n        }\r\n        \r\n        return (\r\n          <ImagePreviewGrid>\r\n            {displayImages.map((url, index) => (\r\n              <img\r\n                key={index}\r\n                src={getFullImageUrl(url)}\r\n                alt={`${item.item_name} ${index + 1}`}\r\n                className=\"thumbnail\"\r\n                style={{ cursor: 'pointer' }} // 🔥 추가: 클릭 가능 표시\r\n                onClick={() => handleImageClick(url, item.item_name, index)} // 🔥 추가: 클릭 이벤트\r\n                onError={(e) => {\r\n                  console.error('이미지 로딩 실패:', url);\r\n                  (e.target as HTMLImageElement).style.display = 'none';\r\n                }}\r\n              />\r\n            ))}\r\n            {allImageUrls.length > 3 && (\r\n              <div className=\"more-images\">+{allImageUrls.length - 3}</div>\r\n            )}\r\n          </ImagePreviewGrid>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      key: 'transaction_document',\r\n      label: '거래명세서',\r\n      width: '140px',\r\n      style: { verticalAlign: 'middle' },\r\n      render: (_, item) => {\r\n        const hasDocument = Boolean(item.transaction_document_url);\r\n        \r\n        return (\r\n          <TransactionDocumentPreview>\r\n            <TransactionStatusBadge \r\n              hasDocument={hasDocument}\r\n              onClick={hasDocument ? () => handleTransactionDocumentClick(item.transaction_document_url!, item.item_name) : undefined}\r\n            >\r\n              {hasDocument ? (\r\n                <>\r\n                  <CheckCircle size={14} />\r\n                  업로드 완료\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FileText size={14} />\r\n                  업로드 대기\r\n                </>\r\n              )}\r\n            </TransactionStatusBadge>\r\n            \r\n            <TransactionButtonGroup>\r\n              {hasDocument ? (\r\n                <>\r\n                  <Button\r\n                    size=\"xs\"\r\n                    variant=\"outline\"\r\n                    onClick={() => handleTransactionDocumentClick(item.transaction_document_url!, item.item_name)}\r\n                    title=\"거래명세서 보기\"\r\n                    style={{\r\n                      fontSize: '0.75rem',\r\n                      padding: '3px 8px',\r\n                      height: '24px'\r\n                    }}\r\n                  >\r\n                    보기\r\n                  </Button>\r\n                  <Button\r\n                    size=\"xs\"\r\n                    variant=\"outline\"\r\n                    onClick={() => handleTransactionDocumentUpload(item)}\r\n                    title=\"새 파일로 교체\"\r\n                    style={{\r\n                      fontSize: '0.75rem',\r\n                      padding: '3px 8px',\r\n                      height: '24px'\r\n                    }}\r\n                  >\r\n                    교체\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button\r\n                  size=\"xs\"\r\n                  variant=\"outline\"\r\n                  onClick={() => handleTransactionDocumentUpload(item)}\r\n                  title=\"거래명세서 업로드\"\r\n                  style={{\r\n                    fontSize: '0.75rem',\r\n                    padding: '3px 8px',\r\n                    height: '24px',\r\n                    background: '#fef3c7',\r\n                    color: '#92400e',\r\n                    border: '1px solid #fcd34d'\r\n                  }}\r\n                >\r\n                  업로드\r\n                </Button>\r\n              )}\r\n            </TransactionButtonGroup>\r\n          </TransactionDocumentPreview>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      key: 'receipt_status',\r\n      label: '수령 상태',\r\n      width: '120px',\r\n      style: { verticalAlign: 'middle' },\r\n      render: (_, item) => (\r\n        <ReceiptStatusBadge hasReceipts={hasReceipts(item)}>\r\n          {hasReceipts(item) ? '수령 완료' : '수령 대기'}\r\n        </ReceiptStatusBadge>\r\n      ),\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: '관리',\r\n      width: '180px',\r\n      style: { verticalAlign: 'middle' },\r\n      render: (_, item) => {\r\n        const itemHasReceipts = hasReceipts(item);\r\n        \r\n        return (\r\n          <ActionButtonGroup>\r\n            {/* 🔥 수정: !!를 사용하여 Boolean 변환 또는 && 대신 ? : 사용 */}\r\n            {!itemHasReceipts ? (\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"success\"\r\n                onClick={() => handleReceiptWithImages(item)}\r\n                title=\"수령완료 (이미지 포함)\"\r\n                style={{\r\n                  background: 'linear-gradient(135deg, #10b981, #059669)',\r\n                  color: 'white',\r\n                  fontWeight: '600'\r\n                }}\r\n              >\r\n                <Package size={14} />\r\n                수령\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                disabled\r\n                title=\"수령 완료됨\"\r\n                style={{\r\n                  background: '#f0fdf4',\r\n                  color: '#16a34a',\r\n                  border: '1px solid #16a34a'\r\n                }}\r\n              >\r\n                <Package size={14} />\r\n                완료됨  \r\n              </Button>\r\n            )}\r\n            \r\n            {/* 기존 수령 추가 버튼 (항상 표시) */}\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outline\"\r\n              onClick={() => handleAddReceipt(item)}\r\n              title=\"추가 수령\"\r\n            >\r\n              <Package size={14} />\r\n            </Button>\r\n            \r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outline\"\r\n              onClick={() => handleEdit(item)}\r\n              title=\"수정\"\r\n            >\r\n              <Edit size={14} />\r\n            </Button>\r\n            \r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"danger\"\r\n              onClick={() => handleDelete(item.id)}\r\n              title=\"삭제\"\r\n            >\r\n              <Trash2 size={14} />\r\n            </Button>\r\n          </ActionButtonGroup>\r\n        );\r\n      },\r\n    }\r\n  ], []);\r\n\r\n  // 이벤트 핸들러들\r\n  const handleReceiptWithImages = (item: InventoryItem) => {\r\n    setSelectedItemForReceipt(item);\r\n    setIsReceiptWithImagesModalOpen(true);\r\n  };\r\n\r\n  const handleReceiptWithImagesSubmit = (receiptData: any, images: File[]) => {\r\n    if (selectedItemForReceipt) {\r\n      addReceiptWithImagesMutation.mutate({\r\n        itemId: selectedItemForReceipt.id,\r\n        receiptData,\r\n        images\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSearch = (searchFilters: SearchFilters) => {\r\n    setFilters(searchFilters);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleEdit = (item: InventoryItem) => {\r\n    setEditingItem(item);\r\n    setIsFormModalOpen(true);\r\n  };\r\n\r\n  const handleDelete = async (itemId: number) => {\r\n    if (window.confirm('정말로 이 품목을 삭제하시겠습니까?')) {\r\n      deleteItemMutation.mutate(itemId);\r\n    }\r\n  };\r\n\r\n  const handleExport = () => {\r\n    exportMutation.mutate();\r\n  };\r\n\r\n  const handleFormModalClose = () => {\r\n    setIsFormModalOpen(false);\r\n    setEditingItem(null);\r\n  };\r\n\r\n  const handleFormSubmit = (formData: any) => {\r\n    if (editingItem) {\r\n      updateItemMutation.mutate({ id: editingItem.id, data: formData });\r\n    } else {\r\n      createItemMutation.mutate(formData);\r\n    }\r\n  };\r\n\r\n  const handleAddReceipt = (item: InventoryItem) => {\r\n    setSelectedItem(item);\r\n    setIsReceiptModalOpen(true);\r\n  };\r\n\r\n  const handleReceiptSubmit = (receiptData: any) => {\r\n    if (selectedItem) {\r\n      addReceiptMutation.mutate({ \r\n        itemId: selectedItem.id, \r\n        receiptData \r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  // 데이터 추출\r\n  const items = inventoryData?.data?.items || [];\r\n  const totalPages = inventoryData?.data?.pages || 0;\r\n  const stats = statsData?.data || {};\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner text=\"재고 데이터를 불러오는 중...\" />;\r\n  }\r\n\r\n  if (error) {\r\n    console.error('Inventory error:', error);\r\n    return (\r\n      <Container>\r\n        <Card>\r\n          <div style={{ textAlign: 'center', padding: '40px' }}>\r\n            <p>데이터를 불러오는 중 오류가 발생했습니다.</p>\r\n            <Button onClick={() => refetch()}>다시 시도</Button>\r\n          </div>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <PageTitle>품목 관리</PageTitle>\r\n      <PageSubtitle>전체 품목 현황을 관리하고 모니터링할 수 있습니다.</PageSubtitle>\r\n\r\n      {/* 통계 카드 */}\r\n      <StatsContainer>\r\n        <StatCard color=\"#3B82F6\">\r\n          <h3>{stats?.total_items || 0}</h3>\r\n          <p>전체 품목</p>\r\n        </StatCard>\r\n        <StatCard color=\"#10B981\">\r\n          <h3>{items.filter(item => hasReceipts(item)).length}</h3>\r\n          <p>수령 완료</p>\r\n        </StatCard>\r\n        <StatCard color=\"#F59E0B\">\r\n          <h3>{stats?.low_stock_items || 0}</h3>\r\n          <p>재고 부족</p>\r\n        </StatCard>\r\n        <StatCard color=\"#EF4444\">\r\n          <h3>{stats?.out_of_stock_items || 0}</h3>\r\n          <p>재고 없음</p>\r\n        </StatCard>\r\n      </StatsContainer>\r\n\r\n      <Card>\r\n        {/* 필터 및 액션 버튼 */}\r\n        <FilterContainer>\r\n          <InventoryFilters onFilter={handleSearch} />\r\n          \r\n          <ActionButtons>\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => refetch()}\r\n              disabled={isLoading}\r\n            >\r\n              <RefreshCw size={16} />\r\n              새로고침\r\n            </Button>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={handleExport}\r\n              disabled={exportMutation.isPending}\r\n              loading={exportMutation.isPending}\r\n            >\r\n              <Download size={16} />\r\n              Excel 다운로드\r\n            </Button>\r\n            <Button onClick={() => setIsFormModalOpen(true)}>\r\n              <Plus size={16} />\r\n              품목 추가\r\n            </Button>\r\n            {/* 🔥 새로 추가: Excel 업로드 버튼 */}\r\n            {/* <Button\r\n              variant=\"outline\"\r\n              onClick={() => setIsExcelUploadModalOpen(true)}\r\n              style={{\r\n                background: 'linear-gradient(135deg, #10b981, #059669)',\r\n                color: 'white',\r\n                borderColor: '#10b981'\r\n              }}\r\n            >\r\n              <span>Excel 업로드</span>\r\n            </Button> */}\r\n            {/* <Button onClick={() => setIsFormModalOpen(true)}>\r\n              <Plus size={16} />\r\n              품목 추가\r\n            </Button> */}\r\n          </ActionButtons>\r\n        </FilterContainer>\r\n\r\n        {/* 테이블 */}\r\n        <Table\r\n          columns={columns}\r\n          // data={sortedItems}\r\n          data={items}\r\n          loading={isLoading}\r\n          emptyMessage=\"등록된 품목이 없습니다.\"\r\n        />\r\n\r\n        {/* 페이지네이션 */}\r\n        {totalPages > 1 && (\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            totalPages={totalPages}\r\n            onPageChange={setCurrentPage}\r\n          />\r\n        )}\r\n      </Card>\r\n\r\n      {/* 품목 추가/수정 모달 */}\r\n      <Modal\r\n        isOpen={isFormModalOpen}\r\n        onClose={handleFormModalClose}\r\n        title={editingItem ? '품목 수정' : '새 품목 추가'}\r\n        size=\"lg\"\r\n      >\r\n        <InventoryForm\r\n          item={editingItem}\r\n          onSubmit={handleFormSubmit}\r\n          onCancel={handleFormModalClose}\r\n          loading={createItemMutation.isPending || updateItemMutation.isPending}\r\n        />\r\n      </Modal>\r\n\r\n      {/* 🔥 수령완료 모달 (이미지 포함) */}\r\n      {isReceiptWithImagesModalOpen && selectedItemForReceipt && (\r\n        <Modal\r\n          isOpen={isReceiptWithImagesModalOpen}\r\n          onClose={() => {\r\n            setIsReceiptWithImagesModalOpen(false);\r\n            setSelectedItemForReceipt(null);\r\n          }}\r\n          title={`수령완료 - ${selectedItemForReceipt.item_name}`}\r\n          size=\"lg\"\r\n        >\r\n          <ReceiptModal\r\n            item={selectedItemForReceipt}\r\n            onSubmit={handleReceiptWithImagesSubmit}\r\n            onCancel={() => {\r\n              setIsReceiptWithImagesModalOpen(false);\r\n              setSelectedItemForReceipt(null);\r\n            }}\r\n            loading={addReceiptWithImagesMutation.isPending}\r\n            requireImages={true}\r\n          />\r\n        </Modal>\r\n      )}\r\n\r\n      {/* 수령 추가 모달 */}\r\n      {isReceiptModalOpen && selectedItem && (\r\n        <Modal\r\n          isOpen={isReceiptModalOpen}\r\n          onClose={() => setIsReceiptModalOpen(false)}\r\n          title={`수령 추가 - ${selectedItem.item_name}`}\r\n          size=\"lg\"\r\n        >\r\n          <ReceiptModal\r\n            item={selectedItem}\r\n            onSubmit={handleReceiptSubmit}\r\n            onCancel={() => setIsReceiptModalOpen(false)}\r\n            loading={addReceiptMutation.isPending}\r\n            requireImages={false}\r\n          />\r\n        </Modal>\r\n      )}\r\n      {/* 🔥 이미지 뷰어 모달 */}\r\n      {selectedImageUrl && (\r\n        <ImageViewerModal onClick={handleCloseImageViewer}>\r\n          <ImageViewerContainer onClick={(e) => e.stopPropagation()}>\r\n            <ImageViewerHeader>\r\n              <h3>{selectedImageName}</h3>\r\n              <ImageViewerControls>\r\n                <ZoomButton\r\n                  onClick={handleZoomOut}\r\n                  disabled={imageZoom <= 0.5}\r\n                  title=\"축소\"\r\n                >\r\n                  <ZoomOut size={16} />\r\n                </ZoomButton>\r\n                \r\n                <span style={{ \r\n                  fontSize: '0.9rem', \r\n                  color: '#666',\r\n                  minWidth: '60px',\r\n                  textAlign: 'center'\r\n                }}>\r\n                  {Math.round(imageZoom * 100)}%\r\n                </span>\r\n                \r\n                <ZoomButton\r\n                  onClick={handleZoomIn}\r\n                  disabled={imageZoom >= 3}\r\n                  title=\"확대\"\r\n                >\r\n                  <ZoomIn size={16} />\r\n                </ZoomButton>\r\n                \r\n                <DownloadButton\r\n                  onClick={handleImageDownload}\r\n                  title=\"이미지 다운로드\"\r\n                >\r\n                  <Download size={16} />\r\n                  다운로드\r\n                </DownloadButton>\r\n                \r\n                <CloseButton\r\n                  onClick={handleCloseImageViewer}\r\n                  title=\"닫기\"\r\n                >\r\n                  <X size={16} />\r\n                </CloseButton>\r\n              </ImageViewerControls>\r\n            </ImageViewerHeader>\r\n            \r\n            <ImageViewerContent>\r\n              <ViewerImage\r\n                src={selectedImageUrl}\r\n                alt={selectedImageName}\r\n                zoom={imageZoom}\r\n              />\r\n            </ImageViewerContent>\r\n          </ImageViewerContainer>\r\n        </ImageViewerModal>\r\n      )}\r\n      <InventoryExcelUpload\r\n        isOpen={isExcelUploadModalOpen}\r\n        onClose={() => setIsExcelUploadModalOpen(false)}\r\n        onSuccess={() => {\r\n          setIsExcelUploadModalOpen(false);\r\n          refetch();\r\n        }}\r\n      />\r\n      {/* 거래명세서 업로드 모달 */}\r\n      {isTransactionUploadModalOpen && selectedItemForTransaction && (\r\n        <TransactionDocumentModal\r\n          isOpen={isTransactionUploadModalOpen}\r\n          item={selectedItemForTransaction}\r\n          onClose={() => {\r\n            setIsTransactionUploadModalOpen(false);\r\n            setSelectedItemForTransaction(null);\r\n          }}\r\n          onSubmit={handleTransactionDocumentSubmit}\r\n          loading={uploadTransactionDocumentMutation.isPending}\r\n        />\r\n      )}\r\n\r\n      {/* 거래명세서 뷰어 모달 */}\r\n      {selectedTransactionUrl && (\r\n        <ImageViewerModal onClick={handleCloseTransactionViewer}>\r\n          <ImageViewerContainer onClick={(e) => e.stopPropagation()}>\r\n            <ImageViewerHeader>\r\n              <h3>{selectedTransactionName}</h3>\r\n              <ImageViewerControls>\r\n                <DownloadButton\r\n                  onClick={async () => {\r\n                    try {\r\n                      const response = await fetch(selectedTransactionUrl);\r\n                      const blob = await response.blob();\r\n                      const url = window.URL.createObjectURL(blob);\r\n                      \r\n                      const link = document.createElement('a');\r\n                      link.href = url;\r\n                      link.download = `${selectedTransactionName}.${getFileExtension(selectedTransactionUrl)}`;\r\n                      document.body.appendChild(link);\r\n                      link.click();\r\n                      document.body.removeChild(link);\r\n                      window.URL.revokeObjectURL(url);\r\n                      \r\n                      toast.success('거래명세서가 다운로드되었습니다.');\r\n                    } catch (error) {\r\n                      toast.error('다운로드에 실패했습니다.');\r\n                    }\r\n                  }}\r\n                  title=\"거래명세서 다운로드\"\r\n                >\r\n                  <Download size={16} />\r\n                  다운로드\r\n                </DownloadButton>\r\n                \r\n                <CloseButton\r\n                  onClick={handleCloseTransactionViewer}\r\n                  title=\"닫기\"\r\n                >\r\n                  <X size={16} />\r\n                </CloseButton>\r\n              </ImageViewerControls>\r\n            </ImageViewerHeader>\r\n            \r\n            <ImageViewerContent>\r\n              {selectedTransactionUrl.toLowerCase().includes('.pdf') ? (\r\n                <iframe\r\n                  src={selectedTransactionUrl}\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '600px',\r\n                    border: 'none'\r\n                  }}\r\n                  title={selectedTransactionName}\r\n                />\r\n              ) : (\r\n                <ViewerImage\r\n                  src={selectedTransactionUrl}\r\n                  alt={selectedTransactionName}\r\n                  zoom={imageZoom}\r\n                />\r\n              )}\r\n            </ImageViewerContent>\r\n          </ImageViewerContainer>\r\n        </ImageViewerModal>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InventoryPage;","// client/src/components/receipt/ReceiptPage.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Plus, Download, AlertCircle } from 'lucide-react';\r\nimport Table from '../common/Table';\r\nimport Pagination from '../common/Pagination';\r\nimport LoadingSpinner from '../common/LoadingSpinner';\r\nimport Card from '../common/Card';\r\nimport Button from '../common/Button';\r\nimport { receiptApi } from '../../services/api';\r\nimport { Receipt, TableColumn } from '../../types';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst PageTitle = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst PageSubtitle = styled.p`\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  margin-bottom: 30px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n  align-items: center;\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst ErrorContainer = styled.div`\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  \r\n  .error-icon {\r\n    color: ${props => props.theme.colors.error};\r\n    margin-bottom: 16px;\r\n  }\r\n  \r\n  .error-title {\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    margin-bottom: 8px;\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n  \r\n  .error-message {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst ReceiptPage: React.FC = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  \r\n  const { data, isLoading, error, refetch } = useQuery({\r\n    queryKey: ['receipts', currentPage],\r\n    queryFn: () => receiptApi.getReceipts(currentPage, 20),\r\n    keepPreviousData: true,\r\n    retry: 2,\r\n  });\r\n\r\n  const columns: TableColumn<Receipt>[] = [\r\n    {\r\n      key: 'receiptNumber',\r\n      label: '수령번호',\r\n      sortable: true,\r\n      width: '120px',\r\n    },\r\n    {\r\n      key: 'itemName',\r\n      label: '품목명',\r\n      sortable: true,\r\n    },\r\n    {\r\n      key: 'receivedQuantity',\r\n      label: '수령수량',\r\n      width: '100px',\r\n      render: (value, item) => `${value}/${item.expectedQuantity}`,\r\n    },\r\n    {\r\n      key: 'receiverName',\r\n      label: '수령자',\r\n      width: '100px',\r\n    },\r\n    {\r\n      key: 'department',\r\n      label: '부서',\r\n      width: '100px',\r\n    },\r\n    {\r\n      key: 'receivedDate',\r\n      label: '수령일',\r\n      width: '120px',\r\n      render: (value) => new Date(value).toLocaleDateString('ko-KR'),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner text=\"수령 데이터를 불러오는 중...\" />;\r\n  }\r\n\r\n  if (error) {\r\n    console.error('Receipt error:', error);\r\n    return (\r\n      <Container>\r\n        <PageTitle>수령 관리</PageTitle>\r\n        <Card>\r\n          <ErrorContainer>\r\n            <AlertCircle size={48} className=\"error-icon\" />\r\n            <div className=\"error-title\">데이터를 불러올 수 없습니다</div>\r\n            <div className=\"error-message\">\r\n              백엔드 서버가 실행되지 않았거나 수령 관리 API가 구현되지 않았습니다.\r\n            </div>\r\n            <Button onClick={() => refetch()}>\r\n              다시 시도\r\n            </Button>\r\n          </ErrorContainer>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <PageTitle>수령 관리</PageTitle>\r\n      <PageSubtitle>물품 수령 현황을 확인하고 관리할 수 있습니다.</PageSubtitle>\r\n\r\n      <Card>\r\n        <FilterContainer>\r\n          <ActionButtons>\r\n            <Button variant=\"secondary\">\r\n              <Download size={16} />\r\n              Excel 다운로드\r\n            </Button>\r\n            <Button>\r\n              <Plus size={16} />\r\n              수령 등록\r\n            </Button>\r\n          </ActionButtons>\r\n        </FilterContainer>\r\n\r\n        <Table\r\n          columns={columns}\r\n          data={data?.data?.items || []}\r\n          loading={isLoading}\r\n          emptyMessage=\"수령 내역이 없습니다.\"\r\n        />\r\n\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPages={data?.data?.totalPages || 0}\r\n          onPageChange={setCurrentPage}\r\n        />\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReceiptPage;","// client/src/components/purchase/PurchaseRequestForm.tsx - 수정된 버전\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { toast } from 'react-toastify';\r\nimport { Calendar, DollarSign, Package, AlertCircle } from 'lucide-react';\r\nimport Input from '../common/Input';\r\nimport Select from '../common/Select';\r\nimport Button from '../common/Button';\r\nimport Card from '../common/Card';\r\nimport { purchaseApi } from '../../services/api';\r\n\r\ninterface PurchaseRequestFormData {\r\n  itemName: string;\r\n  specifications: string;\r\n  quantity: number;\r\n  estimatedPrice: number;\r\n  preferredSupplier: string;\r\n  category: string;\r\n  urgency: string;\r\n  justification: string;\r\n  department: string;\r\n  project?: string;\r\n  requester_name?: string;\r\n  budgetCode?: string;\r\n  expectedDeliveryDate?: string;\r\n  purchaseMethod: string;\r\n  attachments?: File[];\r\n}\r\n\r\ninterface PurchaseRequest {\r\n  id: number;\r\n  item_name: string;\r\n  specifications?: string;\r\n  quantity: number;\r\n  estimated_unit_price?: number;\r\n  preferred_supplier?: string;\r\n  category: string;\r\n  urgency: string;\r\n  justification: string;\r\n  department: string;\r\n  project?: string;\r\n  requester_name?: string;\r\n  budget_code?: string;\r\n  expected_delivery_date?: string;\r\n  purchase_method?: string;\r\n  // 기타 필드들...\r\n}\r\n\r\ninterface PurchaseRequestFormProps {\r\n  onSuccess: () => void;\r\n  onCancel: () => void;\r\n  initialData?: PurchaseRequest;\r\n  isEdit?: boolean;\r\n}\r\n\r\nconst FormContainer = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst FormSection = styled(Card)`\r\n  margin-bottom: 24px;\r\n  \r\n  .section-title {\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n    margin-bottom: 20px;\r\n    color: ${props => props.theme.colors.text};\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    \r\n    .section-icon {\r\n      color: ${props => props.theme.colors.primary};\r\n    }\r\n  }\r\n`;\r\n\r\nconst FormGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 16px;\r\n  \r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst FormRow = styled.div`\r\n  grid-column: 1 / -1;\r\n`;\r\n\r\nconst TextArea = styled.textarea<{ hasError?: boolean }>`\r\n  width: 100%;\r\n  min-height: 100px;\r\n  padding: 12px;\r\n  border: 2px solid ${props => props.hasError ? props.theme.colors.error : props.theme.colors.border};\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-family: inherit;\r\n  background: ${props => props.theme.colors.surface};\r\n  color: ${props => props.theme.colors.text};\r\n  resize: vertical;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.hasError ? props.theme.colors.error : props.theme.colors.primary};\r\n    box-shadow: 0 0 0 3px ${props => props.hasError ? props.theme.colors.error : props.theme.colors.primary}20;\r\n  }\r\n  \r\n  &::placeholder {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n  margin-top: 32px;\r\n  padding-top: 24px;\r\n  border-top: 1px solid ${props => props.theme.colors.border};\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${props => props.theme.colors.error};\r\n  font-size: 12px;\r\n  margin-top: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n`;\r\n\r\nconst PurchaseRequestForm: React.FC<PurchaseRequestFormProps> = ({\r\n  onSuccess,\r\n  onCancel,\r\n  initialData,\r\n  isEdit = false\r\n}) => {\r\n  // 카테고리 옵션 (백엔드 enum과 일치)\r\n  const categoryOptions = [\r\n    { value: 'OFFICE_SUPPLIES', label: '사무 용품' },\r\n    { value: 'ELECTRONICS', label: '전자제품/IT 장비' },\r\n    { value: 'FURNITURE', label: '가구' },\r\n    { value: 'SOFTWARE', label: '소프트웨어' },\r\n    { value: 'MAINTENANCE', label: '유지보수' },\r\n    { value: 'SERVICES', label: '서비스' },\r\n    { value: 'OTHER', label: '기타' }\r\n  ];\r\n\r\n  // 긴급도 옵션 (백엔드 enum과 일치)\r\n  const urgencyOptions = [\r\n    { value: 'LOW', label: '낮음' },\r\n    { value: 'NORMAL', label: '보통' },\r\n    { value: 'HIGH', label: '높음' },\r\n    { value: 'URGENT', label: '긴급' },\r\n    { value: 'EMERGENCY', label: '응급' }\r\n  ];\r\n\r\n  // 구매 방법 옵션 (백엔드 enum과 일치)\r\n    const purchaseMethodOptions = [\r\n    { value: 'DIRECT', label: '직접구매' },\r\n    { value: 'QUOTATION', label: '견적요청' },\r\n    { value: 'CONTRACT', label: '계약' },\r\n    { value: 'FRAMEWORK', label: '단가계약' },\r\n    { value: 'MARKETPLACE', label: '마켓플레이스' }\r\n  ];\r\n\r\n\r\n  const departmentOptions = [\r\n    { value: 'H/W 개발팀', label: 'H/W 개발팀' },\r\n    { value: 'S/W 개발팀', label: 'S/W 개발팀' },\r\n    { value: '총무부', label: '총무부' },\r\n    { value: '사무관리팀', label: '사무관리팀' },\r\n    { value: '영업팀', label: '영업팀' },\r\n    { value: '인사팀', label: '인사팀' },\r\n  ];\r\n\r\n  const queryClient = useQueryClient();\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n\r\n  // 🔥 수정: 초기 데이터 처리 개선\r\n  const getInitialFormData = (): PurchaseRequestFormData => {\r\n    if (!initialData) {\r\n      return {\r\n        itemName: '',\r\n        specifications: '',\r\n        quantity: 1,\r\n        estimatedPrice: 0,\r\n        preferredSupplier: '',\r\n        category: '',\r\n        urgency: 'NORMAL',\r\n        justification: '',\r\n        department: 'S/W 개발팀',\r\n        project: '',\r\n        requester_name: '',\r\n        budgetCode: '',\r\n        expectedDeliveryDate: '',\r\n        purchaseMethod: 'DIRECT',\r\n      };\r\n    }\r\n\r\n    // 백엔드 데이터를 프론트엔드 형식으로 변환\r\n    return {\r\n      itemName: initialData.item_name || '',\r\n      specifications: initialData.specifications || '',\r\n      quantity: initialData.quantity || 1,\r\n      estimatedPrice: initialData.estimated_unit_price || 0,\r\n      preferredSupplier: initialData.preferred_supplier || '',\r\n      category: initialData.category || '',\r\n      urgency: initialData.urgency || 'NORMAL',\r\n      justification: initialData.justification || '',\r\n      department: initialData.department || '',\r\n      project: initialData.project || '',\r\n      request_name: initialData.project || '',\r\n      budgetCode: initialData.budget_code || '',\r\n      expectedDeliveryDate: initialData.expected_delivery_date \r\n        ? new Date(initialData.expected_delivery_date).toISOString().split('T')[0] \r\n        : '',\r\n      purchaseMethod: initialData.purchase_method || 'DIRECT',\r\n    };\r\n  };\r\n\r\n  const [formData, setFormData] = useState<PurchaseRequestFormData>(getInitialFormData());\r\n\r\n  // 🔥 수정: initialData가 변경될 때마다 폼 데이터 업데이트\r\n  useEffect(() => {\r\n    setFormData(getInitialFormData());\r\n  }, [initialData]);\r\n\r\n  // 생성 Mutation\r\n  const createMutation = useMutation({\r\n    mutationFn: purchaseApi.createRequest,\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['purchase-requests'] });\r\n      queryClient.invalidateQueries({ queryKey: ['purchase-requests-stats'] });\r\n      toast.success(isEdit ? '구매 요청이 수정되었습니다.' : '구매 요청이 등록되었습니다.');\r\n      onSuccess();\r\n    },\r\n    onError: (error: any) => {\r\n      console.error('=== 구매 요청 처리 실패 ===');\r\n      console.error('전체 에러 객체:', error);\r\n      console.error('HTTP 상태 코드:', error.response?.status);\r\n      console.error('에러 응답 데이터:', error.response?.data);\r\n      \r\n      toast.error(error.response?.data?.message || '처리 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  // 🔥 수정: 수정 Mutation 추가\r\n  const updateMutation = useMutation({\r\n    mutationFn: ({ id, data }: { id: number; data: any }) => purchaseApi.updateRequest(id, data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['purchase-requests'] });\r\n      queryClient.invalidateQueries({ queryKey: ['purchase-requests-stats'] });\r\n      toast.success('구매 요청이 수정되었습니다.');\r\n      onSuccess();\r\n    },\r\n    onError: (error: any) => {\r\n      console.error('구매 요청 수정 실패:', error);\r\n      toast.error(error.response?.data?.message || '수정 중 오류가 발생했습니다.');\r\n    },\r\n  });\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.itemName.trim()) {\r\n      newErrors.itemName = '품목명을 입력해주세요.';\r\n    }\r\n\r\n    if (!formData.category) {\r\n      newErrors.category = '카테고리를 선택해주세요.';\r\n    }\r\n\r\n    if (formData.quantity <= 0) {\r\n      newErrors.quantity = '수량은 1 이상이어야 합니다.';\r\n    }\r\n\r\n    if (formData.estimatedPrice < 0) {\r\n      newErrors.estimatedPrice = '예상금액은 0 이상이어야 합니다.';\r\n    }\r\n\r\n    if (!formData.department) {\r\n      newErrors.department = '부서를 선택해주세요.';\r\n    }\r\n\r\n    if (!formData.justification.trim()) {\r\n      newErrors.justification = '구매 사유를 입력해주세요.';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  // 🔥 수정: handleSubmit 함수 개선\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      toast.error('입력 정보를 확인해주세요.');\r\n      return;\r\n    }\r\n\r\n    // 백엔드 API에 맞는 데이터 형식으로 변환\r\n    // const submitData = {\r\n    //   item_name: formData.itemName,\r\n    //   specifications: formData.specifications,\r\n    //   quantity: Number(formData.quantity),\r\n    //   unit: '개',\r\n    //   estimated_unit_price: Number(formData.estimatedPrice),\r\n    //   total_budget: Number(formData.quantity) * Number(formData.estimatedPrice),\r\n    //   currency: 'KRW',\r\n    //   category: formData.category,\r\n    //   urgency: formData.urgency,\r\n    //   purchase_method: formData.purchaseMethod,\r\n    //   requester_name: '현재사용자',\r\n    //   department: formData.department,\r\n    //   expected_delivery_date: formData.expectedDeliveryDate ? new Date(`${formData.expectedDeliveryDate}T00:00:00`).toISOString() : undefined,\r\n    //   justification: formData.justification,\r\n    //   preferred_supplier: formData.preferredSupplier,\r\n    //   project: formData.project,\r\n    //   budget_code: formData.budgetCode,\r\n    //   status: 'SUBMITTED', // 기본 상태는 '요청됨'\r\n    // };\r\n    // 🔥 total_budget 계산 로직 추가\r\n    const quantity = Number(formData.quantity) || 1;\r\n    const estimatedPrice = Number(formData.estimatedPrice) || 0;\r\n    const totalBudget = quantity * estimatedPrice;\r\n\r\n    const submitData = {\r\n      item_name: formData.itemName,\r\n      specifications: formData.specifications || null,\r\n      quantity: Number(formData.quantity),\r\n      unit: '개',\r\n      estimated_unit_price: estimatedPrice,\r\n      total_budget: totalBudget, // 🔥 계산된 값 사용\r\n      currency: 'KRW',\r\n      category: formData.category,\r\n      urgency: formData.urgency,\r\n      purchase_method: formData.purchaseMethod || 'DIRECT',\r\n      requester_name: formData.requester_name,\r\n      requester_email: \"current_user@company.com\",\r\n      department: formData.department,\r\n      position: null,\r\n      budgetCode: formData.budgetCode || '',\r\n      justification: formData.justification,\r\n      expected_delivery_date: formData.expectedDeliveryDate || null,\r\n    };\r\n    console.log('submitData:', JSON.stringify(submitData, null, 2));\r\n  \r\n    // 필수 필드 체크\r\n    const requiredFields = ['item_name', 'quantity', 'requester_name', 'department', 'justification'];\r\n    const missingFields = requiredFields.filter(field => !submitData[field]);\r\n    if (missingFields.length > 0) {\r\n      console.error('누락된 필수 필드:', missingFields);\r\n      toast.error(`필수 필드가 누락되었습니다: ${missingFields.join(', ')}`);\r\n      return;\r\n   }\r\n    // 수정 모드면 업데이트, 아니면 생성\r\n    if (isEdit && initialData?.id) {\r\n      updateMutation.mutate({ id: initialData.id, data: submitData });\r\n    } else {\r\n      createMutation.mutate(submitData);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: keyof PurchaseRequestFormData, value: any) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    \r\n    // 에러 제거\r\n    if (errors[field]) {\r\n      setErrors(prev => {\r\n        const newErrors = { ...prev };\r\n        delete newErrors[field];\r\n        return newErrors;\r\n      });\r\n    }\r\n  };\r\n\r\n  const isLoading = createMutation.isPending || updateMutation.isPending;\r\n\r\n  return (\r\n    <FormContainer>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* 기본 정보 */}\r\n        <FormSection>\r\n          <div className=\"section-title\">\r\n            <Package className=\"section-icon\" size={20} />\r\n            기본 정보\r\n          </div>\r\n          \r\n          <FormGrid>\r\n            <FormRow>\r\n              <Input\r\n                label=\"품목명\"\r\n                value={formData.itemName}\r\n                onChange={(e) => handleChange('itemName', e.target.value)}\r\n                placeholder=\"구매할 품목명을 입력하세요\"\r\n                required\r\n              />\r\n              {errors.itemName && (\r\n                <ErrorMessage>\r\n                  <AlertCircle size={12} />\r\n                  {errors.itemName}\r\n                </ErrorMessage>\r\n              )}\r\n            </FormRow>\r\n            \r\n            <Select\r\n              label=\"카테고리\"\r\n              value={formData.category}\r\n              options={categoryOptions}\r\n              onChange={(value) => handleChange('category', value)}\r\n              placeholder=\"카테고리를 선택하세요\"\r\n              required\r\n            />\r\n            \r\n            <Input\r\n              label=\"수량\"\r\n              type=\"number\"\r\n              value={formData.quantity}\r\n              onChange={(e) => handleChange('quantity', Number(e.target.value))}\r\n              placeholder=\"구매 수량\"\r\n              required\r\n            />\r\n            \r\n            <Select\r\n              label=\"긴급도\"\r\n              value={formData.urgency}\r\n              options={urgencyOptions}\r\n              onChange={(value) => handleChange('urgency', value)}\r\n            />\r\n          </FormGrid>\r\n          \r\n          <FormRow style={{ marginTop: '16px' }}>\r\n            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>\r\n              사양 및 요구사항\r\n            </label>\r\n            <TextArea\r\n              value={formData.specifications}\r\n              onChange={(e) => handleChange('specifications', e.target.value)}\r\n              placeholder=\"제품 사양, 모델명, 특별 요구사항 등을 상세히 입력하세요...\"\r\n            />\r\n          </FormRow>\r\n        </FormSection>\r\n\r\n        {/* 예산 및 공급업체 */}\r\n        <FormSection>\r\n          <div className=\"section-title\">\r\n            <DollarSign className=\"section-icon\" size={20} />\r\n            예산 및 공급업체\r\n          </div>\r\n          \r\n          <FormGrid>\r\n            <Input\r\n              label=\"예상 단가 (원)\"\r\n              type=\"number\"\r\n              value={formData.estimatedPrice}\r\n              onChange={(e) => handleChange('estimatedPrice', Number(e.target.value))}\r\n              placeholder=\"예상 단가를 입력하세요\"\r\n            />\r\n            \r\n            <Input\r\n              label=\"구매처\"\r\n              value={formData.preferredSupplier}\r\n              onChange={(e) => handleChange('preferredSupplier', e.target.value)}\r\n              placeholder=\"구매처를 입력하세요\"\r\n            />\r\n            \r\n            <Select\r\n              label=\"구매 방법\"\r\n              value={formData.purchaseMethod}\r\n              options={purchaseMethodOptions}\r\n              onChange={(value) => handleChange('purchaseMethod', value)}\r\n            />\r\n            \r\n            {/* <Input\r\n              label=\"링크\"\r\n              value={formData.budgetCode}\r\n              onChange={(e) => handleChange('budgetCode', e.target.value)}\r\n              placeholder=\"링크 (선택사항)\"\r\n            /> */}\r\n          </FormGrid>\r\n        </FormSection>\r\n\r\n        {/* 부서 및 프로젝트 */}\r\n        <FormSection>\r\n          <div className=\"section-title\">\r\n            <Calendar className=\"section-icon\" size={20} />\r\n            부서 및 프로젝트 정보\r\n          </div>\r\n          \r\n          <FormGrid>\r\n            <Select\r\n              label=\"부서\"\r\n              value={formData.department}\r\n              options={departmentOptions}\r\n              onChange={(value) => handleChange('department', value)}\r\n              placeholder=\"소속 부서를 선택하세요\"\r\n              required\r\n            />\r\n            \r\n            <Input\r\n              label=\"프로젝트명\"\r\n              value={formData.project}\r\n              onChange={(e) => handleChange('project', e.target.value)}\r\n              placeholder=\"관련 프로젝트명 (선택사항)\"\r\n            />\r\n            <Input\r\n              label=\"요청자\"\r\n              value={formData.requester_name}\r\n              onChange={(e) => handleChange('requester_name', e.target.value)}\r\n              required\r\n            />\r\n            \r\n            <Input\r\n              label=\"희망 납기일\"\r\n              type=\"date\"\r\n              value={formData.expectedDeliveryDate}\r\n              onChange={(e) => handleChange('expectedDeliveryDate', e.target.value)}\r\n            />\r\n          </FormGrid>\r\n          \r\n          <FormRow style={{ marginTop: '16px' }}>\r\n            <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>\r\n              구매 사유 및 링크 <span style={{ color: 'red' }}>*</span>\r\n            </label>\r\n            <TextArea\r\n              value={formData.justification}\r\n              onChange={(e) => handleChange('justification', e.target.value)}\r\n              placeholder=\"구매가 필요한 사유를 상세히 입력해주세요...\"\r\n              hasError={!!errors.justification}\r\n              required\r\n            />\r\n            {errors.justification && (\r\n              <ErrorMessage>\r\n                <AlertCircle size={12} />\r\n                {errors.justification}\r\n              </ErrorMessage>\r\n            )}\r\n          </FormRow>\r\n        </FormSection>\r\n\r\n        {/* 버튼 그룹 */}\r\n        <ButtonGroup>\r\n          <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\r\n            취소\r\n          </Button>\r\n          <Button \r\n            type=\"submit\" \r\n            loading={isLoading}\r\n            disabled={isLoading}\r\n          >\r\n            {isEdit ? '수정' : '등록'}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PurchaseRequestForm;","// client/src/components/purchase/ExcelBulkUpload.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { toast } from 'react-toastify';\r\nimport { \r\n  Upload, \r\n  Download, \r\n  FileSpreadsheet, \r\n  AlertCircle, \r\n  CheckCircle, \r\n  FileText,\r\n  Loader\r\n} from 'lucide-react';\r\nimport Card from '../common/Card';\r\nimport Button from '../common/Button';\r\nimport Modal from '../common/Modal';\r\nimport { purchaseApi } from '../../services/api';\r\n\r\ninterface ExcelBulkUploadProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSuccess: () => void;\r\n}\r\n\r\ninterface UploadResult {\r\n  success: boolean;\r\n  created_count: number;\r\n  request_numbers: string[]; \r\n  errors?: Array<{\r\n    row: number;\r\n    field: string;\r\n    message: string;\r\n  }>;\r\n}\r\n\r\nconst UploadContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n`;\r\n\r\nconst InfoSection = styled(Card)`\r\n  background: ${props => props.theme.colors.background};\r\n  border-left: 4px solid ${props => props.theme.colors.info};\r\n  \r\n  .info-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    margin-bottom: 16px;\r\n    \r\n    .info-icon {\r\n      color: ${props => props.theme.colors.info};\r\n    }\r\n    \r\n    .info-title {\r\n      font-size: 1.1rem;\r\n      font-weight: 600;\r\n      color: ${props => props.theme.colors.text};\r\n    }\r\n  }\r\n  \r\n  .info-content {\r\n    .info-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      margin-bottom: 8px;\r\n      font-size: 14px;\r\n      \r\n      &:last-child {\r\n        margin-bottom: 0;\r\n      }\r\n      \r\n      .bullet {\r\n        width: 4px;\r\n        height: 4px;\r\n        background: ${props => props.theme.colors.primary};\r\n        border-radius: 50%;\r\n        flex-shrink: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst TemplateSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  \r\n  .template-header {\r\n    .template-title {\r\n      font-size: 1.1rem;\r\n      font-weight: 600;\r\n      margin-bottom: 8px;\r\n    }\r\n    \r\n    .template-description {\r\n      color: ${props => props.theme.colors.textSecondary};\r\n      font-size: 14px;\r\n      line-height: 1.5;\r\n    }\r\n  }\r\n  \r\n  .template-columns {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    gap: 12px;\r\n    margin: 16px 0;\r\n    \r\n    .column-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      padding: 8px 12px;\r\n      background: ${props => props.theme.colors.background};\r\n      border-radius: 6px;\r\n      font-size: 13px;\r\n      \r\n      .required-mark {\r\n        color: ${props => props.theme.colors.error};\r\n        font-weight: bold;\r\n      }\r\n      \r\n      .column-name {\r\n        color: ${props => props.theme.colors.text};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UploadArea = styled.div<{ isDragOver: boolean; disabled?: boolean }>`\r\n  border: 2px dashed ${props => \r\n    props.disabled \r\n      ? props.theme.colors.border \r\n      : props.isDragOver \r\n        ? props.theme.colors.primary \r\n        : props.theme.colors.border\r\n  };\r\n  border-radius: 12px;\r\n  padding: 40px 20px;\r\n  text-align: center;\r\n  background: ${props => \r\n    props.disabled\r\n      ? props.theme.colors.background\r\n      : props.isDragOver \r\n        ? props.theme.colors.primary + '05' \r\n        : props.theme.colors.surface\r\n  };\r\n  transition: all 0.3s ease;\r\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\r\n  opacity: ${props => props.disabled ? 0.6 : 1};\r\n  \r\n  &:hover {\r\n    border-color: ${props => props.disabled ? props.theme.colors.border : props.theme.colors.primary};\r\n    background: ${props => props.disabled ? props.theme.colors.background : props.theme.colors.primary + '05'};\r\n  }\r\n  \r\n  .upload-icon {\r\n    margin-bottom: 16px;\r\n    color: ${props => props.theme.colors.primary};\r\n    opacity: 0.7;\r\n  }\r\n  \r\n  .upload-title {\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n    margin-bottom: 8px;\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n  \r\n  .upload-subtitle {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n    font-size: 14px;\r\n    margin-bottom: 16px;\r\n  }\r\n  \r\n  .upload-hint {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst ProgressSection = styled.div`\r\n  .progress-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 12px;\r\n    \r\n    .progress-title {\r\n      font-weight: 500;\r\n    }\r\n    \r\n    .progress-percentage {\r\n      font-size: 14px;\r\n      color: ${props => props.theme.colors.textSecondary};\r\n    }\r\n  }\r\n  \r\n  .progress-bar {\r\n    width: 100%;\r\n    height: 8px;\r\n    background: ${props => props.theme.colors.background};\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    \r\n    .progress-fill {\r\n      height: 100%;\r\n      background: ${props => props.theme.colors.primary};\r\n      transition: width 0.3s ease;\r\n      border-radius: 4px;\r\n    }\r\n  }\r\n  \r\n  .progress-status {\r\n    margin-top: 12px;\r\n    font-size: 14px;\r\n    color: ${props => props.theme.colors.textSecondary};\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n  }\r\n`;\r\n\r\nconst ResultSection = styled.div<{ success: boolean }>`\r\n  .result-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    margin-bottom: 16px;\r\n    \r\n    .result-icon {\r\n      color: ${props => props.success ? props.theme.colors.success : props.theme.colors.error};\r\n    }\r\n    \r\n    .result-title {\r\n      font-size: 1.1rem;\r\n      font-weight: 600;\r\n      color: ${props => props.success ? props.theme.colors.success : props.theme.colors.error};\r\n    }\r\n  }\r\n  \r\n  .result-summary {\r\n    background: ${props => props.success ? props.theme.colors.success + '10' : props.theme.colors.error + '10'};\r\n    border: 1px solid ${props => props.success ? props.theme.colors.success + '30' : props.theme.colors.error + '30'};\r\n    border-radius: 8px;\r\n    padding: 16px;\r\n    margin-bottom: 16px;\r\n    \r\n    .summary-item {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 8px;\r\n      \r\n      &:last-child {\r\n        margin-bottom: 0;\r\n      }\r\n      \r\n      .label {\r\n        color: ${props => props.theme.colors.textSecondary};\r\n      }\r\n      \r\n      .value {\r\n        font-weight: 600;\r\n        color: ${props => props.theme.colors.text};\r\n      }\r\n    }\r\n  }\r\n  \r\n  .error-details {\r\n    max-height: 200px;\r\n    overflow-y: auto;\r\n    border: 1px solid ${props => props.theme.colors.border};\r\n    border-radius: 8px;\r\n    \r\n    .error-item {\r\n      padding: 12px 16px;\r\n      border-bottom: 1px solid ${props => props.theme.colors.border};\r\n      \r\n      &:last-child {\r\n        border-bottom: none;\r\n      }\r\n      \r\n      .error-row {\r\n        font-weight: 600;\r\n        color: ${props => props.theme.colors.error};\r\n        margin-bottom: 4px;\r\n      }\r\n      \r\n      .error-message {\r\n        font-size: 14px;\r\n        color: ${props => props.theme.colors.textSecondary};\r\n      }\r\n    }\r\n  }\r\n  \r\n  .request-numbers {\r\n    margin-top: 16px;\r\n    \r\n    .numbers-title {\r\n      font-weight: 500;\r\n      margin-bottom: 8px;\r\n    }\r\n    \r\n    .numbers-list {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 6px;\r\n      \r\n      .number-tag {\r\n        display: inline-block;\r\n        padding: 4px 8px;\r\n        background: ${props => props.theme.colors.primary}15;\r\n        color: ${props => props.theme.colors.primary};\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n        font-weight: 500;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HiddenInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 24px;\r\n  \r\n  .left-actions {\r\n    display: flex;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .right-actions {\r\n    display: flex;\r\n    gap: 12px;\r\n  }\r\n`;\r\n\r\nconst requiredColumns = [\r\n  { name: '품목명', required: true, description: '구매할 품목의 이름' },\r\n  { name: '카테고리', required: true, description: '품목 분류' },\r\n  { name: '수량', required: true, description: '구매 수량 (숫자)' },\r\n  { name: '부서', required: true, description: '요청 부서' },\r\n  { name: '구매사유', required: true, description: '구매가 필요한 이유' },\r\n  { name: '사양', required: false, description: '제품 사양 및 요구사항' },\r\n  { name: '예상단가', required: false, description: '예상 단가 (원)' },\r\n  { name: '공급업체', required: false, description: '구매처' },\r\n  { name: '긴급도', required: false, description: '낮음/보통/높음/긴급' },\r\n  { name: '희망납기일', required: false, description: 'YYYY-MM-DD 형식' },\r\n  { name: '프로젝트명', required: false, description: '관련 프로젝트' },\r\n  { name: '링크', required: false, description: '링크' },\r\n];\r\n\r\nconst ExcelBulkUpload: React.FC<ExcelBulkUploadProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onSuccess\r\n}) => {\r\n  const queryClient = useQueryClient();\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadResult, setUploadResult] = useState<UploadResult | null>(null);\r\n  const [currentStep, setCurrentStep] = useState<'upload' | 'processing' | 'result'>('upload');\r\n\r\n  const uploadMutation = useMutation({\r\n    mutationFn: purchaseApi.uploadExcel,\r\n    onMutate: () => {\r\n      setCurrentStep('processing');\r\n      setUploadProgress(0);\r\n      \r\n      // 진행률 시뮬레이션\r\n      const progressInterval = setInterval(() => {\r\n        setUploadProgress(prev => {\r\n          if (prev >= 90) {\r\n            clearInterval(progressInterval);\r\n            return 90;\r\n          }\r\n          return prev + Math.random() * 10;\r\n        });\r\n      }, 500);\r\n      \r\n      return { progressInterval };\r\n    },\r\n    onSuccess: (result: UploadResult, _, context) => {\r\n      if (context?.progressInterval) {\r\n        clearInterval(context.progressInterval);\r\n      }\r\n      \r\n      setUploadProgress(100);\r\n      setCurrentStep('result');\r\n      setUploadResult(result);\r\n      \r\n      queryClient.invalidateQueries({ queryKey: ['purchase-requests'] });\r\n      queryClient.invalidateQueries({ queryKey: ['purchase-requests-stats'] });\r\n      \r\n      const successMsg = `${result.created_count}개 구매요청이 성공적으로 등록되었습니다!`;\r\n      toast.success(successMsg);\r\n      \r\n      onSuccess();\r\n    },\r\n    onError: (error: any, _, context) => {\r\n      if (context?.progressInterval) {\r\n        clearInterval(context.progressInterval);\r\n      }\r\n      \r\n      setCurrentStep('result');\r\n      setUploadResult({\r\n        success: false,\r\n        created_count: 0,\r\n        request_numbers: [],\r\n        errors: [{ row: 0, field: 'file', message: error.message }],\r\n      });\r\n      \r\n      toast.error(error.message);\r\n    },\r\n  });\r\n\r\n  const downloadTemplateMutation = useMutation({\r\n    mutationFn: purchaseApi.downloadTemplate,\r\n    onSuccess: () => {\r\n      toast.success('템플릿이 다운로드되었습니다.');\r\n    },\r\n    onError: () => {\r\n      toast.error('템플릿 다운로드에 실패했습니다.');\r\n    },\r\n  });\r\n\r\n  const handleFileSelect = (file: File) => {\r\n    if (!file) return;\r\n    \r\n    // 파일 확장자 검증\r\n    if (!file.name.endsWith('.xlsx') && !file.name.endsWith('.xls')) {\r\n      toast.error('Excel 파일만 업로드 가능합니다.');\r\n      return;\r\n    }\r\n    \r\n    // 파일 크기 검증 (10MB)\r\n    const maxSize = 10 * 1024 * 1024;\r\n    if (file.size > maxSize) {\r\n      toast.error('파일 크기는 10MB를 초과할 수 없습니다.');\r\n      return;\r\n    }\r\n    \r\n    setSelectedFile(file);\r\n    setUploadResult(null);\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (!selectedFile) {\r\n      toast.error('파일을 먼저 선택해주세요.');\r\n      return;\r\n    }\r\n    \r\n    setUploadProgress(0);\r\n    uploadMutation.mutate(selectedFile);\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    if (uploadMutation.isPending) return;\r\n    \r\n    const files = e.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      handleFileSelect(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    if (!uploadMutation.isPending) {\r\n      setDragOver(true);\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setDragOver(false);\r\n  };\r\n\r\n  const handleFileInputClick = () => {\r\n    if (uploadMutation.isPending) return;\r\n    const input = document.getElementById('excel-file-input') as HTMLInputElement;\r\n    input?.click();\r\n  };\r\n\r\n  const resetUpload = () => {\r\n    setSelectedFile(null);\r\n    setUploadResult(null);\r\n    setUploadProgress(0);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetUpload();\r\n    onClose();\r\n  };\r\n\r\n  const formatFileSize = (bytes: number): string => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      title=\"Excel 일괄 업로드\"\r\n      size=\"xl\"\r\n    >\r\n      <UploadContainer>\r\n        {/* 안내 정보 */}\r\n        <InfoSection>\r\n          <div className=\"info-header\">\r\n            <FileText className=\"info-icon\" size={20} />\r\n            <div className=\"info-title\">업로드 안내</div>\r\n          </div>\r\n          <div className=\"info-content\">\r\n            <div className=\"info-item\">\r\n              <div className=\"bullet\" />\r\n              <span>Excel 템플릿을 다운로드하여 양식에 맞게 데이터를 입력해주세요.</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <div className=\"bullet\" />\r\n              <span>필수 항목은 반드시 입력해야 하며, 빈 값이 있으면 오류가 발생합니다.</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <div className=\"bullet\" />\r\n              <span>최대 1,000건까지 한 번에 업로드할 수 있습니다.</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <div className=\"bullet\" />\r\n              <span>파일 크기는 10MB를 초과할 수 없습니다.</span>\r\n            </div>\r\n          </div>\r\n        </InfoSection>\r\n\r\n        {/* 템플릿 정보 */}\r\n        <TemplateSection>\r\n          <div className=\"template-header\">\r\n            <div className=\"template-title\">Excel 템플릿 양식</div>\r\n            <div className=\"template-description\">\r\n              아래 컬럼들이 포함된 Excel 템플릿을 다운로드하여 사용하세요.\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"template-columns\">\r\n            {requiredColumns.map((column, index) => (\r\n              <div key={index} className=\"column-item\">\r\n                {column.required && <span className=\"required-mark\">*</span>}\r\n                <span className=\"column-name\">{column.name}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={() => downloadTemplateMutation.mutate()}\r\n            disabled={downloadTemplateMutation.isPending}\r\n            loading={downloadTemplateMutation.isPending}\r\n          >\r\n            <Download size={16} />\r\n            Excel 템플릿 다운로드\r\n          </Button>\r\n        </TemplateSection>\r\n\r\n        {/* 파일 업로드 영역 */}\r\n        {!uploadResult && (\r\n          <UploadArea\r\n            isDragOver={dragOver}\r\n            disabled={uploadMutation.isPending}\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            onDragLeave={handleDragLeave}\r\n            onClick={handleFileInputClick}\r\n          >\r\n            <FileSpreadsheet size={48} className=\"upload-icon\" />\r\n            <div className=\"upload-title\">\r\n              {selectedFile ? selectedFile.name : 'Excel 파일을 선택하세요'}\r\n            </div>\r\n            <div className=\"upload-subtitle\">\r\n              {selectedFile \r\n                ? `파일 크기: ${formatFileSize(selectedFile.size)}`\r\n                : '파일을 여기에 끌어다 놓거나 클릭하여 선택하세요'\r\n              }\r\n            </div>\r\n            <div className=\"upload-hint\">\r\n              .xlsx, .xls 파일만 지원됩니다 (최대 10MB)\r\n            </div>\r\n          </UploadArea>\r\n        )}\r\n\r\n        <HiddenInput\r\n          id=\"excel-file-input\"\r\n          type=\"file\"\r\n          accept=\".xlsx,.xls\"\r\n          onChange={(e) => {\r\n            const file = e.target.files?.[0];\r\n            if (file) handleFileSelect(file);\r\n          }}\r\n          disabled={uploadMutation.isPending}\r\n        />\r\n\r\n        {/* 업로드 진행률 */}\r\n        {uploadMutation.isPending && (\r\n          <ProgressSection>\r\n            <div className=\"progress-header\">\r\n              <div className=\"progress-title\">업로드 진행중...</div>\r\n              <div className=\"progress-percentage\">{uploadProgress}%</div>\r\n            </div>\r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-fill\" \r\n                style={{ width: `${uploadProgress}%` }}\r\n              />\r\n            </div>\r\n            <div className=\"progress-status\">\r\n              <Loader size={16} className=\"animate-spin\" />\r\n              <span>Excel 파일을 분석하고 구매 요청을 생성하는 중...</span>\r\n            </div>\r\n          </ProgressSection>\r\n        )}\r\n\r\n        {/* 업로드 결과 */}\r\n        {uploadResult && (\r\n          <ResultSection success={uploadResult.success}>\r\n            <div className=\"result-header\">\r\n              <div className=\"result-icon\">\r\n                {uploadResult.success ? (\r\n                  <CheckCircle size={24} />\r\n                ) : (\r\n                  <AlertCircle size={24} />\r\n                )}\r\n              </div>\r\n              <div className=\"result-title\">\r\n                {uploadResult.success ? '업로드 완료!' : '업로드 실패'}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"result-summary\">\r\n              <div className=\"summary-item\">\r\n                <span className=\"label\">처리된 요청:</span>\r\n                <span className=\"value\">{uploadResult.created_count}건</span>\r\n              </div>\r\n              {uploadResult.errors && uploadResult.errors.length > 0 && (\r\n                <div className=\"summary-item\">\r\n                  <span className=\"label\">오류 발생:</span>\r\n                  <span className=\"value\">{uploadResult.errors.length}건</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* 성공한 요청 번호들 */}\r\n            {uploadResult.success && uploadResult.request_numbers?.length > 0 && (\r\n              <div className=\"request-numbers\">\r\n                <div className=\"numbers-title\">생성된 구매 요청 번호:</div>\r\n                <div className=\"numbers-list\">\r\n                  {uploadResult.request_numbers.map((number, index) => (\r\n                    <span key={index} className=\"number-tag\">\r\n                      {number}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* 오류 상세 내역 */}\r\n            {uploadResult.errors && uploadResult.errors.length > 0 && (\r\n              <div className=\"error-details\">\r\n                {uploadResult.errors.map((error, index) => (\r\n                  <div key={index} className=\"error-item\">\r\n                    <div className=\"error-row\">\r\n                      행 {error.row}: {error.field}\r\n                    </div>\r\n                    <div className=\"error-message\">\r\n                      {error.message}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </ResultSection>\r\n        )}\r\n\r\n        {/* 버튼 그룹 */}\r\n        <ButtonGroup>\r\n          <div className=\"left-actions\">\r\n            {uploadResult && (\r\n              <Button variant=\"outline\" onClick={resetUpload}>\r\n                다시 업로드\r\n              </Button>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"right-actions\">\r\n            <Button variant=\"outline\" onClick={handleClose}>\r\n              닫기\r\n            </Button>\r\n            {selectedFile && !uploadResult && !uploadMutation.isPending && (\r\n              <Button onClick={handleUpload}>\r\n                <Upload size={16} />\r\n                업로드 시작\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </ButtonGroup>\r\n      </UploadContainer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ExcelBulkUpload;","// client/src/components/purchase/PurchaseRequestFilters.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Filter } from 'lucide-react';\r\n\r\ninterface SearchFilters {\r\n  search?: string;\r\n  status?: string;\r\n  dateFrom?: string;\r\n  dateTo?: string;\r\n}\r\n\r\ninterface PurchaseRequestFiltersProps {\r\n  onFilter: (filters: SearchFilters) => void;\r\n}\r\n\r\n// 🎨 깔끔한 한줄 필터 스타일 (높이 통일, 줄바꿈 방지)\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: 12px;\r\n  align-items: center;\r\n  flex: 1;\r\n  /* flex-wrap 제거 - 한 줄 강제 유지 */\r\n  \r\n  @media (max-width: 768px) {\r\n    gap: 8px;\r\n    overflow-x: auto; /* 모바일에서는 가로 스크롤 */\r\n  }\r\n`;\r\n\r\n// 공통 스타일 (높이 통일)\r\nconst commonInputStyle = `\r\n  height: 32px;\r\n  padding: 0 12px;\r\n  border: 1px solid #d1d5db;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  outline: none;\r\n  background: white;\r\n  box-sizing: border-box;\r\n  \r\n  &:focus {\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n  }\r\n`;\r\n\r\nconst FilterInput = styled.input`\r\n  ${commonInputStyle}\r\n  \r\n  &::placeholder {\r\n    color: #6b7280;\r\n  }\r\n`;\r\n\r\nconst FilterSelect = styled.select`\r\n  ${commonInputStyle}\r\n  min-width: 120px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DateSeparator = styled.span`\r\n  color: #6b7280;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  height: 32px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst ResetButton = styled.button`\r\n  ${commonInputStyle}\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 6px;\r\n  color: #6b7280;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  white-space: nowrap;\r\n  \r\n  &:hover {\r\n    background: #f9fafb;\r\n    border-color: #9ca3af;\r\n    color: #374151;\r\n  }\r\n  \r\n  &:focus {\r\n    border-color: #3b82f6;\r\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\r\n  }\r\n`;\r\n\r\nconst PurchaseRequestFilters: React.FC<PurchaseRequestFiltersProps> = ({ onFilter }) => {\r\n  const [filters, setFilters] = useState<SearchFilters>({});\r\n\r\n  const handleFilterChange = (field: keyof SearchFilters, value: string) => {\r\n    const newFilters = { ...filters, [field]: value || undefined };\r\n    setFilters(newFilters);\r\n    onFilter(newFilters);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFilters({});\r\n    onFilter({});\r\n  };\r\n\r\n  return (\r\n    <FilterContainer>\r\n      {/* 검색창 */}\r\n      <FilterInput\r\n        type=\"text\"\r\n        placeholder=\"품목명 또는 요청자로 검색...\"\r\n        value={filters.search || ''}\r\n        onChange={(e) => handleFilterChange('search', e.target.value)}\r\n        style={{ width: '200px', flexShrink: 0 }}\r\n      />\r\n      \r\n      {/* 상태 선택 */}\r\n      <FilterSelect\r\n        value={filters.status || ''}\r\n        onChange={(e) => handleFilterChange('status', e.target.value)}\r\n        style={{ flexShrink: 0 }}\r\n      >\r\n        <option value=\"\">전체 상태</option>\r\n        <option value=\"SUBMITTED\">요청됨</option>\r\n        <option value=\"COMPLETED\">완료됨</option>\r\n        <option value=\"CANCELLED\">취소됨</option>\r\n      </FilterSelect>\r\n\r\n      {/* 날짜 범위 */}\r\n      <FilterInput\r\n        type=\"date\"\r\n        placeholder=\"시작일\"\r\n        value={filters.dateFrom || ''}\r\n        onChange={(e) => handleFilterChange('dateFrom', e.target.value)}\r\n        style={{ flexShrink: 0 }}\r\n      />\r\n      \r\n      <DateSeparator>~</DateSeparator>\r\n      \r\n      <FilterInput\r\n        type=\"date\"\r\n        placeholder=\"종료일\"\r\n        value={filters.dateTo || ''}\r\n        onChange={(e) => handleFilterChange('dateTo', e.target.value)}\r\n        style={{ flexShrink: 0 }}\r\n      />\r\n      \r\n      {/* 초기화 버튼 */}\r\n      <ResetButton onClick={handleReset} type=\"button\" style={{ flexShrink: 0 }}>\r\n        <Filter size={16} />\r\n        초기화\r\n      </ResetButton>\r\n    </FilterContainer>\r\n  );\r\n};\r\n\r\nexport default PurchaseRequestFilters;","// client/src/components/purchase/RequestDetailModal.tsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Edit, Check, Calendar, User, Package, DollarSign, MapPin, Clock, AlertTriangle, Building, Hash } from 'lucide-react';\r\nimport Modal from '../common/Modal';\r\nimport Button from '../common/Button';\r\n\r\ninterface RequestDetailModalProps {\r\n  request: any;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onEdit?: () => void;\r\n  onApprove?: () => void;\r\n}\r\n\r\nconst DetailContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  max-height: 80vh;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst HeaderSection = styled.div`\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  padding: 24px;\r\n  border-radius: 16px;\r\n  color: white;\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 100px;\r\n    height: 100px;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    border-radius: 50%;\r\n    transform: translate(30px, -30px);\r\n  }\r\n  \r\n  .header-content {\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n  \r\n  .request-id {\r\n    font-size: 0.875rem;\r\n    opacity: 0.9;\r\n    margin-bottom: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 6px;\r\n  }\r\n  \r\n  .item-name {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    margin-bottom: 12px;\r\n    line-height: 1.3;\r\n  }\r\n  \r\n  .meta-info {\r\n    display: flex;\r\n    gap: 24px;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nconst StatusDisplay = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  \r\n  .status-badge {\r\n    padding: 6px 16px;\r\n    border-radius: 20px;\r\n    font-size: 0.875rem;\r\n    font-weight: 600;\r\n    background: rgba(255, 255, 255, 0.2);\r\n    backdrop-filter: blur(10px);\r\n    border: 1px solid rgba(255, 255, 255, 0.3);\r\n  }\r\n`;\r\n\r\nconst QuickStats = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\r\n  gap: 16px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StatCard = styled.div<{ $color: string }>`\r\n  background: linear-gradient(135deg, ${props => props.$color}15, ${props => props.$color}08);\r\n  border: 1px solid ${props => props.$color}25;\r\n  border-radius: 12px;\r\n  padding: 16px;\r\n  text-align: center;\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 4px;\r\n    height: 100%;\r\n    background: ${props => props.$color};\r\n  }\r\n  \r\n  .stat-icon {\r\n    color: ${props => props.$color};\r\n    margin-bottom: 8px;\r\n  }\r\n  \r\n  .stat-value {\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    color: #1f2937;\r\n    margin-bottom: 4px;\r\n  }\r\n  \r\n  .stat-label {\r\n    font-size: 0.75rem;\r\n    color: #6b7280;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.5px;\r\n  }\r\n`;\r\n\r\nconst Section = styled.div`\r\n  background: white;\r\n  border: 1px solid #e5e7eb;\r\n  border-radius: 16px;\r\n  padding: 24px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n  position: relative;\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 4px;\r\n    background: linear-gradient(90deg, #667eea, #764ba2);\r\n    border-radius: 16px 16px 0 0;\r\n  }\r\n  \r\n  .section-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    margin-bottom: 20px;\r\n    padding-bottom: 12px;\r\n    border-bottom: 2px solid #f3f4f6;\r\n    \r\n    .section-icon {\r\n      padding: 8px;\r\n      background: linear-gradient(135deg, #667eea, #764ba2);\r\n      color: white;\r\n      border-radius: 10px;\r\n      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\r\n    }\r\n    \r\n    h3 {\r\n      margin: 0;\r\n      font-size: 1.1rem;\r\n      font-weight: 600;\r\n      color: #1f2937;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InfoGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n`;\r\n\r\nconst InfoCard = styled.div`\r\n  background: #f8fafc;\r\n  border: 1px solid #e2e8f0;\r\n  border-radius: 12px;\r\n  padding: 16px;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    border-color: #667eea;\r\n  }\r\n  \r\n  .info-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    margin-bottom: 8px;\r\n    \r\n    .info-icon {\r\n      color: #667eea;\r\n      flex-shrink: 0;\r\n    }\r\n    \r\n    .info-label {\r\n      font-size: 0.875rem;\r\n      color: #64748b;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n  \r\n  .info-value {\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: #1e293b;\r\n    line-height: 1.4;\r\n    margin-left: 24px;\r\n  }\r\n`;\r\n\r\nconst SpecsCard = styled.div`\r\n  background: linear-gradient(135deg, #f1f5f9, #e2e8f0);\r\n  border: 1px solid #cbd5e1;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  \r\n  .specs-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    margin-bottom: 12px;\r\n    \r\n    .specs-icon {\r\n      color: #667eea;\r\n    }\r\n    \r\n    .specs-label {\r\n      font-size: 0.875rem;\r\n      font-weight: 600;\r\n      color: #475569;\r\n    }\r\n  }\r\n  \r\n  .specs-content {\r\n    background: white;\r\n    padding: 16px;\r\n    border-radius: 8px;\r\n    border: 1px solid #e2e8f0;\r\n    line-height: 1.6;\r\n    color: #334155;\r\n    white-space: pre-wrap;\r\n  }\r\n`;\r\n\r\nconst JustificationSection = styled.div`\r\n  background: linear-gradient(135deg, #fef7cd, #fed7aa);\r\n  border: 1px solid #f59e0b;\r\n  border-radius: 16px;\r\n  padding: 24px;\r\n  \r\n  .justification-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    margin-bottom: 16px;\r\n    \r\n    .justification-icon {\r\n      padding: 8px;\r\n      background: #f59e0b;\r\n      color: white;\r\n      border-radius: 10px;\r\n    }\r\n    \r\n    h3 {\r\n      margin: 0;\r\n      font-size: 1.1rem;\r\n      font-weight: 600;\r\n      color: #92400e;\r\n    }\r\n  }\r\n  \r\n  .justification-content {\r\n    background: white;\r\n    padding: 20px;\r\n    border-radius: 12px;\r\n    line-height: 1.6;\r\n    color: #451a03;\r\n    box-shadow: 0 2px 8px rgba(245, 158, 11, 0.1);\r\n    border: 1px solid rgba(245, 158, 11, 0.2);\r\n  }\r\n`;\r\n\r\nconst UrgencyBadge = styled.span<{ $urgency: string }>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n  \r\n  ${props => {\r\n    switch (props.$urgency?.toLowerCase()) {\r\n      case 'low':\r\n        return `\r\n          background: linear-gradient(135deg, #d1fae5, #a7f3d0);\r\n          color: #065f46;\r\n          border: 1px solid #10b981;\r\n        `;\r\n      case 'normal':\r\n        return `\r\n          background: linear-gradient(135deg, #dbeafe, #bfdbfe);\r\n          color: #1e40af;\r\n          border: 1px solid #3b82f6;\r\n        `;\r\n      case 'high':\r\n        return `\r\n          background: linear-gradient(135deg, #fed7aa, #fdba74);\r\n          color: #9a3412;\r\n          border: 1px solid #f97316;\r\n        `;\r\n      case 'urgent':\r\n      case 'emergency':\r\n        return `\r\n          background: linear-gradient(135deg, #fee2e2, #fecaca);\r\n          color: #991b1b;\r\n          border: 1px solid #ef4444;\r\n          animation: pulse 2s infinite;\r\n        `;\r\n      default:\r\n        return `\r\n          background: linear-gradient(135deg, #f3f4f6, #e5e7eb);\r\n          color: #374151;\r\n          border: 1px solid #9ca3af;\r\n        `;\r\n    }\r\n  }}\r\n  \r\n  @keyframes pulse {\r\n    0%, 100% { transform: scale(1); }\r\n    50% { transform: scale(1.05); }\r\n  }\r\n`;\r\n\r\nconst CategoryBadge = styled.span<{ $category: string }>`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  padding: 6px 12px;\r\n  border-radius: 16px;\r\n  font-size: 0.75rem;\r\n  font-weight: 600;\r\n  background: linear-gradient(135deg, #667eea, #764ba2);\r\n  color: white;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n  padding: 24px;\r\n  background: #f8fafc;\r\n  border-radius: 16px;\r\n  border: 2px dashed #cbd5e1;\r\n`;\r\n\r\nconst RequestDetailModal: React.FC<RequestDetailModalProps> = ({\r\n  request,\r\n  isOpen,\r\n  onClose,\r\n  onEdit,\r\n  onApprove\r\n}) => {\r\n  const statusLabels: Record<string, string> = {\r\n    'SUBMITTED': '요청됨',\r\n    'COMPLETED': '구매완료',\r\n    'CANCELLED': '취소됨'\r\n  };\r\n\r\n  const urgencyLabels: Record<string, string> = {\r\n    'LOW': '낮음',\r\n    'NORMAL': '보통',\r\n    'HIGH': '높음',\r\n    'URGENT': '긴급',\r\n    'EMERGENCY': '응급'\r\n  };\r\n\r\n  const categoryLabels: Record<string, string> = {\r\n    'OFFICE_SUPPLIES': '사무용품',\r\n    'ELECTRONICS': 'IT장비',\r\n    'FURNITURE': '가구',\r\n    'SOFTWARE': '소프트웨어',\r\n    'MAINTENANCE': '유지보수',\r\n    'SERVICES': '서비스',\r\n    'OTHER': '기타'\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    if (!dateString) return '-';\r\n    try {\r\n      return new Date(dateString).toLocaleDateString('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        weekday: 'short'\r\n      });\r\n    } catch {\r\n      return '-';\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number | null | undefined) => {\r\n    if (!amount || amount === 0) return '-';\r\n    return `₩${amount.toLocaleString()}`;\r\n  };\r\n\r\n  const canEdit = request.status === 'submitted';\r\n  const canApprove = request.status === 'PENDING_APPROVAL';\r\n\r\n  const renderWithLinks = (text: string) => {\r\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n    return text.split(urlRegex).map((part, index) => {\r\n      if (part.match(urlRegex)) {\r\n        return (\r\n          <a \r\n            key={index} \r\n            href={part} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            style={{ \r\n              color: '#f59e0b', \r\n              textDecoration: 'underline',\r\n              fontWeight: '600',\r\n              transition: 'color 0.2s ease'\r\n            }}\r\n            onMouseEnter={(e) => e.currentTarget.style.color = '#d97706'}\r\n            onMouseLeave={(e) => e.currentTarget.style.color = '#f59e0b'}\r\n          >\r\n            {part}\r\n          </a>\r\n        );\r\n      }\r\n      return part;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      title=\"구매 요청 상세정보\"\r\n      size=\"xl\"\r\n    >\r\n      <DetailContainer>\r\n        {/* 헤더 섹션 */}\r\n        <HeaderSection>\r\n          <div className=\"header-content\">\r\n            <div className=\"request-id\">\r\n              <Hash size={14} />\r\n              요청번호 #{request.id}\r\n            </div>\r\n            <div className=\"item-name\">{request.item_name || '품목명 없음'}</div>\r\n            <div className=\"meta-info\">\r\n              <StatusDisplay>\r\n                <span className=\"status-badge\">\r\n                  {statusLabels[request.status] || request.status}\r\n                </span>\r\n              </StatusDisplay>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: '6px', opacity: 0.9 }}>\r\n                <Calendar size={14} />\r\n                {formatDate(request.created_at)}\r\n              </div>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: '6px', opacity: 0.9 }}>\r\n                <User size={14} />\r\n                {request.requester_name || '요청자 정보없음'}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </HeaderSection>\r\n\r\n        {/* 핵심 정보 요약 */}\r\n        <QuickStats>\r\n          <StatCard $color=\"#3b82f6\">\r\n            <Package className=\"stat-icon\" size={24} />\r\n            <div className=\"stat-value\">{request.quantity?.toLocaleString() || '0'}</div>\r\n            <div className=\"stat-label\">수량 ({request.unit || '개'})</div>\r\n          </StatCard>\r\n          \r\n          <StatCard $color=\"#10b981\">\r\n            <DollarSign className=\"stat-icon\" size={24} />\r\n            <div className=\"stat-value\">{formatCurrency(request.estimated_unit_price)}</div>\r\n            <div className=\"stat-label\">단가</div>\r\n          </StatCard>\r\n          \r\n          <StatCard $color=\"#f59e0b\">\r\n            <DollarSign className=\"stat-icon\" size={24} />\r\n            <div className=\"stat-value\">{formatCurrency(request.total_budget)}</div>\r\n            <div className=\"stat-label\">총 예산</div>\r\n          </StatCard>\r\n          \r\n          <StatCard $color=\"#ef4444\">\r\n            <AlertTriangle className=\"stat-icon\" size={24} />\r\n            <div className=\"stat-value\">{urgencyLabels[request.urgency] || request.urgency}</div>\r\n            <div className=\"stat-label\">긴급도</div>\r\n          </StatCard>\r\n        </QuickStats>\r\n\r\n        {/* 사양 정보 */}\r\n        {request.specifications && (\r\n          <SpecsCard>\r\n            <div className=\"specs-header\">\r\n              <Package className=\"specs-icon\" size={16} />\r\n              <span className=\"specs-label\">사양 및 요구사항</span>\r\n            </div>\r\n            <div className=\"specs-content\">\r\n              {request.specifications}\r\n            </div>\r\n          </SpecsCard>\r\n        )}\r\n\r\n        {/* 상세 정보 */}\r\n        <Section>\r\n          <div className=\"section-header\">\r\n            <Building className=\"section-icon\" size={20} />\r\n            <h3>프로젝트 및 부서 정보</h3>\r\n          </div>\r\n          <InfoGrid>\r\n            <InfoCard>\r\n              <div className=\"info-header\">\r\n                <Building className=\"info-icon\" size={16} />\r\n                <span className=\"info-label\">소속 부서</span>\r\n              </div>\r\n              <div className=\"info-value\">{request.department || '정보없음'}</div>\r\n            </InfoCard>\r\n\r\n            {request.project && (\r\n              <InfoCard>\r\n                <div className=\"info-header\">\r\n                  <Package className=\"info-icon\" size={16} />\r\n                  <span className=\"info-label\">관련 프로젝트</span>\r\n                </div>\r\n                <div className=\"info-value\">{request.project}</div>\r\n              </InfoCard>\r\n            )}\r\n\r\n            <InfoCard>\r\n              <div className=\"info-header\">\r\n                <Package className=\"info-icon\" size={16} />\r\n                <span className=\"info-label\">요청자</span>\r\n              </div>\r\n              <div className=\"info-value\">\r\n                <CategoryBadge $category={request.requester_name}>\r\n                  {categoryLabels[request.requester_name] || request.requester_name}\r\n                </CategoryBadge>\r\n              </div>\r\n            </InfoCard>\r\n            <InfoCard>\r\n              <div className=\"info-header\">\r\n                <AlertTriangle className=\"info-icon\" size={16} />\r\n                <span className=\"info-label\">긴급도</span>\r\n              </div>\r\n              <div className=\"info-value\">\r\n                <UrgencyBadge $urgency={request.urgency}>\r\n                  {urgencyLabels[request.urgency] || request.urgency}\r\n                </UrgencyBadge>\r\n              </div>\r\n            </InfoCard>\r\n            <InfoCard>\r\n              <div className=\"info-header\">\r\n                <Building className=\"info-icon\" size={16} />\r\n                <span className=\"info-label\">구매처</span>\r\n              </div>\r\n              <div className=\"info-value\">{request.preferred_supplier || '정보없음'}</div>\r\n            </InfoCard>\r\n\r\n            \r\n\r\n            {request.preferred_supplier && (\r\n              <InfoCard>\r\n                <div className=\"info-header\">\r\n                  <Building className=\"info-icon\" size={16} />\r\n                  <span className=\"info-label\">구매처</span>\r\n                </div>\r\n                <div className=\"info-value\">{request.preferred_supplier}</div>\r\n              </InfoCard>\r\n            )}\r\n\r\n            {request.expected_delivery_date && (\r\n              <InfoCard>\r\n                <div className=\"info-header\">\r\n                  <Calendar className=\"info-icon\" size={16} />\r\n                  <span className=\"info-label\">희망 납기일</span>\r\n                </div>\r\n                <div className=\"info-value\">{formatDate(request.expected_delivery_date)}</div>\r\n              </InfoCard>\r\n            )}\r\n          </InfoGrid>\r\n        </Section>\r\n\r\n        {/* 구매 사유 */}\r\n        {request.justification && (\r\n          <JustificationSection>\r\n            <div className=\"justification-header\">\r\n              <AlertTriangle className=\"justification-icon\" size={20} />\r\n              <h3>              구매 사유 및 링크 <span style={{ color: 'red' }}>*</span>\r\n</h3>\r\n            </div>\r\n            <div className=\"justification-content\">\r\n              {renderWithLinks(request.justification)}\r\n            </div>\r\n          </JustificationSection>\r\n        )}\r\n\r\n        {/* 액션 버튼 */}\r\n        <ActionButtons>\r\n          <Button variant=\"outline\" onClick={onClose} size=\"lg\">\r\n            닫기\r\n          </Button>\r\n          \r\n          {canEdit && onEdit && (\r\n            <Button onClick={onEdit} size=\"lg\">\r\n              <Edit size={18} />\r\n              수정하기\r\n            </Button>\r\n          )}\r\n          \r\n          {canApprove && onApprove && (\r\n            <Button variant=\"success\" onClick={onApprove} size=\"lg\">\r\n              <Check size={18} />\r\n              승인처리\r\n            </Button>\r\n          )}\r\n        </ActionButtons>\r\n      </DetailContainer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RequestDetailModal;","// client/src/components/purchase/PurchaseRequestPage.tsx\r\nimport React, { useState, useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { toast } from 'react-toastify';\r\nimport { \r\n  Plus, \r\n  Download, \r\n  RefreshCw, \r\n  Eye,\r\n  Edit,\r\n  Trash2,\r\n  Check,\r\n  X,\r\n  Clock,\r\n  AlertCircle,\r\n  FileText,\r\n  Upload,\r\n  Filter,\r\n  Package2, \r\n  CheckCircle2,\r\n  TrendingUp,\r\n  Users,\r\n  Calendar\r\n} from 'lucide-react';\r\n\r\n// Components\r\nimport Table from '../common/Table';\r\nimport Pagination from '../common/Pagination';\r\nimport LoadingSpinner from '../common/LoadingSpinner';\r\nimport Card from '../common/Card';\r\nimport Modal from '../common/Modal';\r\nimport Button from '../common/Button';\r\nimport PurchaseRequestForm from './PurchaseRequestForm';\r\nimport ExcelBulkUpload from './ExcelBulkUpload';\r\nimport PurchaseRequestFilters from './PurchaseRequestFilters';\r\nimport RequestDetailModal from './RequestDetailModal';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Services\r\nimport api, { purchaseApi, inventoryApi } from '../../services/api';\r\n\r\n// SearchFilters 타입 정의\r\ninterface SearchFilters {\r\n  search?: string;\r\n  status?: string;\r\n  urgency?: string;\r\n  department?: string;\r\n  category?: string;\r\n  dateFrom?: string;\r\n  dateTo?: string;\r\n}\r\n\r\n// Types - API와 맞춤\r\ninterface PurchaseRequest {\r\n  id: number;\r\n  item_name: string;\r\n  specifications?: string;\r\n  quantity: number;\r\n  unit?: string;\r\n  estimated_unit_price?: number;\r\n  total_budget?: number;\r\n  currency?: string;\r\n  category?: string;\r\n  urgency: string;\r\n  requester_name: string;\r\n  requester_email?: string;\r\n  department: string;\r\n  status: string;\r\n  created_at: string;\r\n  justification: string;\r\n  notes?: string;\r\n  inventory_item_id?: number;\r\n  inventory_item_code?: string;\r\n  preferred_supplier?: string;\r\n}\r\n\r\ninterface TableColumn<T> {\r\n  key: keyof T | string;\r\n  label: string;\r\n  sortable?: boolean;\r\n  width?: string;\r\n  render?: (value: any, item: T) => React.ReactNode;\r\n}\r\n\r\ntype RequestStatus = 'all' | 'pending' | 'approved' | 'rejected' | 'in_review';\r\ntype UrgencyLevel = 'all' | 'low' | 'normal' | 'high' | 'urgent';\r\n\r\n// 🎨 개선된 Styled Components (두 번째 코드에서 가져옴)\r\nconst Container = styled.div`\r\n  padding: 24px;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst PageHeader = styled.div`\r\n  margin-bottom: 32px;\r\n`;\r\n\r\nconst PageTitle = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n  color: #1f2937;\r\n`;\r\n\r\nconst PageSubtitle = styled.p`\r\n  color: #6b7280;\r\n  margin-bottom: 0;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 32px;\r\n  \r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    gap: 16px;\r\n  }\r\n`;\r\n\r\nconst StatCard = styled(Card)<{ $color?: string }>`\r\n  text-align: center;\r\n  background: ${props => props.$color ? `linear-gradient(135deg, ${props.$color}15 0%, ${props.$color}08 100%)` : 'white'};\r\n  border-left: 4px solid ${props => props.$color || '#3b82f6'};\r\n  padding: 24px 20px;\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\r\n  }\r\n  \r\n  .stat-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 8px;\r\n    margin-bottom: 16px;\r\n    color: ${props => props.$color || '#3b82f6'};\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .stat-value {\r\n    font-size: 2.5rem;\r\n    font-weight: 700;\r\n    margin-bottom: 8px;\r\n    color: ${props => props.$color || '#3b82f6'};\r\n    line-height: 1;\r\n  }\r\n  \r\n  .stat-label {\r\n    font-size: 0.875rem;\r\n    color: #6b7280;\r\n    margin-bottom: 12px;\r\n  }\r\n  \r\n  .stat-change {\r\n    font-size: 0.75rem;\r\n    padding: 4px 8px;\r\n    border-radius: 12px;\r\n    font-weight: 500;\r\n    display: inline-block;\r\n    \r\n    &.positive {\r\n      background: #10b98120;\r\n      color: #10b981;\r\n    }\r\n    \r\n    &.negative {\r\n      background: #ef444420;\r\n      color: #ef4444;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContentCard = styled(Card)`\r\n  padding: 0;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst FilterSection = styled.div`\r\n  padding: 20px 24px;\r\n  border-bottom: 1px solid #e5e7eb;\r\n  background: #f9fafb;\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: 16px;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  \r\n  @media (max-width: 1024px) {\r\n    flex-direction: column;\r\n    gap: 16px;\r\n  }\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n  flex-shrink: 0;\r\n  \r\n  @media (max-width: 1024px) {\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    justify-content: stretch;\r\n    \r\n    > button {\r\n      flex: 1;\r\n      min-width: 0;\r\n      \r\n      span {\r\n        display: none;\r\n      }\r\n      \r\n      svg {\r\n        margin: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n  padding: 24px;\r\n`;\r\n\r\nconst StatusBadge = styled.span<{ $status: string }>`\r\n  padding: 4px 12px;\r\n  border-radius: 16px;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n  \r\n  ${props => {\r\n    switch (props.$status) {\r\n      case 'SUBMITTED':\r\n        return `\r\n          background: #FEF3C7;\r\n          color: #92400E;\r\n        `;\r\n      case 'COMPLETED':\r\n        return `\r\n          background: #D1FAE5;\r\n          color: #065F46;\r\n        `;\r\n      case 'CANCELLED':\r\n        return `\r\n          background: #FEE2E2;\r\n          color: #991B1B;\r\n        `;\r\n      case 'IN_REVIEW':\r\n        return `\r\n          background: #DBEAFE;\r\n          color: #1E40AF;\r\n        `;\r\n      default:\r\n        return `\r\n          background: #F3F4F6;\r\n          color: #374151;\r\n        `;\r\n    }\r\n  }}\r\n`;\r\n\r\nconst UrgencyBadge = styled.span<{ $urgency: string }>`\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  font-size: 11px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n  \r\n  ${props => {\r\n    switch (props.$urgency) {\r\n      case 'urgent':\r\n        return `\r\n          background: #fee2e2;\r\n          color: #991b1b;\r\n        `;\r\n      case 'high':\r\n        return `\r\n          background: #fed7aa;\r\n          color: #9a3412;\r\n        `;\r\n      case 'normal':\r\n        return `\r\n          background: #dbeafe;\r\n          color: #1e40af;\r\n        `;\r\n      case 'low':\r\n        return `\r\n          background: #d1fae5;\r\n          color: #065f46;\r\n        `;\r\n      default:\r\n        return `\r\n          background: #f3f4f6;\r\n          color: #374151;\r\n        `;\r\n    }\r\n  }}\r\n`;\r\n\r\nconst ActionButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n`;\r\n\r\nconst ErrorContainer = styled.div`\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  \r\n  .error-icon {\r\n    color: #ef4444;\r\n    margin-bottom: 16px;\r\n  }\r\n  \r\n  .error-title {\r\n    font-size: 1.25rem;\r\n    font-weight: 600;\r\n    margin-bottom: 8px;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .error-message {\r\n    color: #6b7280;\r\n    margin-bottom: 24px;\r\n    line-height: 1.6;\r\n  }\r\n`;\r\n\r\nconst EmptyState = styled.div`\r\n  text-align: center;\r\n  padding: 60px 20px;\r\n  color: #6b7280;\r\n  \r\n  .empty-icon {\r\n    margin-bottom: 16px;\r\n    color: #d1d5db;\r\n  }\r\n  \r\n  .empty-title {\r\n    font-size: 1.125rem;\r\n    font-weight: 500;\r\n    margin-bottom: 8px;\r\n    color: #374151;\r\n  }\r\n  \r\n  .empty-message {\r\n    margin-bottom: 24px;\r\n    line-height: 1.6;\r\n  }\r\n`;\r\n\r\nconst ConfirmDialog = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ConfirmContent = styled.div`\r\n  background: white;\r\n  padding: 32px;\r\n  border-radius: 16px;\r\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\r\n  max-width: 500px;\r\n  width: 90%;\r\n  text-align: center;\r\n  \r\n  .confirm-icon {\r\n    width: 64px;\r\n    height: 64px;\r\n    background: linear-gradient(135deg, #10b981, #059669);\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0 auto 20px;\r\n    color: white;\r\n  }\r\n  \r\n  .confirm-title {\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    margin-bottom: 12px;\r\n    color: #1f2937;\r\n  }\r\n  \r\n  .confirm-message {\r\n    color: #6b7280;\r\n    margin-bottom: 8px;\r\n    line-height: 1.5;\r\n  }\r\n  \r\n  .item-info {\r\n    background: #f9fafb;\r\n    padding: 16px;\r\n    border-radius: 8px;\r\n    margin: 20px 0;\r\n    text-align: left;\r\n    \r\n    .info-row {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 8px;\r\n      \r\n      &:last-child {\r\n        margin-bottom: 0;\r\n      }\r\n      \r\n      .label {\r\n        font-weight: 500;\r\n        color: #6b7280;\r\n        min-width: 80px;\r\n      }\r\n      \r\n      .value {\r\n        font-weight: 600;\r\n        color: #1f2937;\r\n        flex: 1;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .button-group {\r\n    display: flex;\r\n    gap: 12px;\r\n    justify-content: center;\r\n    margin-top: 24px;\r\n  }\r\n`;\r\n\r\n// 메인 컴포넌트\r\nconst PurchaseRequestPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const queryClient = useQueryClient();\r\n  \r\n  // State\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [filters, setFilters] = useState<SearchFilters>({});\r\n  const [isFormModalOpen, setIsFormModalOpen] = useState(false);\r\n  const [isExcelModalOpen, setIsExcelModalOpen] = useState(false);\r\n  const [editingRequest, setEditingRequest] = useState<PurchaseRequest | null>(null);\r\n  const [viewingRequest, setViewingRequest] = useState<PurchaseRequest | null>(null);\r\n  const [isDetailModalOpen, setIsDetailModalOpen] = useState(false);\r\n  const [confirmingItem, setConfirmingItem] = useState<PurchaseRequest | null>(null);\r\n\r\n  // 구매 요청 목록 조회\r\n  const { \r\n    data: requestsData, \r\n    isLoading, \r\n    error,\r\n    refetch \r\n  } = useQuery({\r\n    queryKey: ['purchase-requests', currentPage, filters],\r\n    queryFn: () => purchaseApi.getRequests({ page: currentPage, limit: 20, ...filters }),\r\n    keepPreviousData: true,\r\n    staleTime: 5 * 60 * 1000,\r\n    retry: 2,\r\n  });\r\n\r\n  // 통계 데이터 조회\r\n  const { data: statsData } = useQuery({\r\n    queryKey: ['purchase-requests-stats'],\r\n    queryFn: () => purchaseApi.getStats(),\r\n    staleTime: 5 * 60 * 1000,\r\n  });\r\n\r\n  // 🔥 안정적인 구매완료 처리 (첫 번째 코드의 로직 사용)\r\n  const completePurchaseMutation = useMutation({\r\n    mutationFn: async ({ requestId, requestData }: { \r\n      requestId: number; \r\n      requestData: PurchaseRequest;\r\n    }) => {\r\n      console.log('🚀 구매완료 + 품목 등록 시작:', { requestId, requestData });\r\n      \r\n      try {\r\n        // 1️⃣ 먼저 구매 요청 상태를 COMPLETED로 변경\r\n        console.log('📝 1단계: 구매 요청 상태 업데이트');\r\n        const updateResult = await purchaseApi.updateRequest(requestId, {\r\n          status: 'COMPLETED',\r\n          completed_date: new Date().toISOString(),\r\n          completed_by: requestData.requester_name\r\n        });\r\n        console.log('✅ 구매 요청 상태 업데이트 성공:', updateResult);\r\n\r\n        // 2️⃣ 품목관리에 새 품목 등록\r\n        console.log('📦 2단계: 품목관리에 등록');\r\n        \r\n        // 구매 요청 데이터를 품목관리용 데이터로 변환\r\n        const inventoryData = {\r\n          item_code: `ITM-${new Date().toISOString().split('T')[0].replace(/-/g, '')}-${requestId.toString().padStart(4, '0')}`,\r\n          item_name: requestData.item_name || '품목명 없음',\r\n          category: requestData.category || 'OTHER',\r\n          description: requestData.specifications || `구매요청 #${requestId}에서 자동 생성`,\r\n          current_stock: Number(requestData.quantity) || 0,\r\n          minimum_stock: Math.max(1, Math.ceil((Number(requestData.quantity) || 0) * 0.2)),\r\n          maximum_stock: (Number(requestData.quantity) || 0) * 2,\r\n          unit: requestData.unit || '개',\r\n          unit_price: Number(requestData.estimated_unit_price) || 0,\r\n          currency: requestData.currency || 'KRW',\r\n          supplier_name: requestData.preferred_supplier || '',\r\n          location: '창고',\r\n          warehouse: '메인창고',\r\n          purchase_request_id: requestId,\r\n          notes: `구매요청 #${requestId}에서 자동 생성됨`,\r\n          is_active: true,\r\n          created_by: requestData.requester_name,\r\n          department: requestData.department\r\n        };\r\n\r\n        console.log('📤 품목 등록 데이터:', inventoryData);\r\n        \r\n        // 품목관리 API 호출 (inventoryApi 사용)\r\n        const inventoryResult = await inventoryApi.createItem(inventoryData);\r\n        console.log('✅ 품목 등록 성공:', inventoryResult);\r\n\r\n        return {\r\n          success: true,\r\n          purchase_update: updateResult,\r\n          inventory_created: inventoryResult,\r\n          inventory_item_id: inventoryResult.data?.id,\r\n          inventory_item_code: inventoryData.item_code,\r\n          message: '구매완료 및 품목 등록 성공'\r\n        };\r\n\r\n      } catch (error) {\r\n        console.error('❌ 처리 중 오류:', error);\r\n        \r\n        // 부분 실패 처리: 구매 요청은 성공했지만 품목 등록 실패\r\n        if (error.message?.includes('inventory') || error.response?.status) {\r\n          console.warn('⚠️ 품목 등록 실패, 구매 요청만 완료됨');\r\n          return {\r\n            success: true,\r\n            partial_success: true,\r\n            purchase_update: true,\r\n            inventory_created: false,\r\n            message: '구매 요청은 완료되었지만 품목 등록에 실패했습니다.',\r\n            error: error.message\r\n          };\r\n        }\r\n        \r\n        throw error;\r\n      }\r\n    },\r\n    \r\n    // 🔥 재시도 설정 추가\r\n    retry: (failureCount, error: any) => {\r\n      // 최대 2번까지만 재시도\r\n      if (failureCount >= 2) return false;\r\n      \r\n      // 트랜잭션 오류나 500 에러인 경우에만 재시도\r\n      const shouldRetry = error.response?.status === 500 || \r\n                         error.response?.data?.detail?.includes('transaction is aborted');\r\n      \r\n      if (shouldRetry) {\r\n        console.log(`🔄 재시도 ${failureCount + 1}/2`);\r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n    },\r\n    \r\n    // 재시도 간격 (점진적 증가)\r\n    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 5000),\r\n\r\n    onSuccess: async (result, variables) => {\r\n      console.log('🎉 구매완료 처리 결과:', result);\r\n      \r\n      try {\r\n        // 캐시 업데이트\r\n        queryClient.setQueryData(['purchase-requests', currentPage, filters], (oldData: any) => {\r\n          if (!oldData?.data?.items) return oldData;\r\n          \r\n          return {\r\n            ...oldData,\r\n            data: {\r\n              ...oldData.data,\r\n              items: oldData.data.items.map((item: any) => {\r\n                if (item.id === variables.requestId) {\r\n                  return {\r\n                    ...item,\r\n                    status: 'COMPLETED',\r\n                    completed_date: new Date().toISOString(),\r\n                    completed_by: result.inventory_created,\r\n                    inventory_item_id: result.inventory_item_id,\r\n                    inventory_item_code: result.inventory_item_code\r\n                  };\r\n                }\r\n                return item;\r\n              })\r\n            }\r\n          };\r\n        });\r\n        \r\n        // 성공 메시지 표시\r\n        if (result.inventory_created !== false) {\r\n          // 완전 성공\r\n          toast.success(\r\n            `🎉 구매완료! 품목코드: ${result.inventory_item_code}로 등록되었습니다!`,\r\n            { autoClose: 5000, position: 'top-center' }\r\n          );\r\n          \r\n          // 품목관리 페이지로 이동\r\n          setTimeout(() => {\r\n            navigate(`/inventory?highlight=${result.inventory_item_id}`);\r\n          }, 2000);\r\n          \r\n        } else {\r\n          // 부분 성공\r\n          toast.warning(\r\n            '구매 요청은 완료되었지만 품목 등록에 실패했습니다. 수동으로 등록해주세요.',\r\n            { autoClose: 7000 }\r\n          );\r\n        }\r\n        \r\n        // 🔥 쿼리 새로고침을 순차적으로 실행 (동시성 문제 방지)\r\n        await queryClient.invalidateQueries({ queryKey: ['purchase-requests'] });\r\n        await new Promise(resolve => setTimeout(resolve, 200));\r\n        \r\n        await queryClient.invalidateQueries({ queryKey: ['purchase-requests-stats'] });\r\n        await new Promise(resolve => setTimeout(resolve, 200));\r\n        \r\n        await queryClient.invalidateQueries({ queryKey: ['inventory'] });\r\n        await new Promise(resolve => setTimeout(resolve, 200));\r\n        \r\n        await queryClient.invalidateQueries({ queryKey: ['inventory-stats'] });\r\n        \r\n        setConfirmingItem(null);\r\n        \r\n      } catch (error) {\r\n        console.error('성공 후 처리 중 오류:', error);\r\n        toast.warning('구매는 완료되었으나 화면 새로고침 중 오류가 발생했습니다. 페이지를 새로고침해주세요.');\r\n        setConfirmingItem(null);\r\n      }\r\n    },\r\n    \r\n    onError: (error: any) => {\r\n      console.error('❌ 구매완료 처리 실패:', error);\r\n      \r\n      // 에러 메시지 추출 및 개선\r\n      let errorMessage = '구매완료 처리 중 오류가 발생했습니다.';\r\n      \r\n      if (error.message) {\r\n        errorMessage = error.message;\r\n      } else if (error.response?.data?.detail) {\r\n        // 트랜잭션 오류 메시지 개선\r\n        if (error.response.data.detail.includes('transaction is aborted')) {\r\n          errorMessage = '⚠️ 데이터베이스 처리 중 문제가 발생했습니다.\\n\\n잠시 후 다시 시도하거나, 지속적으로 문제가 발생하면 관리자에게 문의해주세요.';\r\n        } else {\r\n          errorMessage = error.response.data.detail;\r\n        }\r\n      } else if (error.response?.data?.message) {\r\n        errorMessage = error.response.data.message;\r\n      }\r\n      \r\n      toast.error(errorMessage, {\r\n        autoClose: 7000,\r\n        position: 'top-center'\r\n      });\r\n      \r\n      setConfirmingItem(null);\r\n    },\r\n  });\r\n\r\n  // 삭제 Mutation\r\nconst deleteMutation = useMutation({\r\n  mutationFn: async (requestId: number) => {\r\n    console.log(`🔥 삭제 API 호출 시작: ID=${requestId}`);\r\n    \r\n    try {\r\n      // 🔥 purchaseApi.deleteRequest 사용\r\n      const response = await purchaseApi.deleteRequest(requestId);\r\n      console.log('✅ 삭제 API 성공:', response);\r\n      return response;\r\n    } catch (error: any) {\r\n      console.error('❌ 삭제 API 실패:', error);\r\n      console.error('❌ 에러 상세:', {\r\n        status: error.response?.status,\r\n        data: error.response?.data,\r\n        message: error.message\r\n      });\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  onSuccess: (data, requestId) => {\r\n    console.log('🎉 삭제 성공 처리:', data);\r\n    \r\n    // 성공 메시지\r\n    const itemName = data.deleted_item || '구매 요청';\r\n    const method = data.method === 'soft_delete' ? '취소' : '삭제';\r\n    \r\n    toast.success(`${itemName}이(가) 성공적으로 ${method}되었습니다.`, {\r\n      autoClose: 3000\r\n    });\r\n    \r\n    // 🔥 캐시에서 해당 항목 제거 (즉시 UI 업데이트)\r\n    queryClient.setQueryData(['purchase-requests', currentPage, filters], (oldData: any) => {\r\n      if (!oldData?.data?.items) return oldData;\r\n      \r\n      const newItems = oldData.data.items.filter((item: any) => item.id !== requestId);\r\n      \r\n      console.log(`📋 캐시 업데이트: ${oldData.data.items.length} → ${newItems.length}`);\r\n      \r\n      return {\r\n        ...oldData,\r\n        data: {\r\n          ...oldData.data,\r\n          items: newItems,\r\n          total: Math.max(0, oldData.data.total - 1)\r\n        }\r\n      };\r\n    });\r\n    \r\n    // 🔥 통계 캐시도 업데이트\r\n    queryClient.setQueryData(['purchase-requests-stats'], (oldStats: any) => {\r\n      if (!oldStats?.data) return oldStats;\r\n      \r\n      return {\r\n        ...oldStats,\r\n        data: {\r\n          ...oldStats.data,\r\n          total: Math.max(0, oldStats.data.total - 1)\r\n        }\r\n      };\r\n    });\r\n    \r\n    // 🔥 1초 후 새로고침 (확실한 동기화)\r\n    setTimeout(() => {\r\n      console.log('🔄 캐시 새로고침 실행');\r\n      queryClient.invalidateQueries({ queryKey: ['purchase-requests'] });\r\n      queryClient.invalidateQueries({ queryKey: ['purchase-requests-stats'] });\r\n    }, 1000);\r\n  },\r\n  \r\n  onError: (error: any, requestId) => {\r\n    console.error('❌ 삭제 실패 처리:', error);\r\n    \r\n    // 구체적인 에러 메시지\r\n    let errorMessage = '삭제 중 오류가 발생했습니다.';\r\n    \r\n    if (error.response?.status === 404) {\r\n      errorMessage = '삭제할 구매 요청을 찾을 수 없습니다.';\r\n    } else if (error.response?.status === 400) {\r\n      errorMessage = error.response.data?.detail || '삭제할 수 없는 상태입니다.';\r\n    } else if (error.response?.status === 500) {\r\n      errorMessage = '서버 오류로 삭제에 실패했습니다. 잠시 후 다시 시도해주세요.';\r\n    } else if (error.response?.data?.detail) {\r\n      errorMessage = error.response.data.detail;\r\n    }\r\n    \r\n    toast.error(errorMessage, {\r\n      autoClose: 5000\r\n    });\r\n  },\r\n});\r\n\r\n\r\n  // Export Mutation\r\n  const exportMutation = useMutation({\r\n    mutationFn: () => purchaseApi.exportRequests(filters),\r\n    onSuccess: () => {\r\n      toast.success('Excel 파일이 다운로드되었습니다.');\r\n    },\r\n    onError: (error) => {\r\n      console.error('Export error:', error);\r\n      toast.error('Excel 다운로드에 실패했습니다.');\r\n    },\r\n  });\r\n\r\n  // 테이블 컬럼 정의\r\n  const columns: TableColumn<PurchaseRequest>[] = useMemo(() => [\r\n    {\r\n      key: 'id',\r\n      label: '번호',\r\n      sortable: true,\r\n      width: '80px',\r\n      render: (value) => (\r\n        <span style={{ fontFamily: 'monospace', fontSize: '0.9rem', fontWeight: '500' }}>\r\n          #{value}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      key: 'item_name',\r\n      label: '품목명',\r\n      sortable: true,\r\n      width: '200px',\r\n      render: (value, item) => (\r\n        <div>\r\n          <div style={{ fontWeight: 'bold', marginBottom: '4px' }}>{value || '품목명 없음'}</div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: 'quantity',\r\n      label: '수량',\r\n      width: '80px',\r\n      render: (value, item) => (\r\n        <div style={{ \r\n          textAlign: 'center', \r\n          fontWeight: '500',\r\n          whiteSpace: 'nowrap'  // 줄바꿈 방지\r\n        }}>\r\n          {value?.toLocaleString() || '0'} {item.unit || '개'}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: 'requester_name',\r\n      label: '요청자',\r\n      width: '120px',\r\n      render: (value, item) => (\r\n        <div>\r\n          <div style={{ fontWeight: '500' }}>{value}</div>\r\n          <div style={{ fontSize: '12px', color: '#6b7280' }}>{item.department}</div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      key: 'urgency',\r\n      label: '긴급도',\r\n      width: '100px',\r\n      render: (value) => {\r\n        const urgencyMap: Record<string, string> = {\r\n          'low': '낮음',\r\n          'normal': '보통',\r\n          'high': '높음', \r\n          'urgent': '긴급',\r\n          'emergency': '응급'\r\n        };\r\n        return <UrgencyBadge $urgency={value}>{urgencyMap[value] || value}</UrgencyBadge>;\r\n      },\r\n    },\r\n    {\r\n      key: 'status',\r\n      label: '상태',\r\n      width: '120px',\r\n      render: (value) => {\r\n        const statusMap: Record<string, string> = {\r\n          'SUBMITTED': '요청됨',\r\n          'COMPLETED': '구매완료', \r\n          'CANCELLED': '취소됨'\r\n        };\r\n        return <StatusBadge $status={value}>{statusMap[value] || value}</StatusBadge>;\r\n      },\r\n    },\r\n    {\r\n      key: 'created_at',\r\n      label: '요청일',\r\n      sortable: true,\r\n      width: '120px',\r\n      render: (value) => value ? new Date(value).toLocaleDateString('ko-KR') : '-',\r\n    },\r\n    {\r\n      key: 'total_budget',\r\n      label: '예상금액',\r\n      width: '160px',\r\n      render: (value, item) => {\r\n        if (!value || value === 0) return '-';\r\n        const currency = item.currency || '원';\r\n        return `${currency} ${value.toLocaleString()}`;\r\n      },\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: '관리',\r\n      width: '160px',\r\n      render: (_, item) => {\r\n        const isCompleted = item.status === 'COMPLETED';\r\n        const hasInventoryItem = item.inventory_item_id || item.inventory_item_code;\r\n        \r\n        return (\r\n          <ActionButtonGroup>\r\n            {/* 🔥 완료 상태와 품목 등록 여부에 따른 버튼 표시 */}\r\n            {isCompleted ? (\r\n              hasInventoryItem ? (\r\n                // ✅ 완전 완료 (품목까지 등록됨)\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"outline\"\r\n                  title={`구매완료 & 품목등록 완료 ${item.inventory_item_code ? `(${item.inventory_item_code})` : ''}`}\r\n                  onClick={() => {\r\n                    if (item.inventory_item_id) {\r\n                      navigate(`/inventory?highlight=${item.inventory_item_id}`);\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    background: '#f0fdf4',\r\n                    color: '#16a34a',\r\n                    border: '1px solid #16a34a'\r\n                  }}\r\n                  disabled={!item.inventory_item_id}\r\n                >\r\n                  <Package2 size={14} />\r\n                  완료됨\r\n                </Button>\r\n              ) : (\r\n                // ⚠️ 부분 완료 (구매만 완료, 품목 등록 안됨)\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"outline\"\r\n                  title=\"구매완료됨 (품목 등록 실패)\"\r\n                  disabled\r\n                  style={{\r\n                    background: '#f3f4f6',\r\n                    color: '#6b7280',\r\n                    border: '1px solid #6b7280'\r\n                  }}\r\n                >\r\n                  <Check size={14} />\r\n                  구매완료\r\n                </Button>\r\n              )\r\n            ) : (\r\n              // 🟢 미완료 - 구매완료 버튼\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"success\"\r\n                onClick={() => handlePurchaseComplete(item)}\r\n                title=\"구매완료 + 품목등록\"\r\n                style={{\r\n                  background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',\r\n                  color: 'white',\r\n                  fontWeight: '600'\r\n                }}\r\n              >\r\n                <CheckCircle2 size={14} />\r\n                구매완료\r\n              </Button>\r\n            )}\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outline\"\r\n              onClick={() => handleView(item)}\r\n              title=\"상세보기\"\r\n            >\r\n              <Eye size={14} />\r\n            </Button>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outline\"\r\n              onClick={() => handleEdit(item)}\r\n              title=\"수정\"\r\n            >\r\n              <Edit size={14} />\r\n            </Button>\r\n            \r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"danger\"\r\n              onClick={() => handleDelete(item.id)}\r\n              title=\"삭제\"\r\n              disabled={deleteMutation.isPending}\r\n              loading={deleteMutation.isPending}\r\n            >\r\n              <Trash2 size={14} />\r\n            </Button>\r\n          </ActionButtonGroup>\r\n        );\r\n      },\r\n    }],\r\n []);\r\n\r\n  // 이벤트 핸들러\r\n  const handleView = (request: PurchaseRequest) => {\r\n    console.log('상세보기 데이터:', request);\r\n    setViewingRequest(request);\r\n    setIsDetailModalOpen(true);\r\n  };\r\n\r\n  const handleEdit = (request: PurchaseRequest) => {\r\n    setEditingRequest(request);\r\n    setIsFormModalOpen(true);\r\n  };\r\n\r\nconst handleDelete = async (requestId: number) => {\r\n  try {\r\n    console.log(`🗑️ 구매 요청 삭제 시작: ID=${requestId}`);\r\n    \r\n    // 사용자 확인\r\n    const confirmMessage = `정말로 이 구매 요청을 삭제하시겠습니까?\\n\\nID: ${requestId}\\n\\n⚠️ 이 작업은 되돌릴 수 없습니다.`;\r\n    \r\n    if (!window.confirm(confirmMessage)) {\r\n      console.log('🚫 사용자가 삭제를 취소함');\r\n      return;\r\n    }\r\n    \r\n    // 삭제 실행\r\n    console.log(`🗑️ 삭제 API 호출: ID=${requestId}`);\r\n    await deleteMutation.mutateAsync(requestId);\r\n    \r\n  } catch (error: any) {\r\n    console.error('❌ 삭제 처리 중 오류:', error);\r\n    \r\n    // 에러 메시지 처리\r\n    let errorMessage = '삭제 중 오류가 발생했습니다.';\r\n    \r\n    if (error.response?.status === 404) {\r\n      errorMessage = '삭제할 구매 요청을 찾을 수 없습니다.';\r\n    } else if (error.response?.status === 400) {\r\n      errorMessage = error.response.data?.detail || '삭제할 수 없는 상태입니다.';\r\n    } else if (error.response?.data?.detail) {\r\n      errorMessage = error.response.data.detail;\r\n    }\r\n    \r\n    toast.error(errorMessage, {\r\n      autoClose: 5000\r\n    });\r\n  }\r\n};\r\n\r\n  const handleExport = () => {\r\n    exportMutation.mutate();\r\n  };\r\n\r\n  // 🔥 개선된 새로고침 함수\r\n  const handleRefresh = async () => {\r\n    try {\r\n      // 순차적으로 새로고침 (동시성 문제 방지)\r\n      await queryClient.invalidateQueries({ queryKey: ['purchase-requests'] });\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      \r\n      await queryClient.invalidateQueries({ queryKey: ['purchase-requests-stats'] });\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      \r\n      await refetch();\r\n    } catch (error) {\r\n      console.error('새로고침 중 오류:', error);\r\n      toast.error('새로고침 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (newFilters: Partial<SearchFilters>) => {\r\n    setFilters(prev => ({ ...prev, ...newFilters }));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleFormSuccess = () => {\r\n    setIsFormModalOpen(false);\r\n    setEditingRequest(null);\r\n    handleRefresh();\r\n  };\r\n\r\n  const handleFormCancel = () => {\r\n    setIsFormModalOpen(false);\r\n    setEditingRequest(null);\r\n  };\r\n\r\n  const handleExcelSuccess = () => {\r\n    setIsExcelModalOpen(false);\r\n    handleRefresh();\r\n  };\r\n\r\n  const handlePurchaseComplete = (request: PurchaseRequest) => {\r\n    console.log('🔄 구매완료 처리 요청:', request);\r\n    setConfirmingItem(request);\r\n  };\r\n\r\n  // 🔥 개선된 구매완료 확인 함수\r\n  const confirmPurchaseComplete = async () => {\r\n    if (!confirmingItem) return;\r\n    \r\n    console.log('🆕 구매완료 + 품목등록 처리 시작');\r\n    \r\n    try {\r\n      // 중복 클릭 방지\r\n      if (completePurchaseMutation.isPending) {\r\n        console.log('⚠️ 이미 처리 중입니다.');\r\n        return;\r\n      }\r\n      \r\n      // 구매 요청 데이터와 함께 전달\r\n      await completePurchaseMutation.mutateAsync({\r\n        requestId: confirmingItem.id,\r\n        requestData: confirmingItem\r\n      });\r\n      \r\n    } catch (error) {\r\n      // 이미 onError에서 처리됨\r\n      console.log('구매완료 처리가 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const cancelPurchaseComplete = () => {\r\n    setConfirmingItem(null);\r\n  };\r\n\r\n  // 데이터 추출\r\n  const requests = requestsData?.data?.items || [];\r\n  const totalPages = requestsData?.data?.pages || 0;\r\n  const totalItems = requestsData?.data?.total || 0;\r\n  const stats = statsData?.data || {\r\n    total: 0,\r\n    pending: 0,\r\n    approved: 0,\r\n    rejected: 0,\r\n    this_month: 0,\r\n  };\r\n\r\n  // 🔥 통계 계산 (실제 API 데이터와 현재 데이터 모두 사용)\r\n  const totalRequests = stats?.total || requests.length || 0;\r\n  const completedRequests = stats?.approved || requests.filter(req => req.status === 'COMPLETED').length || 0;\r\n  const pendingRequests = stats?.pending || requests.filter(req => req.status === 'SUBMITTED' || req.status === 'PENDING').length || 0;\r\n  const rejectedRequests = stats?.rejected || requests.filter(req => req.status === 'CANCELLED' || req.status === 'REJECTED').length || 0;\r\n\r\n  if (isLoading && !requestsData) {\r\n    return <LoadingSpinner text=\"구매 요청 데이터를 불러오는 중...\" />;\r\n  }\r\n\r\n  if (error) {\r\n    console.error('Purchase requests error:', error);\r\n    return (\r\n      <Container>\r\n        <PageHeader>\r\n          <PageTitle>구매 요청 관리</PageTitle>\r\n        </PageHeader>\r\n        <Card>\r\n          <ErrorContainer>\r\n            <AlertCircle size={48} className=\"error-icon\" />\r\n            <div className=\"error-title\">데이터를 불러올 수 없습니다</div>\r\n            <div className=\"error-message\">\r\n              백엔드 서버가 실행되지 않았거나 구매 요청 API가 구현되지 않았습니다.\r\n              <br />\r\n              서버 상태를 확인해주세요.\r\n            </div>\r\n            <Button onClick={handleRefresh} disabled={isLoading}>\r\n              <RefreshCw size={16} />\r\n              다시 시도\r\n            </Button>\r\n          </ErrorContainer>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader>\r\n        <PageTitle>구매 요청 관리</PageTitle>\r\n        <PageSubtitle>\r\n          구매 요청을 등록하고 승인 프로세스를 관리할 수 있습니다.\r\n          {totalItems > 0 && ` 총 ${totalItems.toLocaleString()}건의 요청이 있습니다.`}\r\n        </PageSubtitle>\r\n      </PageHeader>\r\n\r\n      {/* 🎨 개선된 통계 카드 (두 번째 코드 스타일) */}\r\n      <StatsContainer>\r\n        <StatCard $color=\"#3b82f6\">\r\n          <div className=\"stat-header\">\r\n            <FileText size={24} />\r\n            <span>전체 요청</span>\r\n          </div>\r\n          <div className=\"stat-value\">{totalRequests.toLocaleString()}</div>\r\n          <div className=\"stat-label\">총 구매 요청</div>\r\n          {stats.this_month > 0 && (\r\n            <div className=\"stat-change positive\">\r\n              이번 달 +{stats.this_month}\r\n            </div>\r\n          )}\r\n        </StatCard>\r\n\r\n        <StatCard $color=\"#f59e0b\">\r\n          <div className=\"stat-header\">\r\n            <Clock size={24} />\r\n            <span>승인 대기</span>\r\n          </div>\r\n          <div className=\"stat-value\">{pendingRequests.toLocaleString()}</div>\r\n          <div className=\"stat-label\">처리 대기중</div>\r\n        </StatCard>\r\n\r\n        <StatCard $color=\"#10b981\">\r\n          <div className=\"stat-header\">\r\n            <Check size={24} />\r\n            <span>승인 완료</span>\r\n          </div>\r\n          <div className=\"stat-value\">{completedRequests.toLocaleString()}</div>\r\n          <div className=\"stat-label\">승인된 요청</div>\r\n        </StatCard>\r\n\r\n        <StatCard $color=\"#ef4444\">\r\n          <div className=\"stat-header\">\r\n            <X size={24} />\r\n            <span>거절됨</span>\r\n          </div>\r\n          <div className=\"stat-value\">{rejectedRequests.toLocaleString()}</div>\r\n          <div className=\"stat-label\">거절된 요청</div>\r\n        </StatCard>\r\n      </StatsContainer>\r\n\r\n      <ContentCard>\r\n        <FilterSection>\r\n          <FilterContainer>\r\n            <PurchaseRequestFilters onFilter={handleFilterChange} />\r\n            \r\n            <ActionButtons>\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={handleRefresh}\r\n                disabled={isLoading}\r\n                size=\"sm\"\r\n                title=\"새로고침\"\r\n              >\r\n                <RefreshCw size={16} />\r\n                <span>새로고침</span>\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={handleExport}\r\n                disabled={exportMutation.isPending}\r\n                loading={exportMutation.isPending}\r\n                size=\"sm\"\r\n                title=\"Excel 다운로드\"\r\n              >\r\n                <Download size={16} />\r\n                <span>Excel 다운로드</span>\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => setIsExcelModalOpen(true)}\r\n                size=\"sm\"\r\n                title=\"Excel 일괄 업로드\"\r\n                style={{\r\n                  background: 'linear-gradient(135deg, #10b981, #059669)',\r\n                  color: 'white',\r\n                  borderColor: '#10b981'\r\n                }}\r\n              >\r\n                <Upload size={16} />\r\n                <span>Excel 업로드</span>\r\n              </Button>\r\n              <Button \r\n                onClick={() => setIsFormModalOpen(true)}\r\n                size=\"sm\"\r\n                title=\"구매 요청 추가\"\r\n              >\r\n                <Plus size={16} />\r\n                <span>구매 요청</span>\r\n              </Button>\r\n            </ActionButtons>\r\n          </FilterContainer>\r\n        </FilterSection>\r\n\r\n        {/* 테이블 컨테이너 */}\r\n        <TableContainer>\r\n          {requests.length === 0 && !isLoading ? (\r\n            <EmptyState>\r\n              <FileText size={48} className=\"empty-icon\" />\r\n              <div className=\"empty-title\">등록된 구매 요청이 없습니다</div>\r\n              <div className=\"empty-message\">\r\n                새로운 구매 요청을 등록하여 시작해보세요.\r\n              </div>\r\n              <div style={{ display: 'flex', gap: '12px', justifyContent: 'center' }}>\r\n                <Button onClick={() => setIsFormModalOpen(true)}>\r\n                  <Plus size={16} />\r\n                  개별 등록\r\n                </Button>\r\n                <Button variant=\"outline\" onClick={() => setIsExcelModalOpen(true)}>\r\n                  <Upload size={16} />\r\n                  Excel 업로드\r\n                </Button>\r\n              </div>\r\n            </EmptyState>\r\n          ) : (\r\n            <>\r\n              <Table\r\n                columns={columns}\r\n                data={requests}\r\n                loading={isLoading}\r\n                emptyMessage=\"검색 조건에 맞는 구매 요청이 없습니다.\"\r\n              />\r\n\r\n              {/* 페이지네이션 */}\r\n              {totalPages > 1 && (\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  totalPages={totalPages}\r\n                  onPageChange={setCurrentPage}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </TableContainer>\r\n      </ContentCard>\r\n\r\n      {/* 구매 요청 등록/수정 모달 */}\r\n      <Modal\r\n        isOpen={isFormModalOpen}\r\n        onClose={handleFormCancel}\r\n        title={editingRequest ? '구매 요청 수정' : '새 구매 요청 등록'}\r\n        size=\"xl\"\r\n      >\r\n        <PurchaseRequestForm\r\n          onSuccess={handleFormSuccess}\r\n          onCancel={handleFormCancel}\r\n          initialData={editingRequest || undefined}\r\n          isEdit={!!editingRequest}\r\n        />\r\n      </Modal>\r\n\r\n      {/* Excel 일괄 업로드 모달 */}\r\n      <ExcelBulkUpload\r\n        isOpen={isExcelModalOpen}\r\n        onClose={() => setIsExcelModalOpen(false)}\r\n        onSuccess={handleExcelSuccess}\r\n      />\r\n\r\n      {/* 상세보기 모달 */}\r\n      {viewingRequest && (\r\n        <RequestDetailModal\r\n          request={viewingRequest}\r\n          isOpen={isDetailModalOpen}\r\n          onClose={() => {\r\n            setIsDetailModalOpen(false);\r\n            setViewingRequest(null);\r\n          }}\r\n          onEdit={() => {\r\n            setEditingRequest(viewingRequest);\r\n            setIsFormModalOpen(true);\r\n            setIsDetailModalOpen(false);\r\n            setViewingRequest(null);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* 🔥 구매완료 확인 다이얼로그 (첫 번째 코드 스타일) */}\r\n      {confirmingItem && (\r\n        <ConfirmDialog onClick={cancelPurchaseComplete}>\r\n          <ConfirmContent onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"confirm-icon\">\r\n              <Package2 size={32} />\r\n            </div>\r\n            \r\n            <div className=\"confirm-title\">구매완료 + 품목등록</div>\r\n            \r\n            <div className=\"confirm-message\">\r\n              아래 구매 요청을 완료하고 품목관리에 등록하시겠습니까?\r\n            </div>\r\n            \r\n            <div className=\"confirm-message\" style={{ color: '#10b981', fontWeight: 'bold' }}>\r\n              ✨ 1) 구매 요청 상태를 '완료'로 변경<br/>\r\n              ✨ 2) 품목관리에 자동 등록 후 해당 페이지로 이동\r\n            </div>\r\n            \r\n            <div className=\"item-info\">\r\n              <div className=\"info-row\">\r\n                <span className=\"label\">품목명:</span>\r\n                <span className=\"value\">{confirmingItem.item_name}</span>\r\n              </div>\r\n              <div className=\"info-row\">\r\n                <span className=\"label\">수량:</span>\r\n                <span className=\"value\" style={{ display: 'inline', whiteSpace: 'nowrap' }}>\r\n                  {confirmingItem.quantity}&nbsp;{confirmingItem.unit || '개'}\r\n                </span>\r\n              </div>\r\n              <div className=\"info-row\">\r\n                <span className=\"label\">요청자:</span>\r\n                <span className=\"value\">{confirmingItem.requester_name}</span>\r\n              </div>\r\n              <div className=\"info-row\">\r\n                <span className=\"label\">부서:</span>\r\n                <span className=\"value\">{confirmingItem.department}</span>\r\n              </div>\r\n              {confirmingItem.total_budget && (\r\n                <div className=\"info-row\">\r\n                  <span className=\"label\">예산:</span>\r\n                  <span className=\"value\">{confirmingItem.total_budget.toLocaleString()}원</span>\r\n                </div>\r\n              )}\r\n              <div className=\"info-row\">\r\n                <span className=\"label\">생성될 품목코드:</span>\r\n                <span className=\"value\" style={{ color: '#3b82f6', fontWeight: 'bold' }}>\r\n                  ITM-{new Date().toISOString().split('T')[0].replace(/-/g, '')}-{confirmingItem.id.toString().padStart(4, '0')}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"button-group\">\r\n              <Button \r\n                variant=\"outline\" \r\n                onClick={cancelPurchaseComplete}\r\n                size=\"lg\"\r\n              >\r\n                취소\r\n              </Button>\r\n              <Button \r\n                onClick={confirmPurchaseComplete}\r\n                size=\"lg\"\r\n                loading={completePurchaseMutation.isPending}\r\n                disabled={completePurchaseMutation.isPending}\r\n                style={{\r\n                  background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',\r\n                  border: 'none'\r\n                }}\r\n              >\r\n                <Package2 size={18} />\r\n                구매완료 + 품목등록\r\n              </Button>\r\n            </div>\r\n          </ConfirmContent>\r\n        </ConfirmDialog>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PurchaseRequestPage;","// client/src/components/upload/UploadPage.tsx\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { toast } from 'react-toastify';\r\nimport { Upload, FileText, Download, AlertCircle, CheckCircle } from 'lucide-react';\r\nimport Card from '../common/Card';\r\nimport Button from '../common/Button';\r\nimport { uploadApi } from '../../services/api';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst PageTitle = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n  color: ${props => props.theme.colors.text};\r\n`;\r\n\r\nconst PageSubtitle = styled.p`\r\n  color: ${props => props.theme.colors.textSecondary};\r\n  margin-bottom: 30px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst UploadArea = styled.div<{ isDragOver: boolean; disabled?: boolean }>`\r\n  border: 2px dashed ${props => \r\n    props.disabled \r\n      ? props.theme.colors.border \r\n      : props.isDragOver \r\n        ? props.theme.colors.primary \r\n        : props.theme.colors.border\r\n  };\r\n  border-radius: ${props => props.theme.borderRadius.lg};\r\n  padding: 60px 20px;\r\n  text-align: center;\r\n  background: ${props => \r\n    props.disabled\r\n      ? props.theme.colors.background\r\n      : props.isDragOver \r\n        ? props.theme.colors.primary + '05' \r\n        : props.theme.colors.surface\r\n  };\r\n  transition: all 0.3s ease;\r\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\r\n  opacity: ${props => props.disabled ? 0.6 : 1};\r\n  \r\n  &:hover {\r\n    border-color: ${props => props.disabled ? props.theme.colors.border : props.theme.colors.primary};\r\n    background: ${props => props.disabled ? props.theme.colors.background : props.theme.colors.primary + '05'};\r\n  }\r\n  \r\n  .upload-icon {\r\n    margin-bottom: 20px;\r\n    opacity: 0.5;\r\n  }\r\n  \r\n  .upload-text {\r\n    font-size: 1.1rem;\r\n    margin-bottom: 10px;\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n  \r\n  .upload-hint {\r\n    color: ${props => props.theme.colors.textSecondary};\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst HiddenInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst ResultSection = styled.div`\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst InfoSection = styled(Card)`\r\n  margin-bottom: 30px;\r\n  \r\n  .info-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    margin-bottom: 20px;\r\n    \r\n    h3 {\r\n      margin: 0;\r\n      color: ${props => props.theme.colors.text};\r\n    }\r\n  }\r\n  \r\n  .info-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    gap: 20px;\r\n  }\r\n  \r\n  .info-item {\r\n    .label {\r\n      font-size: 0.9rem;\r\n      color: ${props => props.theme.colors.textSecondary};\r\n      margin-bottom: 5px;\r\n    }\r\n    \r\n    .value {\r\n      font-weight: 500;\r\n      color: ${props => props.theme.colors.text};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProgressBar = styled.div<{ progress: number }>`\r\n  width: 100%;\r\n  height: 8px;\r\n  background: ${props => props.theme.colors.background};\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin: 20px 0;\r\n  \r\n  .progress-fill {\r\n    height: 100%;\r\n    background: ${props => props.theme.colors.primary};\r\n    width: ${props => props.progress}%;\r\n    transition: width 0.3s ease;\r\n  }\r\n`;\r\n\r\nconst ResultCard = styled(Card)<{ success?: boolean }>`\r\n  border-left: 4px solid ${props => props.success ? props.theme.colors.success : props.theme.colors.error};\r\n  \r\n  .result-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n    margin-bottom: 15px;\r\n    \r\n    .result-icon {\r\n      color: ${props => props.success ? props.theme.colors.success : props.theme.colors.error};\r\n    }\r\n    \r\n    .result-title {\r\n      font-size: 1.1rem;\r\n      font-weight: 600;\r\n      color: ${props => props.success ? props.theme.colors.success : props.theme.colors.error};\r\n    }\r\n  }\r\n  \r\n  .result-details {\r\n    margin-bottom: 20px;\r\n    \r\n    .detail-item {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 8px;\r\n      \r\n      .label {\r\n        color: ${props => props.theme.colors.textSecondary};\r\n      }\r\n      \r\n      .value {\r\n        font-weight: 500;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface UploadProgress {\r\n  loaded: number;\r\n  total: number;\r\n  percentage: number;\r\n}\r\n\r\nconst UploadPage: React.FC = () => {\r\n  const queryClient = useQueryClient();\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const [uploadResult, setUploadResult] = useState<any>(null);\r\n  const [uploadProgress, setUploadProgress] = useState<UploadProgress | null>(null);\r\n\r\n  // 업로드 정보 조회\r\n  const { data: uploadInfo } = useQuery({\r\n    queryKey: ['upload-info'],\r\n    queryFn: uploadApi.getUploadInfo,\r\n  });\r\n\r\n  // 템플릿 정보 조회\r\n  const { data: templateInfo } = useQuery({\r\n    queryKey: ['upload-template'],\r\n    queryFn: uploadApi.getTemplate,\r\n  });\r\n\r\n  const uploadMutation = useMutation({\r\n    mutationFn: uploadApi.uploadExcel,\r\n    onSuccess: (data) => {\r\n      setUploadResult(data);\r\n      setUploadProgress(null);\r\n      queryClient.invalidateQueries({ queryKey: ['inventory'] });\r\n      queryClient.invalidateQueries({ queryKey: ['inventory-stats'] });\r\n      toast.success(`Excel 파일이 업로드되었습니다. ${data.data?.itemCount || 0}개 항목이 처리되었습니다.`);\r\n    },\r\n    onError: (error: any) => {\r\n      setUploadProgress(null);\r\n      const errorMessage = error.response?.data?.message || '업로드 중 오류가 발생했습니다.';\r\n      setUploadResult({ success: false, error: errorMessage });\r\n      toast.error(errorMessage);\r\n    },\r\n  });\r\n\r\n  const handleFileSelect = (file: File) => {\r\n    if (!file) return;\r\n    \r\n    // 파일 확장자 검증\r\n    if (!file.name.endsWith('.xlsx') && !file.name.endsWith('.xls')) {\r\n      toast.error('Excel 파일만 업로드 가능합니다.');\r\n      return;\r\n    }\r\n    \r\n    // 파일 크기 검증 (50MB)\r\n    const maxSize = 50 * 1024 * 1024;\r\n    if (file.size > maxSize) {\r\n      toast.error('파일 크기는 50MB를 초과할 수 없습니다.');\r\n      return;\r\n    }\r\n    \r\n    // 업로드 시작\r\n    setUploadResult(null);\r\n    setUploadProgress({ loaded: 0, total: file.size, percentage: 0 });\r\n    \r\n    uploadMutation.mutate(file);\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    if (uploadMutation.isPending) return;\r\n    \r\n    const files = e.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      handleFileSelect(files[0]);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    if (!uploadMutation.isPending) {\r\n      setDragOver(true);\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setDragOver(false);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (uploadMutation.isPending) return;\r\n    const input = document.getElementById('file-input') as HTMLInputElement;\r\n    input?.click();\r\n  };\r\n\r\n  const downloadTemplate = () => {\r\n    // 템플릿 다운로드 로직 (실제 백엔드에서 파일 제공시)\r\n    toast.info('템플릿 다운로드 기능이 곧 추가될 예정입니다.');\r\n  };\r\n\r\n  const uploadInfoData = uploadInfo?.data || {};\r\n  const templateData = templateInfo?.data || {};\r\n\r\n  return (\r\n    <Container>\r\n      <PageTitle>파일 관리</PageTitle>\r\n      <PageSubtitle>Excel 파일을 업로드하여 품목 데이터를 일괄 등록할 수 있습니다.</PageSubtitle>\r\n\r\n      {/* 업로드 정보 */}\r\n      <InfoSection>\r\n        <div className=\"info-header\">\r\n          <FileText size={24} />\r\n          <h3>업로드 정보</h3>\r\n        </div>\r\n        <div className=\"info-grid\">\r\n          <div className=\"info-item\">\r\n            <div className=\"label\">지원 형식</div>\r\n            <div className=\"value\">{uploadInfoData.supported_formats?.join(', ') || '.xlsx, .xls'}</div>\r\n          </div>\r\n          <div className=\"info-item\">\r\n            <div className=\"label\">최대 파일 크기</div>\r\n            <div className=\"value\">{uploadInfoData.max_file_size || '50MB'}</div>\r\n          </div>\r\n          <div className=\"info-item\">\r\n            <div className=\"label\">최대 파일 수</div>\r\n            <div className=\"value\">{uploadInfoData.max_files || '1개'}</div>\r\n          </div>\r\n          <div className=\"info-item\">\r\n            <div className=\"label\">필수 컬럼</div>\r\n            <div className=\"value\">\r\n              {templateData.required_columns?.slice(0, 3).join(', ') || '품목코드, 품목명, 카테고리'}\r\n              {templateData.required_columns?.length > 3 && '...'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div style={{ marginTop: '20px' }}>\r\n          <Button variant=\"outline\" onClick={downloadTemplate}>\r\n            <Download size={16} />\r\n            Excel 템플릿 다운로드\r\n          </Button>\r\n        </div>\r\n      </InfoSection>\r\n\r\n      <Card>\r\n        <UploadArea\r\n          isDragOver={dragOver}\r\n          disabled={uploadMutation.isPending}\r\n          onDrop={handleDrop}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onClick={handleClick}\r\n        >\r\n          <Upload size={48} className=\"upload-icon\" />\r\n          <div className=\"upload-text\">\r\n            {uploadMutation.isPending \r\n              ? '파일을 업로드하는 중...' \r\n              : 'Excel 파일을 여기에 끌어다 놓거나 클릭하여 선택하세요'\r\n            }\r\n          </div>\r\n          <div className=\"upload-hint\">\r\n            .xlsx, .xls 파일만 지원됩니다 (최대 50MB)\r\n          </div>\r\n        </UploadArea>\r\n        \r\n        <HiddenInput\r\n          id=\"file-input\"\r\n          type=\"file\"\r\n          accept=\".xlsx,.xls\"\r\n          onChange={(e) => {\r\n            const file = e.target.files?.[0];\r\n            if (file) handleFileSelect(file);\r\n          }}\r\n          disabled={uploadMutation.isPending}\r\n        />\r\n\r\n        {/* 업로드 진행률 */}\r\n        {uploadProgress && (\r\n          <div style={{ marginTop: '20px' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\r\n              <span>업로드 진행중...</span>\r\n              <span>{uploadProgress.percentage.toFixed(1)}%</span>\r\n            </div>\r\n            <ProgressBar progress={uploadProgress.percentage}>\r\n              <div className=\"progress-fill\" />\r\n            </ProgressBar>\r\n          </div>\r\n        )}\r\n\r\n        {/* 업로드 결과 */}\r\n        {uploadResult && (\r\n          <ResultSection>\r\n            <ResultCard success={uploadResult.success !== false}>\r\n              <div className=\"result-header\">\r\n                <div className=\"result-icon\">\r\n                  {uploadResult.success !== false ? (\r\n                    <CheckCircle size={24} />\r\n                  ) : (\r\n                    <AlertCircle size={24} />\r\n                  )}\r\n                </div>\r\n                <div className=\"result-title\">\r\n                  {uploadResult.success !== false ? '업로드 완료!' : '업로드 실패'}\r\n                </div>\r\n              </div>\r\n\r\n              {uploadResult.success !== false ? (\r\n                <div className=\"result-details\">\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"label\">처리된 항목:</span>\r\n                    <span className=\"value\">{uploadResult.data?.itemCount || 0}개</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"label\">파일명:</span>\r\n                    <span className=\"value\">{uploadResult.filename || '알 수 없음'}</span>\r\n                  </div>\r\n                  <div className=\"detail-item\">\r\n                    <span className=\"label\">업로드 시간:</span>\r\n                    <span className=\"value\">{new Date().toLocaleString('ko-KR')}</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"result-details\">\r\n                  <p style={{ color: '#EF4444', marginBottom: '10px' }}>\r\n                    {uploadResult.error}\r\n                  </p>\r\n                </div>\r\n              )}\r\n\r\n              {uploadResult.success !== false && (\r\n                <Button variant=\"outline\" onClick={() => window.location.href = '/inventory'}>\r\n                  <FileText size={16} />\r\n                  재고 목록 확인\r\n                </Button>\r\n              )}\r\n            </ResultCard>\r\n          </ResultSection>\r\n        )}\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UploadPage;","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\n// import { ReactQueryDevtools } from '@tanstack/react-query-devtools';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyles, theme } from './styles/theme';\r\nimport queryClient from './hooks/queryClient';\r\n// Components - 실제 디렉토리 구조에 맞게 수정\r\nimport Layout from './components/common/Layout';\r\nimport DashboardPage from './components/dashboard/DashboardPage';  // pages가 아닌 components에 있음\r\nimport InventoryPage from './components/inventory/InventoryPage';\r\nimport ReceiptPage from './components/receipt/ReceiptPage';\r\nimport PurchaseRequestPage from './components/purshase/PurchaseRequestPage';  // purshase (오타) 폴더명 그대로\r\n// import KakaoPage from './components/kakao/KakaoPage';\r\nimport UploadPage from './components/upload/UploadPage';\r\nimport StatisticsPage from './components/statistics/StatisticsPage';\r\nimport LogsPage from './components/logs/LogsPage';\r\n\r\n// Styles\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<Layout />}>\r\n                <Route index element={<Navigate to=\"/dashboard\" replace />} />\r\n                <Route path=\"dashboard\" element={<DashboardPage />} />\r\n                <Route path=\"inventory\" element={<InventoryPage />} />\r\n                <Route path=\"receipts\" element={<ReceiptPage />} />\r\n                <Route path=\"purchase-requests\" element={<PurchaseRequestPage />} />\r\n                {/* <Route path=\"kakao\" element={<KakaoPage />} /> */}\r\n                <Route path=\"upload\" element={<UploadPage />} />\r\n                {/* <Route path=\"statistics\" element={<StatisticsPage />} /> */}\r\n                {/* <Route path=\"logs\" element={<LogsPage />} /> */}\r\n                <Route path=\"*\" element={<Navigate to=\"/dashboard\" replace />} />\r\n              </Route>\r\n            </Routes>\r\n            \r\n            {/* Toast 알림 */}\r\n            <ToastContainer\r\n              position=\"top-right\"\r\n              autoClose={3000}\r\n              hideProgressBar={false}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n              theme=\"light\"\r\n            />\r\n          </div>\r\n        </Router>\r\n        \r\n        {/* React Query DevTools는 프로덕션에서 제거 */}\r\n        {/* \r\n        {import.meta.env.DEV && (\r\n          <ReactQueryDevtools initialIsOpen={false} />\r\n        )}\r\n        */}\r\n      </ThemeProvider>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { theme, GlobalStyles } from './styles/theme';\r\nimport App from './App.tsx';  // 확장자 명시\r\nimport './styles/globals.css';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>\r\n);"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","theme","GlobalStyles","createGlobalStyle","props","r","t","clsx","u","o","s","i","y","v","T","E","C","I","_","O","L","N","M","R","w","x","$","P","B","D","A","z","F","H","S","Q","queryClient","QueryClient","API_BASE_URL","api","axios","response","error","apiRequest","url","params","data","purchaseApi","page","limit","dateFrom","dateTo","filters","queryParams","value","id","_a","_b","_c","_d","_e","file","maxSize","formData","blob","link","today","filteredParams","requestId","days","completionData","inventoryData","inventoryApi","sortOptions","itemId","options","dateStr","timeStr","itemCode","receiptData","receiptNumber","quantity","skip","errorData","imageType","imageId","fromItemId","transferData","usageData","images","receipt","uploadPromises","index","successfulUploads","result","itemData","updatedItem","receiptApi","sampleReceipts","uploadApi","dashboardApi","apiUtils","api$1","SidebarContainer","styled","SidebarHeader","Logo","ToggleButton","Navigation","NavGroup","NavGroupTitle","NavList","NavItem","NavLinkStyled","NavLink","NavBadge","CompactNotification","Tooltip","NavItemWithTooltip","ConnectionStatus","usePurchaseRequestCount","apiConnected","setApiConnected","useState","pendingRequestsData","isError","useQuery","request","Sidebar","isOpen","onToggle","location","useLocation","pendingCount","mainMenuItems","LayoutDashboard","ShoppingCart","Package","ClipboardCheck","MessageSquare","dataMenuItems","Upload","BarChart3","History","managementMenuItems","Building","CreditCard","Users","Bell","Settings","renderNavItem","item","Icon","isActive","badgeCount","showBadge","jsx","jsxs","ChevronLeft","ChevronRight","HeaderContainer","HeaderLeft","HeaderRight","MenuButton","SearchContainer","SearchInput","SearchIcon","Search","IconButton","NotificationBadge","UserSection","UserAvatar","UserName","Divider","Header","onToggleSidebar","sidebarCollapsed","Menu","LogOut","LayoutContainer","MainContent","ContentArea","Layout","sidebarOpen","setSidebarOpen","toggleSidebar","Outlet","StyledCard","Card","children","className","onClick","$hover","padding","margin","background","border","borderRadius","boxShadow","ButtonContainer","colors","LoadingSpinner","Button","variant","size","disabled","loading","type","title","spin","keyframes","SpinnerContainer","Spinner","LoadingText","text","Container","PageTitle","PageSubtitle","StatsGrid","StatCard","ContentGrid","RecentActivity","QuickActions","DashboardPage","stats","isLoading","AlertTriangle","dashboardStats","DollarSign","activity","CheckCircle","TableContainer","StyledTable","TableHeader","TableHeaderCell","SortButton","SortIcon","TableBody","TableRow","TableCell","Checkbox","EmptyState","LoadingState","Table","columns","emptyMessage","selectable","selectedItems","onSelectItems","onSort","sortField","sortDirection","handleSelectAll","checked","handleSelectItem","selected","handleSort","field","direction","isAllSelected","isIndeterminate","input","column","ChevronUp","ChevronDown","isSelected","displayValue","PaginationContainer","PageButton","PageInfo","Pagination","currentPage","totalPages","onPageChange","getVisiblePages","range","rangeWithDots","visiblePages","React","ModalOverlay","ModalContainer","ModalHeader","ModalTitle","CloseButton","ModalContent","Modal","onClose","closable","useEffect","handleEscKey","event","handleOverlayClick","X","FilterContainer","SearchGroup","FilterSelect","FilterButton","ActiveFilters","FilterTag","InventoryFilters","onFilter","setFilters","handleFilterChange","key","newFilters","removeFilter","clearAllFilters","hasActiveFilters","getFilterDisplayName","names","Fragment","Filter","InputContainer","Label","StyledInput","Input","label","onChange","placeholder","required","SelectContainer","StyledSelect","Select","handleChange","option","FormContainer","FormGrid","FormGroup","ButtonGroup","Title","SectionTitle","InventoryForm","onSubmit","onCancel","setFormData","tagsInput","setTagsInput","handleSubmit","tags","tag","submitData","prev","categoryOptions","unitOptions","currencyOptions","SelectLabel","SelectButton","DropdownMenu","OptionItem","ImageUploadSection","DragOverlay","ImagePreviewGrid","ImagePreviewItem","ImageCounter","ProcessingIndicator","DEPARTMENT_OPTIONS","ReceiptModal","requireImages","fileInputRef","useRef","departmentSelectRef","isDepartmentOpen","setIsDepartmentOpen","selectedImages","setSelectedImages","imagePreviewUrls","setImagePreviewUrls","isDragging","setIsDragging","isProcessingImages","setIsProcessingImages","handleDragEvents","useCallback","rect","files","handleFileSelect","handleInputChange","handleDepartmentSelect","departmentValue","handleDepartmentToggle","imageFiles","isImage","isValidSize","promises","resolve","reject","reader","newPreviewUrls","handleFileInputChange","removeImage","urlToRemove","conditionOptions","dept","Image","GuideContainer","GuideCard","StepContainer","StepItem","WarningBox","TipBox","RequiredColumns","ExcelUploadGuide","isPurchase","FileSpreadsheet","Download","FileText","Info","UploadContainer","InfoSection","TemplateSection","UploadArea","ProgressSection","ResultSection","HiddenInput","LoadingOverlay","InventoryExcelUpload","onSuccess","useQueryClient","dragOver","setDragOver","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadResult","setUploadResult","showGuide","setShowGuide","currentStep","setCurrentStep","uploadMutation","useMutation","progressInterval","context","successMsg","toast","downloadTemplateMutation","handleUpload","handleDrop","handleDragOver","handleDragLeave","handleFileInputClick","resetUpload","handleClose","formatFileSize","bytes","sizes","ArrowLeft","Database","Loader","AlertCircle","code","RefreshCw","CurrentFileSection","SelectedFilePreview","CloseButtonStyled","FileValidationMessage","TransactionDocumentModal","uploadError","setUploadError","validationMessage","setValidationMessage","validateFile","validation","handleFileInput","handleViewCurrent","fullUrl","handleRemoveFile","getFileTypeIcon","hasCurrentFile","ExternalLink","ActionButtons","StatsContainer","ReceiptStatusBadge","ActionButtonGroup","QuantityInfo","ImageViewerModal","ImageViewerContainer","ImageViewerHeader","ImageViewerControls","ImageViewerContent","ViewerImage","TransactionDocumentPreview","TransactionStatusBadge","TransactionButtonGroup","ZoomButton","DownloadButton","InventoryPage","setCurrentPage","isFormModalOpen","setIsFormModalOpen","isReceiptModalOpen","setIsReceiptModalOpen","editingItem","setEditingItem","selectedItem","setSelectedItem","isReceiptWithImagesModalOpen","setIsReceiptWithImagesModalOpen","selectedItemForReceipt","setSelectedItemForReceipt","selectedImageUrl","setSelectedImageUrl","selectedImageName","setSelectedImageName","imageZoom","setImageZoom","isExcelUploadModalOpen","setIsExcelUploadModalOpen","sortBy","setSortBy","sortOrder","setSortOrder","isTransactionUploadModalOpen","setIsTransactionUploadModalOpen","selectedItemForTransaction","setSelectedItemForTransaction","selectedTransactionUrl","setSelectedTransactionUrl","selectedTransactionName","setSelectedTransactionName","refetch","statsData","addReceiptWithImagesMutation","image","responseData","variables","createItemMutation","handleFormModalClose","updateItemMutation","deleteItemMutation","addReceiptMutation","exportMutation","uploadTransactionDocumentMutation","hasReceipts","hasReceiptHistory","hasLastReceived","hasReceivedBy","hasTotalReceived","getStockStatusColor","status","getFullImageUrl","imageUrl","handleImageClick","itemName","imageIndex","handleImageDownload","getFileExtension","match","handleZoomIn","handleZoomOut","handleCloseImageViewer","useMemo","getLastFourDigits","aNum","handleKeyDown","handleTransactionDocumentUpload","handleTransactionDocumentSubmit","handleTransactionDocumentClick","transactionUrl","handleCloseTransactionViewer","allImageUrls","displayImages","hasDocument","itemHasReceipts","handleReceiptWithImages","handleAddReceipt","handleEdit","Edit","handleDelete","Trash2","handleReceiptWithImagesSubmit","handleSearch","searchFilters","handleExport","handleFormSubmit","handleReceiptSubmit","items","Plus","ZoomOut","ZoomIn","ErrorContainer","ReceiptPage","FormSection","FormRow","TextArea","ErrorMessage","PurchaseRequestForm","initialData","isEdit","urgencyOptions","purchaseMethodOptions","departmentOptions","errors","setErrors","getInitialFormData","createMutation","updateMutation","validateForm","newErrors","estimatedPrice","totalBudget","missingFields","Calendar","requiredColumns","ExcelBulkUpload","number","commonInputStyle","FilterInput","DateSeparator","ResetButton","PurchaseRequestFilters","handleReset","DetailContainer","HeaderSection","StatusDisplay","QuickStats","Section","InfoGrid","InfoCard","SpecsCard","JustificationSection","UrgencyBadge","CategoryBadge","RequestDetailModal","onEdit","onApprove","statusLabels","urgencyLabels","categoryLabels","formatDate","dateString","formatCurrency","amount","canEdit","canApprove","renderWithLinks","urlRegex","part","Hash","User","Check","PageHeader","ContentCard","FilterSection","StatusBadge","ConfirmDialog","ConfirmContent","PurchaseRequestPage","navigate","useNavigate","isExcelModalOpen","setIsExcelModalOpen","editingRequest","setEditingRequest","viewingRequest","setViewingRequest","isDetailModalOpen","setIsDetailModalOpen","confirmingItem","setConfirmingItem","requestsData","completePurchaseMutation","requestData","updateResult","inventoryResult","failureCount","attemptIndex","oldData","errorMessage","deleteMutation","method","newItems","oldStats","urgencyMap","statusMap","isCompleted","hasInventoryItem","Package2","handlePurchaseComplete","CheckCircle2","handleView","Eye","confirmMessage","handleRefresh","handleFormSuccess","handleFormCancel","handleExcelSuccess","confirmPurchaseComplete","cancelPurchaseComplete","requests","totalItems","totalRequests","completedRequests","req","pendingRequests","rejectedRequests","Clock","ProgressBar","ResultCard","UploadPage","uploadInfo","templateInfo","handleClick","downloadTemplate","uploadInfoData","templateData","App","QueryClientProvider","ThemeProvider","Router","Routes","Route","Navigate","ToastContainer","root","ReactDOM"],"mappings":"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","x_google_ignoreList":[0,1,2,4,5]}